{"version":3,"sources":["../src/styled.ts"],"names":["hiddenCss","css","HiddenContent","styled","span","BaseButton","button","ClearButton","ClearBoth","div","DropdownButton","MenuItemList","ul","attrs","role","Input","input","InputGroup","MenuGroupHeader","h2","props","fgColor","bgColor","MenuItemLi","li","active","OptionContainer","OptionSubTitle","OptionContent","OptionIconContainer","RouteName","StaticMenuItemList","StopContentContainer","StopDistance","StopIconAndDistanceContainer","StopName","StopRoutes","rotateAnimation","keyframes","Spinner","FASpinner"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAEA,MAAMA,SAAS,OAAGC,qBAAH,gFAAf;;AAQO,MAAMC,aAAa,GAAGC,0BAAOC,IAAV;AAAA;AAAA;AAAA,aACtBJ,SADsB,CAAnB;;;;AAIA,MAAMK,UAAU,GAAGF,0BAAOG,MAAV;AAAA;AAAA;AAAA,oCAAhB;;;AAKA,MAAMC,WAAW,GAAG,+BAAOF,UAAP,CAAH;AAAA;AAAA;AAAA,6CAAjB;;;AAMA,MAAMG,SAAS,GAAGL,0BAAOM,GAAV;AAAA;AAAA;AAAA,mBAAf;;;AAIA,MAAMC,cAAc,GAAG,+BAAOL,UAAP,CAAH;AAAA;AAAA;AAAA,mBAApB;;;AAIA,MAAMM,YAAY,GAAGR,0BAAOS,EAAP,CAAUC,KAAV,CAAgB;AAC1CC,EAAAA,IAAI,EAAE;AADoC,CAAhB,CAAH;AAAA;AAAA;AAAA,wVAuBnBd,SAvBmB,CAAlB;;;;AA2BA,MAAMe,KAAK,GAAGZ,0BAAOa,KAAV;AAAA;AAAA;AAAA,gEAAX;;;;AAOA,MAAMC,UAAU,GAAGd,0BAAOM,GAAV;AAAA;AAAA;AAAA,iHAAhB;;;;AAQA,MAAMS,eAAe,GAAGf,0BAAOgB,EAAV;AAAA;AAAA;AAAA,kKAIjBC,KAAK,IAAIA,KAAK,CAACC,OAAN,IAAiB,MAJT,EAKND,KAAK,IAAIA,KAAK,CAACE,OAAN,IAAiB,MALpB,CAArB;;;;AAeA,MAAMC,UAAU,GAAGpB,0BAAOqB,EAAV;AAAA;AAAA;AAAA,yRAcDJ,KAAK,IAAKA,KAAK,CAACK,MAAN,GAAe,SAAf,GAA2B,aAdpC,EAgBZL,KAAK,IAAKA,KAAK,CAACK,MAAN,GAAe,MAAf,GAAwB,MAhBtB,CAAhB;;;;AAyBA,MAAMC,eAAe,GAAGvB,0BAAOC,IAAV;AAAA;AAAA;AAAA,yDAArB;;;;AAMA,MAAMuB,cAAc,GAAGxB,0BAAOC,IAAV;AAAA;AAAA;AAAA,qDAApB;;;;AAMA,MAAMwB,aAAa,GAAGzB,0BAAOC,IAAV;AAAA;AAAA;AAAA,mFAAnB;;;;AAOA,MAAMyB,mBAAmB,GAAG1B,0BAAOC,IAAV;AAAA;AAAA;AAAA,mBAAzB;;;;AAIA,MAAM0B,SAAS,GAAG3B,0BAAOC,IAAV;AAAA;AAAA;AAAA,+EAAf;;;AAOA,MAAM2B,kBAAkB,GAAG,+BAAOpB,YAAP,CAAH;AAAA;AAAA;AAAA,kDAAxB;;;AAMA,MAAMqB,oBAAoB,GAAG7B,0BAAOC,IAAV;AAAA;AAAA;AAAA,yBAA1B;;;;AAIA,MAAM6B,YAAY,GAAG9B,0BAAOC,IAAV;AAAA;AAAA;AAAA,sBAAlB;;;;AAIA,MAAM8B,4BAA4B,GAAG/B,0BAAOC,IAAV;AAAA;AAAA;AAAA,mCAAlC;;;;AAKA,MAAM+B,QAAQ,GAAGhC,0BAAOC,IAAV;AAAA;AAAA;AAAA,QAAd;;;;AAEA,MAAMgC,UAAU,GAAGjC,0BAAOC,IAAV;AAAA;AAAA;AAAA,sBAAhB;;;AAIP,MAAMiC,eAAe,OAAGC,2BAAH,iEAArB;AASO,MAAMC,OAAO,GAAG,+BAAOC,gBAAP,CAAH;AAAA;AAAA;AAAA,6CACLH,eADK,CAAb","sourcesContent":["import styled, { css, keyframes } from \"styled-components\";\nimport { Spinner as FASpinner } from \"@styled-icons/fa-solid/Spinner\";\n\nconst hiddenCss = css`\n  clip: rect(0, 0, 0, 0);\n  display: inline-block;\n  height: 0;\n  overflow: hidden;\n  width: 0;\n`;\n\nexport const HiddenContent = styled.span`\n  ${hiddenCss}\n`;\n\nexport const BaseButton = styled.button`\n  border: none;\n  background: none;\n`;\n\nexport const ClearButton = styled(BaseButton)`\n  color: #888;\n  cursor: pointer;\n  width: 30px;\n`;\n\nexport const ClearBoth = styled.div`\n  clear: both;\n`;\n\nexport const DropdownButton = styled(BaseButton)`\n  width: 30px;\n`;\n\nexport const MenuItemList = styled.ul.attrs({\n  role: \"listbox\"\n})`\n  background-clip: padding-box;\n  background-color: #fff;\n  border-radius: 4px;\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\n  float: left;\n  font-size: 14px;\n  left: 0;\n  list-style: none;\n  margin: 2px 0 0;\n  min-width: 160px;\n  padding: 5px 0;\n  position: absolute;\n  text-align: left;\n  top: 100%;\n  /* this is an annoyingly high number, but is needed to be on top of some otp-rr components */\n  z-index: 1000000;\n\n  /* If the associated input is not in an expanded state, hide the list. */\n  input[aria-expanded=\"false\"] ~ & {\n    ${hiddenCss}\n  }\n`;\n\nexport const Input = styled.input`\n  border: none;\n  box-shadow: none;\n  font-size: 17px;\n  outline: none;\n`;\n\nexport const InputGroup = styled.div`\n  border-bottom: 1px solid #000;\n  border-collapse: separate;\n  display: table;\n  margin-bottom: 15px;\n  position: relative;\n`;\n\nexport const MenuGroupHeader = styled.h2<{\n  bgColor?: string;\n  fgColor?: string;\n}>`\n  color: ${props => props.fgColor || \"#eee\"};\n  background-color: ${props => props.bgColor || \"#333\"};\n  font-size: 12px;\n  font-weight: normal;\n  line-height: 1.42857143;\n  margin: 0;\n  padding: 0px 10px;\n  text-align: center;\n  white-space: nowrap;\n`;\n\nexport const MenuItemLi = styled.li<{ active?: boolean }>`\n  &:hover {\n    /* TODO: adjust highlight color based on props.color? */\n    background-color: #f5f5f5;\n    cursor: pointer;\n  }\n\n  /* For disabled (aria-hidden) elements,\n     show an arrow pointer (no I-beam) and don't highlight the background. */\n  &[aria-hidden=\"true\"]:hover {\n    background-color: unset;\n    cursor: default;\n  }\n\n  background-color: ${props => (props.active ? \"#337ab7\" : \"transparent\")};\n  clear: both;\n  color: ${props => (props.active ? \"#fff\" : \"#333\")};\n  display: block;\n  font-weight: 400;\n  line-height: 1.42857143;\n  padding: 3px 20px;\n  text-decoration: none;\n  white-space: nowrap;\n`;\n\nexport const OptionContainer = styled.span`\n  display: block;\n  padding-top: 5px;\n  padding-bottom: 3px;\n`;\n\nexport const OptionSubTitle = styled.span`\n  color: #686868;\n  font-size: 12px;\n  margin-left: 6px;\n`;\n\nexport const OptionContent = styled.span`\n  margin-left: 30px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const OptionIconContainer = styled.span`\n  float: left;\n`;\n\nexport const RouteName = styled.span`\n  background-color: gray;\n  color: white;\n  padding: 2px 3px 0px;\n  margin-right: 5px;\n`;\n\nexport const StaticMenuItemList = styled(MenuItemList)`\n  border: none;\n  box-shadow: none;\n  display: block;\n`;\n\nexport const StopContentContainer = styled.span`\n  margin-left: 30px;\n`;\n\nexport const StopDistance = styled.span`\n  font-size: 8px;\n`;\n\nexport const StopIconAndDistanceContainer = styled.span`\n  float: left;\n  padding-top: 3px;\n`;\n\nexport const StopName = styled.span``;\n\nexport const StopRoutes = styled.span`\n  font-size: 9px;\n`;\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const Spinner = styled(FASpinner)`\n  animation: ${rotateAnimation} 1.2s linear infinite;\n`;\n"],"file":"styled.js"}