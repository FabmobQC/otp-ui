{"version":3,"sources":["../src/options.tsx"],"names":["ICON_SIZE","GeocodedOptionIcon","feature","properties","source","MenuItem","active","children","disabled","id","onClick","undefined","Option","classes","color","icon","isActive","subTitle","title","TransitStopOption","stop","stopOptionIcon","dist","name","code","routes","map","route","shortName","longName","UserLocationIcon","userLocation","getLocationName","location","intl","type","formatMessage","defaultMessage","description","getStoredPlaceName","withDetails","detailText","getRenderData","setLocation","Icon","displayName","locationSelected"],"mappings":"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","sourcesContent":["import { humanizeDistanceStringImperial } from \"@opentripplanner/humanize-distance\";\nimport { Stop, UserLocation } from \"@opentripplanner/types\";\nimport React from \"react\";\nimport { IntlShape } from \"react-intl\";\nimport { Bus } from \"@styled-icons/fa-solid/Bus\";\nimport { Briefcase } from \"@styled-icons/fa-solid/Briefcase\";\nimport { Home } from \"@styled-icons/fa-solid/Home\";\nimport { MapMarker } from \"@styled-icons/fa-solid/MapMarker\";\nimport { MapPin } from \"@styled-icons/fa-solid/MapPin\";\n\nimport * as S from \"./styled\";\nimport {\n  UserLocationIconType,\n  UserLocationSelectedHandler,\n  UserLocationRenderData,\n  UserLocationIconProps\n} from \"./types\";\nimport { addInParentheses } from \"./utils\";\n\nexport const ICON_SIZE = 13;\n\nexport function GeocodedOptionIcon({\n  feature = {}\n}: {\n  feature: {\n    properties?: { source: string };\n  };\n}): React.ReactElement {\n  const { properties } = feature;\n  if (feature && properties) {\n    const { source } = properties;\n    if (source === \"transit\") {\n      return <Bus size={ICON_SIZE} />;\n    }\n  }\n  return <MapPin size={ICON_SIZE} />;\n}\n\nexport const MenuItem = ({\n  active = false,\n  children,\n  disabled = false,\n  id,\n  onClick = null\n}: {\n  active?: boolean;\n  children: React.ReactNode;\n  disabled?: boolean;\n  id?: string;\n  onClick?: () => void;\n}): React.ReactElement => (\n  <S.MenuItemLi\n    // Hide disabled choices from screen readers (a relevant status is already provided).\n    aria-hidden={disabled || undefined}\n    /* A known issue prevents combobox results to be read out on Voiceover. This is a hack to ensure \n    AT hear all options - see https://react-spectrum.adobe.com/blog/building-a-combobox.html#voiceover */\n    aria-live={active ? \"assertive\" : \"off\"}\n    active={active}\n    id={id}\n    onClick={disabled ? null : onClick}\n    role=\"option\"\n    aria-selected={active}\n    tabIndex={-1}\n  >\n    {children}\n  </S.MenuItemLi>\n);\n\nexport function Option({\n  classes = \"\",\n  color = null,\n  disabled = false,\n  icon = null,\n  id,\n  isActive = false,\n  onClick,\n  subTitle = null,\n  title = null\n}: {\n  classes?: string;\n  color?: string;\n  disabled?: boolean;\n  icon?: React.ReactNode;\n  id?: string;\n  isActive?: boolean;\n  onClick?: () => void;\n  subTitle?: React.ReactNode;\n  title?: React.ReactNode;\n}): React.ReactElement {\n  return (\n    <MenuItem active={isActive} disabled={disabled} id={id} onClick={onClick}>\n      <S.OptionContainer className={classes}>\n        <S.OptionIconContainer style={{ color }}>{icon}</S.OptionIconContainer>\n        <S.OptionContent>\n          {title}\n          {subTitle && (\n            <S.OptionSubTitle>\n              <S.HiddenContent>, </S.HiddenContent>\n              {subTitle}\n            </S.OptionSubTitle>\n          )}\n        </S.OptionContent>\n      </S.OptionContainer>\n    </MenuItem>\n  );\n}\n\nexport function TransitStopOption({\n  id,\n  isActive = false,\n  onClick,\n  stop,\n  stopOptionIcon\n}: {\n  id?: string;\n  isActive?: boolean;\n  onClick: () => void;\n  stop: Stop;\n  stopOptionIcon: React.ReactNode;\n}): React.ReactElement {\n  return (\n    <MenuItem active={isActive} id={id} onClick={onClick}>\n      <S.StopIconAndDistanceContainer>\n        {stopOptionIcon}\n        <S.StopDistance>\n          {humanizeDistanceStringImperial(stop.dist, true)}\n        </S.StopDistance>\n      </S.StopIconAndDistanceContainer>\n      <S.StopContentContainer>\n        <S.StopName>\n          {stop.name} ({stop.code})\n        </S.StopName>\n        <S.StopRoutes>\n          {(stop.routes || []).map(route => {\n            const name = route.shortName || route.longName;\n            return <S.RouteName key={`route-${name}`}>{name}</S.RouteName>;\n          })}\n        </S.StopRoutes>\n      </S.StopContentContainer>\n      <S.ClearBoth />\n    </MenuItem>\n  );\n}\n\nexport function UserLocationIcon({\n  userLocation\n}: UserLocationIconProps): React.ReactElement {\n  if (userLocation.icon === \"work\") return <Briefcase size={ICON_SIZE} />;\n  if (userLocation.icon === \"home\") return <Home size={ICON_SIZE} />;\n  return <MapMarker size={ICON_SIZE} />;\n}\n\nfunction getLocationName(location: UserLocation, intl: IntlShape): string {\n  switch (location.type) {\n    case \"home\":\n      return intl.formatMessage({\n        defaultMessage: \"Home\",\n        description: \"The home location\",\n        id: \"otpUi.LocationField.homeLocation\"\n      });\n    case \"work\":\n      return intl.formatMessage({\n        defaultMessage: \"Work\",\n        description: \"The work location\",\n        id: \"otpUi.LocationField.workLocation\"\n      });\n    default:\n      return location.name;\n  }\n}\n\nexport function getStoredPlaceName(\n  location: UserLocation,\n  intl: IntlShape,\n  withDetails = true\n): string {\n  let detailText;\n  if (withDetails) {\n    if (location.type === \"home\" || location.type === \"work\") {\n      detailText = location.name;\n    } else if (location.type === \"stop\") {\n      detailText = location.id;\n    }\n    // The case below for recent searches is not currently being used.\n    // } else if (location.type === \"recent\" && location.timestamp) {\n    //   detailText = moment(location.timestamp).fromNow();\n  }\n\n  return addInParentheses(intl, getLocationName(location, intl), detailText);\n}\n\n/**\n * Helper to populate the display name for a user-saved location.\n */\nexport function getRenderData(\n  location: UserLocation,\n  setLocation: UserLocationSelectedHandler,\n  Icon: UserLocationIconType,\n  intl: IntlShape\n): UserLocationRenderData {\n  return {\n    displayName: getStoredPlaceName(location, intl),\n    icon: <Icon userLocation={location} />,\n    // Create the event handler for when the location is selected\n    locationSelected: () => setLocation(location, \"SAVED\")\n  };\n}\n"],"file":"options.js"}