{"version":3,"sources":["../src/styled.ts"],"names":["styled","css","keyframes","Spinner","FASpinner","hiddenCss","HiddenContent","span","BaseButton","button","ClearButton","ClearBoth","div","DropdownButton","MenuItemList","ul","attrs","role","Input","input","InputGroup","MenuGroupHeader","h2","props","fgColor","bgColor","MenuItemLi","li","active","OptionContainer","OptionSubTitle","OptionContent","OptionIconContainer","RouteName","StaticMenuItemList","StopContentContainer","StopDistance","StopIconAndDistanceContainer","StopName","StopRoutes","rotateAnimation"],"mappings":"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","sourcesContent":["import styled, { css, keyframes } from \"styled-components\";\nimport { Spinner as FASpinner } from \"@styled-icons/fa-solid/Spinner\";\n\nconst hiddenCss = css`\n  clip: rect(0, 0, 0, 0);\n  display: inline-block;\n  height: 0;\n  overflow: hidden;\n  width: 0;\n`;\n\nexport const HiddenContent = styled.span`\n  ${hiddenCss}\n`;\n\nexport const BaseButton = styled.button`\n  border: none;\n  background: none;\n`;\n\nexport const ClearButton = styled(BaseButton)`\n  color: #888;\n  cursor: pointer;\n  width: 30px;\n`;\n\nexport const ClearBoth = styled.div`\n  clear: both;\n`;\n\nexport const DropdownButton = styled(BaseButton)`\n  width: 30px;\n`;\n\nexport const MenuItemList = styled.ul.attrs({\n  role: \"listbox\"\n})`\n  background-clip: padding-box;\n  background-color: #fff;\n  border-radius: 4px;\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);\n  float: left;\n  font-size: 14px;\n  left: 0;\n  list-style: none;\n  margin: 2px 0 0;\n  min-width: 160px;\n  padding: 5px 0;\n  position: absolute;\n  text-align: left;\n  top: 100%;\n  /* this is an annoyingly high number, but is needed to be on top of some otp-rr components */\n  z-index: 1000000;\n\n  /* If the associated input is not in an expanded state, hide the list. */\n  input[aria-expanded=\"false\"] ~ & {\n    ${hiddenCss}\n  }\n`;\n\nexport const Input = styled.input`\n  border: none;\n  box-shadow: none;\n  font-size: 17px;\n  outline: none;\n`;\n\nexport const InputGroup = styled.div`\n  border-bottom: 1px solid #000;\n  border-collapse: separate;\n  display: table;\n  margin-bottom: 15px;\n  position: relative;\n`;\n\nexport const MenuGroupHeader = styled.h2<{\n  bgColor?: string;\n  fgColor?: string;\n}>`\n  color: ${props => props.fgColor || \"#eee\"};\n  background-color: ${props => props.bgColor || \"#333\"};\n  font-size: 12px;\n  font-weight: normal;\n  line-height: 1.42857143;\n  margin: 0;\n  padding: 0px 10px;\n  text-align: center;\n  white-space: nowrap;\n`;\n\nexport const MenuItemLi = styled.li<{ active?: boolean }>`\n  &:hover {\n    /* TODO: adjust highlight color based on props.color? */\n    background-color: #f5f5f5;\n    cursor: pointer;\n  }\n\n  /* For disabled (aria-hidden) elements,\n     show an arrow pointer (no I-beam) and don't highlight the background. */\n  &[aria-hidden=\"true\"]:hover {\n    background-color: unset;\n    cursor: default;\n  }\n\n  background-color: ${props => (props.active ? \"#337ab7\" : \"transparent\")};\n  clear: both;\n  color: ${props => (props.active ? \"#fff\" : \"#333\")};\n  display: block;\n  font-weight: 400;\n  line-height: 1.42857143;\n  padding: 3px 20px;\n  text-decoration: none;\n  white-space: nowrap;\n`;\n\nexport const OptionContainer = styled.span`\n  display: block;\n  padding-top: 5px;\n  padding-bottom: 3px;\n`;\n\nexport const OptionSubTitle = styled.span`\n  color: #686868;\n  font-size: 12px;\n  margin-left: 6px;\n`;\n\nexport const OptionContent = styled.span`\n  margin-left: 30px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nexport const OptionIconContainer = styled.span`\n  float: left;\n`;\n\nexport const RouteName = styled.span`\n  background-color: gray;\n  color: white;\n  padding: 2px 3px 0px;\n  margin-right: 5px;\n`;\n\nexport const StaticMenuItemList = styled(MenuItemList)`\n  border: none;\n  box-shadow: none;\n  display: block;\n`;\n\nexport const StopContentContainer = styled.span`\n  margin-left: 30px;\n`;\n\nexport const StopDistance = styled.span`\n  font-size: 8px;\n`;\n\nexport const StopIconAndDistanceContainer = styled.span`\n  float: left;\n  padding-top: 3px;\n`;\n\nexport const StopName = styled.span``;\n\nexport const StopRoutes = styled.span`\n  font-size: 9px;\n`;\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const Spinner = styled(FASpinner)`\n  animation: ${rotateAnimation} 1.2s linear infinite;\n`;\n"],"file":"styled.js"}