{"version":3,"sources":["../src/index.tsx"],"names":["React","FormattedMessage","AccessLeg","S","TNCLeg","TransitLeg","defaultMessages","strongText","PrintableItinerary","className","config","itinerary","LegIcon","legs","length","place","from","name","strong","map","leg","k","transitLeg","interlineWithPreviousLeg","rideHailingEstimate","Styled"],"mappings":"AACA,OAAOA,KAAP,MAAoC,OAApC;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,QAA5C;;AAaA,SAASC,kBAAT,OAKwB;AAAA,MAJtBC,SAIsB,QAJtBA,SAIsB;AAAA,MAHtBC,MAGsB,QAHtBA,MAGsB;AAAA,MAFtBC,SAEsB,QAFtBA,SAEsB;AAAA,MADtBC,OACsB,QADtBA,OACsB;AACtB,sBACE,oBAAC,CAAD,CAAG,kBAAH;AAAsB,IAAA,SAAS,EAAEH;AAAjC,KACGE,SAAS,CAACE,IAAV,CAAeC,MAAf,GAAwB,CAAxB,iBACC,oBAAC,CAAD,CAAG,YAAH,qBACE,oBAAC,CAAD,CAAG,OAAH,qBACE,oBAAC,CAAD,CAAG,SAAH,qBACE,oBAAC,gBAAD;AACE,IAAA,cAAc,EACZR,eAAe,CAAC,iCAAD,CAFnB;AAIE,IAAA,WAAW,EAAC,gCAJd;AAKE,IAAA,EAAE,EAAC,iCALL;AAME,IAAA,MAAM,EAAE;AACNS,MAAAA,KAAK,EAAEJ,SAAS,CAACE,IAAV,CAAe,CAAf,EAAkBG,IAAlB,CAAuBC,IADxB;AAENC,MAAAA,MAAM,EAAEX;AAFF;AANV,IADF,CADF,CADF,CAFJ,EAoBGI,SAAS,CAACE,IAAV,CAAeM,GAAf,CAAmB,UAACC,GAAD,EAAMC,CAAN;AAAA,WAClBD,GAAG,CAACE,UAAJ,gBACE,oBAAC,UAAD;AACE,MAAA,gBAAgB,EACdD,CAAC,GAAGV,SAAS,CAACE,IAAV,CAAeC,MAAf,GAAwB,CAA5B,IACAH,SAAS,CAACE,IAAV,CAAeQ,CAAC,GAAG,CAAnB,EAAsBE,wBAH1B;AAKE,MAAA,GAAG,EAAEF,CALP;AAME,MAAA,GAAG,EAAED,GANP;AAOE,MAAA,OAAO,EAAER;AAPX,MADF,GAUIQ,GAAG,CAACI,mBAAJ,gBACF,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEJ,GAAb;AAAkB,MAAA,OAAO,EAAER,OAA3B;AAAoC,MAAA,GAAG,EAAES;AAAzC,MADE,gBAGF,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAEX,MAAnB;AAA2B,MAAA,GAAG,EAAEW,CAAhC;AAAmC,MAAA,GAAG,EAAED,GAAxC;AAA6C,MAAA,OAAO,EAAER;AAAtD,MAdgB;AAAA,GAAnB,CApBH,CADF;AAwCD;;AAED,eAAeJ,kBAAf,C,CAEA;;AACA,SAASL,CAAC,IAAIsB,MAAd","sourcesContent":["import { Config, Itinerary, LegIconComponent } from \"@opentripplanner/types\";\nimport React, { ReactElement } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport AccessLeg from \"./access-leg\";\nimport * as S from \"./styled\";\nimport TNCLeg from \"./tnc-leg\";\nimport TransitLeg from \"./transit-leg\";\nimport { defaultMessages, strongText } from \"./util\";\n\ninterface Props {\n  /** Used for additional styling with styled components for example. */\n  className?: string;\n  /** Contains OTP configuration details. */\n  config: Config;\n  /** Itinerary that the user has selected to view, contains multiple legs. */\n  itinerary: Itinerary;\n  /** A component class that is used to render icons for legs of an itinerary. */\n  LegIcon: LegIconComponent;\n}\n\nfunction PrintableItinerary({\n  className,\n  config,\n  itinerary,\n  LegIcon\n}: Props): ReactElement {\n  return (\n    <S.PrintableItinerary className={className}>\n      {itinerary.legs.length > 0 && (\n        <S.CollapsedTop>\n          <S.LegBody>\n            <S.LegHeader>\n              <FormattedMessage\n                defaultMessage={\n                  defaultMessages[\"otpUi.PrintableItinerary.depart\"]\n                }\n                description=\"Indicates where to depart from\"\n                id=\"otpUi.PrintableItinerary.depart\"\n                values={{\n                  place: itinerary.legs[0].from.name,\n                  strong: strongText\n                }}\n              />\n            </S.LegHeader>\n          </S.LegBody>\n        </S.CollapsedTop>\n      )}\n      {itinerary.legs.map((leg, k) =>\n        leg.transitLeg ? (\n          <TransitLeg\n            interlineFollows={\n              k < itinerary.legs.length - 1 &&\n              itinerary.legs[k + 1].interlineWithPreviousLeg\n            }\n            key={k}\n            leg={leg}\n            LegIcon={LegIcon}\n          />\n        ) : leg.rideHailingEstimate ? (\n          <TNCLeg leg={leg} LegIcon={LegIcon} key={k} />\n        ) : (\n          <AccessLeg config={config} key={k} leg={leg} LegIcon={LegIcon} />\n        )\n      )}\n    </S.PrintableItinerary>\n  );\n}\n\nexport default PrintableItinerary;\n\n// Rename styled components for export.\nexport { S as Styled };\n"],"file":"index.js"}