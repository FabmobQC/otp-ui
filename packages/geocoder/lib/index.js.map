{"version":3,"sources":["../src/index.ts"],"names":["getGeocoder","geocoderConfig","type","NoApiGeocoder","ArcGISGeocoder","arcgis","PeliasGeocoder","pelias","HereGeocoder","here","PhotonGeocoder","photon","OTPGeocoder","otp","console","error"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAMA;AACA,MAAMA,WAAW,GAAG,qBAASC,cAAD,IAAuD;AACjF,MAAI,CAACA,cAAD,IAAmB,CAACA,cAAc,CAACC,IAAvC,EAA6C;AAC3C,WAAO,IAAIC,cAAJ,EAAP;AACD;;AACD,QAAM;AAAED,IAAAA;AAAF,MAAWD,cAAjB;;AACA,UAAQC,IAAR;AACE,SAAK,QAAL;AACE,aAAO,IAAIE,eAAJ,CAAmBC,MAAnB,EAA2BJ,cAA3B,CAAP;;AACF,SAAK,QAAL;AACE,aAAO,IAAIK,eAAJ,CAAmBC,MAAnB,EAA2BN,cAA3B,CAAP;;AACF,SAAK,MAAL;AACE,aAAO,IAAIO,cAAJ,CAAiBC,IAAjB,EAAuBR,cAAvB,CAAP;;AACF,SAAK,QAAL;AACE,aAAO,IAAIS,gBAAJ,CAAmBC,MAAnB,EAA2BV,cAA3B,CAAP;;AACF,SAAK,KAAL;AACE,aAAO,IAAIW,aAAJ,CAAgBC,GAAhB,EAAqBZ,cAArB,CAAP;;AACF;AACEa,MAAAA,OAAO,CAACC,KAAR,CAAe,2BAA0Bb,IAAK,yBAA9C;AACA,aAAO,IAAIC,cAAJ,EAAP;AAbJ;AAeD,CApBmB,CAApB;eAsBeH,W","sourcesContent":["import * as arcgis from \"@conveyal/geocoder-arcgis-geojson\";\nimport * as pelias from \"isomorphic-mapzen-search\";\nimport memoize from \"lodash.memoize\";\nimport * as here from \"./apis/here\";\nimport * as photon from \"./apis/photon\";\nimport * as otp from \"./apis/otp\";\n\nimport ArcGISGeocoder from \"./geocoders/arcgis\";\nimport NoApiGeocoder from \"./geocoders/noapi\";\nimport PeliasGeocoder from \"./geocoders/pelias\";\nimport HereGeocoder from \"./geocoders/here\";\nimport PhotonGeocoder from \"./geocoders/photon\";\nimport OTPGeocoder from \"./geocoders/otp\";\n\n// Prettier does not support typescript annotation\n// eslint-disable-next-line prettier/prettier\nimport type { AutocompleteQuery, GeocoderConfig, ReverseQuery, SearchQuery } from \"./geocoders/types\"\n\n// Create a memoized getter to avoid recreating new geocoders each time.\nconst getGeocoder = memoize((geocoderConfig: GeocoderConfig & { type: string }) => {\n  if (!geocoderConfig || !geocoderConfig.type) {\n    return new NoApiGeocoder();\n  }\n  const { type } = geocoderConfig;\n  switch (type) {\n    case \"ARCGIS\":\n      return new ArcGISGeocoder(arcgis, geocoderConfig);\n    case \"PELIAS\":\n      return new PeliasGeocoder(pelias, geocoderConfig);\n    case \"HERE\":\n      return new HereGeocoder(here, geocoderConfig);\n    case \"PHOTON\":\n      return new PhotonGeocoder(photon, geocoderConfig);\n    case \"OTP\":\n      return new OTPGeocoder(otp, geocoderConfig);\n    default:\n      console.error(`Unknown geocoder type: \"${type}\". Using NoApiGeocoder.`);\n      return new NoApiGeocoder();\n  }\n});\n\nexport default getGeocoder;\nexport type {\n  AutocompleteQuery,\n  GeocoderConfig,\n  ReverseQuery,\n  SearchQuery\n};\n"],"file":"index.js"}