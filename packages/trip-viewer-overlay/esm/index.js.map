{"version":3,"sources":["../src/index.tsx"],"names":["polyline","LngLatBounds","util","Layer","Source","useMap","React","useEffect","useMemo","TripViewerOverlay","props","path","tripData","visible","geometry","pts","decode","points","map","pt","reverse","bounds","reduce","bnds","coord","extend","current","length","every","Number","isFinite","fitMapBounds","geojson","type","coordinates","properties","color","opacity","weight"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,kBAArB;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,IAAT,QAAqB,2BAArB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,MAAxB,QAAsC,cAAtC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,QAA0C,OAA1C;;AAWA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAA+B;AACvD,MAAQC,IAAR,GAAoCD,KAApC,CAAQC,IAAR;AAAA,MAAcC,QAAd,GAAoCF,KAApC,CAAcE,QAAd;AAAA,MAAwBC,OAAxB,GAAoCH,KAApC,CAAwBG,OAAxB;AACA,MAAI,CAACD,QAAL,EAAe,OAAO,IAAP;AAEf,MAAQE,QAAR,GAAqBF,QAArB,CAAQE,QAAR;AAEA,MAAI,CAACA,QAAL,EAAe,OAAO,IAAP;AAEf,MAAMC,GAAG,GAAGf,QAAQ,CACjBgB,MADS,CACFF,QAAQ,CAACG,MADP,EAETC,GAFS,CAEL,UAACC,EAAD;AAAA,WAA0BA,EAAE,CAACC,OAAH,EAA1B;AAAA,GAFK,CAAZ;AAIA,MAAMC,MAAM,GAAGb,OAAO,CAAC,YAAM;AAC3B,WAAOO,GAAG,CAACO,MAAJ,CAAW,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACjC,aAAOD,IAAI,CAACE,MAAL,CAAYD,KAAZ,CAAP;AACD,KAFM,EAEJ,IAAIvB,YAAJ,CAAiBc,GAAG,CAAC,CAAD,CAApB,EAAyBA,GAAG,CAAC,CAAD,CAA5B,CAFI,CAAP;AAGD,GAJqB,EAInB,CAACA,GAAD,CAJmB,CAAtB;;AAMA,gBAAyBV,MAAM,EAA/B;AAAA,MAAiBa,GAAjB,WAAQQ,OAAR;;AACAnB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIW,GAAG,IAAIG,MAAM,CAACM,MAAP,KAAkB,CAAzB,IAA8BN,MAAM,CAACO,KAAP,CAAaC,MAAM,CAACC,QAApB,CAAlC,EAAiE;AAC/D5B,MAAAA,IAAI,CAAC6B,YAAL,CAAkBb,GAAlB,EAAuBG,MAAvB;AACD;AACF,GAJQ,EAIN,CAACH,GAAD,EAAMG,MAAN,CAJM,CAAT;AAMA,MAAI,CAACR,OAAD,IAAY,CAACE,GAAjB,EAAsB,OAAO,IAAP;AAEtB,MAAMiB,OAAwB,GAAG;AAC/BC,IAAAA,IAAI,EAAE,SADyB;AAE/BnB,IAAAA,QAAQ,EAAE;AAAEmB,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,WAAW,EAAEnB;AAAnC,KAFqB;AAG/BoB,IAAAA,UAAU,EAAE;AAHmB,GAAjC;AAMA,sBACE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,OAAX;AAAmB,IAAA,IAAI,EAAC,SAAxB;AAAkC,IAAA,IAAI,EAAEH;AAAxC,kBACE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,MAAM,EAAE;AAAE,kBAAY,OAAd;AAAuB,mBAAa;AAApC,KAFV;AAGE,IAAA,KAAK,EAAE;AACL,oBAAc,CAAArB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEyB,KAAN,KAAe,SADxB;AAEL,sBAAgB,CAAAzB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAE0B,OAAN,KAAiB,GAF5B;AAGL,oBAAc,CAAA1B,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAE2B,MAAN,KAAgB;AAHzB,KAHT;AAQE,IAAA,IAAI,EAAC;AARP,IADF,CADF;AAcD,CA/CD;;AAiDA,eAAe7B,iBAAf","sourcesContent":["import polyline from \"@mapbox/polyline\";\nimport { LngLatBounds } from \"maplibre-gl\";\nimport { util } from \"@opentripplanner/base-map\";\nimport { Layer, Source, useMap } from \"react-map-gl\";\nimport React, { useEffect, useMemo } from \"react\";\n\ntype Props = {\n  path?: {\n    color?: string;\n    opacity?: number;\n    weight?: number;\n  };\n  tripData: { geometry: { points: string; length: number } };\n  visible?: boolean;\n};\nconst TripViewerOverlay = (props: Props): JSX.Element => {\n  const { path, tripData, visible } = props;\n  if (!tripData) return null;\n\n  const { geometry } = tripData;\n\n  if (!geometry) return null;\n\n  const pts = polyline\n    .decode(geometry.points)\n    .map((pt: [number, number]) => pt.reverse());\n\n  const bounds = useMemo(() => {\n    return pts.reduce((bnds, coord) => {\n      return bnds.extend(coord);\n    }, new LngLatBounds(pts[0], pts[0]));\n  }, [pts]);\n\n  const { current: map } = useMap();\n  useEffect(() => {\n    if (map && bounds.length === 4 && bounds.every(Number.isFinite)) {\n      util.fitMapBounds(map, bounds);\n    }\n  }, [map, bounds]);\n\n  if (!visible || !pts) return null;\n\n  const geojson: GeoJSON.Feature = {\n    type: \"Feature\",\n    geometry: { type: \"LineString\", coordinates: pts },\n    properties: []\n  };\n\n  return (\n    <Source id=\"route\" type=\"geojson\" data={geojson}>\n      <Layer\n        id=\"route\"\n        layout={{ \"line-cap\": \"round\", \"line-join\": \"round\" }}\n        paint={{\n          \"line-color\": path?.color || \"#00bfff\",\n          \"line-opacity\": path?.opacity || 0.6,\n          \"line-width\": path?.weight || 8\n        }}\n        type=\"line\"\n      />\n    </Source>\n  );\n};\n\nexport default TripViewerOverlay;\n"],"file":"index.js"}