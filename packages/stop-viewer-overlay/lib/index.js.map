{"version":3,"sources":["../src/index.tsx"],"names":["StopViewerOverlay","stop","StopMarker","visible","current","flyTo","center","lon","lat"],"mappings":";;;;;;;AACA;;AACA;;;;;;AAIA;AACA;AACA;AACA;AACA,MAAMA,iBAAiB,GAAG,CAAC;AACzBC,EAAAA,IADyB;AAEzBC,EAAAA,UAFyB;AAGzBC,EAAAA;AAHyB,CAAD,KAQP;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAc,yBAApB;AACA;AACF;AACA;AACA;AACA;;AACE,wBAAU,MAAM;AACdA,IAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEC,KAAT,CAAe;AAAEC,MAAAA,MAAM,EAAE,CAACL,IAAI,CAACM,GAAN,EAAWN,IAAI,CAACO,GAAhB;AAAV,KAAf;AACD,GAFD,EAEG,CAACP,IAAI,CAACO,GAAN,EAAWP,IAAI,CAACM,GAAhB,CAFH,EAPiB,CAWjB;;AACA,MAAIJ,OAAO,KAAK,KAAZ,IAAqB,CAACF,IAAtB,IAA8B,CAACC,UAAnC,EAA+C,oBAAO,2DAAP;AAE/C,sBAAO,6BAAC,UAAD;AAAY,IAAA,IAAI,EAAED;AAAlB,IAAP;AACD,CAvBD;;eAyBeD,iB","sourcesContent":["import { Stop } from \"@opentripplanner/types\";\nimport { useMap } from \"react-map-gl\";\nimport React, { useEffect } from \"react\";\n\nexport type StopContainer = { stop: Stop };\n\n/**\n * This overlay is intended to highlight a specific stop on a map typically in\n * conjunction with some kind of stop viewer.\n */\nconst StopViewerOverlay = ({\n  stop,\n  StopMarker,\n  visible\n}: {\n  stop: Stop;\n  StopMarker: React.FunctionComponent<StopContainer>;\n  visible?: boolean;\n}): JSX.Element => {\n  const { current } = useMap();\n  /**\n   * Only reset map view if a new stop is selected. This prevents resetting the\n   * bounds if, for example, the arrival times have changed for the same stop\n   * in the viewer.\n   */\n  useEffect(() => {\n    current?.flyTo({ center: [stop.lon, stop.lat] });\n  }, [stop.lat, stop.lon]);\n\n  // Null can't be returned here -- react-map-gl dislikes null values as children\n  if (visible === false || !stop || !StopMarker) return <></>;\n\n  return <StopMarker stop={stop} />;\n};\n\nexport default StopViewerOverlay;\n"],"file":"index.js"}