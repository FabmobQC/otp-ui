{"version":3,"sources":["../src/fare-table.tsx"],"names":["React","styled","Transfer","getItineraryCost","getLegCost","getLegRouteName","useIntl","flatten","boldText","renderFare","defaultEnglishMessages","defaultMessages","TableHeader","thead","Table","table","TransferIcon","useGetHeaderString","headerKey","intl","formatMessage","id","description","defaultMessage","FareTypeTable","cols","legs","colsToRender","map","col","total","mediumId","riderCategoryId","filter","undefined","headerString","filteredLegs","leg","fareProducts","length","fare","columnHeaderKey","currency","code","amount","index","transferAmount","formatNumber","price","currencyDisplay","style","FareLegTable","layout","config"],"mappings":"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","sourcesContent":["import { Leg } from \"@opentripplanner/types\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Transfer } from \"@styled-icons/boxicons-regular/Transfer\";\n\nimport {\n  getItineraryCost,\n  getLegCost,\n  getLegRouteName\n} from \"@opentripplanner/core-utils/lib/itinerary\";\nimport { useIntl } from \"react-intl\";\nimport { flatten } from \"flat\";\nimport { boldText, renderFare } from \"./utils\";\n\nimport { FareLegTableProps, FareTableLayout } from \"./types\";\n\n// Load the default messages.\nimport defaultEnglishMessages from \"../i18n/en-US.yml\";\n\n// HACK: We should flatten the messages loaded above because\n// the YAML loaders behave differently between webpack and our version of jest:\n// - the yaml loader for webpack returns a nested object,\n// - the yaml loader for jest returns messages with flattened ids.\nconst defaultMessages: Record<string, string> = flatten(defaultEnglishMessages);\n\ninterface FareTypeTableProps extends FareTableLayout {\n  legs: Leg[];\n}\n\nconst TableHeader = styled.thead`\n  th {\n    font-weight: normal;\n    min-width: 5ch;\n    padding: 0.75em 1.5em;\n    text-align: center;\n  }\n  th:nth-of-type(2n + 1) {\n    background: #cccccc22;\n  }\n  th.main {\n    background: #333333;\n    color: #ffffffcc;\n  }\n`;\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  display: block;\n  margin-bottom: 16px;\n  padding: 0;\n\n  td {\n    text-align: right;\n  }\n  td:nth-of-type(2n + 1) {\n    background: #cccccc22;\n  }\n  td.no-zebra {\n    background: none;\n  }\n  th:first-of-type {\n    height: 40px;\n  }\n`;\n\nconst TransferIcon = styled(Transfer)`\n  padding-left: 4px;\n`;\n\nconst useGetHeaderString = (headerKey: string): string => {\n  const intl = useIntl();\n  return intl.formatMessage({\n    id: `otpUi.TripDetails.FareTable.${headerKey}`,\n    description: `Fare leg table header for key ${headerKey}`,\n    defaultMessage:\n      defaultEnglishMessages[`otpUi.TripDetails.FareTable.${headerKey}`]\n  });\n};\n\nconst FareTypeTable = ({\n  cols,\n  headerKey,\n  legs\n}: FareTypeTableProps): JSX.Element => {\n  const intl = useIntl();\n  // FIXME: Is there a nicer way to do this?\n  const colsToRender = cols\n    .map(col => ({\n      ...col,\n      total: getItineraryCost(legs, col.mediumId, col.riderCategoryId)\n    }))\n    .filter(col => col.total !== undefined);\n\n  const headerString = useGetHeaderString(headerKey);\n\n  const filteredLegs = legs.filter(leg => leg.fareProducts?.length > 0);\n  if (colsToRender.length) {\n    return (\n      <Table>\n        <TableHeader>\n          <th className=\"main\" scope=\"col\">\n            {boldText(headerString)}\n          </th>\n          {colsToRender.map(col => {\n            const fare = col.total;\n            return (\n              <th\n                scope=\"col\"\n                key={\n                  col.columnHeaderKey ||\n                  `${col.mediumId}-${col.riderCategoryId}`\n                }\n              >\n                {boldText(useGetHeaderString(col.columnHeaderKey))}\n                <br />\n                {renderFare(fare?.currency?.code, fare?.amount || 0)}\n              </th>\n            );\n          })}\n        </TableHeader>\n        {filteredLegs.map((leg, index) => (\n          <tr key={index}>\n            <td className=\"no-zebra\">{getLegRouteName(leg)}</td>\n            {colsToRender.map(col => {\n              const fare = getLegCost(leg, col.mediumId, col.riderCategoryId);\n              return (\n                <td\n                  key={col.columnHeaderKey}\n                  title={\n                    \"transferAmount\" in fare &&\n                    fare?.transferAmount?.amount > 0 &&\n                    intl.formatMessage(\n                      {\n                        defaultMessage:\n                          defaultMessages[\n                            \"otpUi.TripDetails.transferDiscountExplanation\"\n                          ],\n                        description:\n                          \"Text explaining the transfer discount applied to this fare.\",\n                        id: \"otpUi.TripDetails.transferDiscountExplanation\"\n                      },\n                      {\n                        transferAmount: intl.formatNumber(\n                          fare?.transferAmount?.amount,\n                          {\n                            currency: fare?.price?.currency?.code,\n                            currencyDisplay: \"narrowSymbol\",\n                            style: \"currency\"\n                          }\n                        )\n                      }\n                    )\n                  }\n                >\n                  {\"transferAmount\" in fare &&\n                    fare?.transferAmount?.amount > 0 && (\n                      <>\n                        <TransferIcon size={16} />{\" \"}\n                      </>\n                    )}\n                  {renderFare(\n                    fare?.price?.currency?.code,\n                    fare?.price?.amount || 0\n                  )}\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </Table>\n    );\n  }\n  return null;\n};\n\nconst FareLegTable = ({ layout, legs }: FareLegTableProps): JSX.Element => {\n  // the layout argument contains an object for every table to be displayed\n  return (\n    <div>\n      {layout.map(config => (\n        <FareTypeTable\n          cols={config.cols}\n          headerKey={config.headerKey}\n          key={config.headerKey}\n          legs={legs}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default FareLegTable;\n"],"file":"fare-table.js"}