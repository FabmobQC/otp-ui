{"version":3,"sources":["../src/index.tsx"],"names":["coreUtils","React","FormattedMessage","FormattedNumber","CalendarAlt","Heartbeat","MoneyBillAlt","Leaf","Route","flatten","S","TripDetail","FareLegTable","boldText","renderFare","defaultEnglishMessages","defaultMessages","CO2DescriptionLink","contents","DefaultTimeActiveDetails","bikeMinutes","walkMinutes","strong","TripDetails","className","co2Config","defaultFareType","DepartureDetails","displayTimeActive","FareDetails","fareDetailsLayout","fareKeyNameMap","itinerary","TimeActiveDetails","fareResult","calculateTncFares","currencyCode","maxTNCFare","minTNCFare","legs","reduce","prev","leg","rideHailingEstimate","companies","provider","id","fareProducts","forEach","fp","mediumId","product","medium","riderCategoryId","riderCategory","fareTypes","find","ft","push","fare","length","defaultFareTotal","getItineraryCost","TransitFareWrapper","TransitFare","TransitFareSingle","fareNameFallback","undefined","display","name","headerKey","value","currency","code","amount","map","fareType","Object","values","join","digits","tncFare","toLowerCase","departureDate","Date","startTime","walkDurationSeconds","bikeDurationSeconds","mode","startsWith","duration","Math","round","minutesActive","co2","enabled","calculateEmissions","carbonIntensity","units","containsFlex","some","isFlex","pickupBookingInfo","filter","info","dropOffBookingInfo","totalDistance","total","distance","minutes","link","extraMessage","Set","message","Styled"],"mappings":"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","sourcesContent":["import coreUtils from \"@opentripplanner/core-utils\";\nimport { FareProductSelector } from \"@opentripplanner/types\";\nimport React, { ReactElement } from \"react\";\nimport { FormattedMessage, FormattedNumber } from \"react-intl\";\nimport { CalendarAlt } from \"@styled-icons/fa-solid/CalendarAlt\";\nimport { Heartbeat } from \"@styled-icons/fa-solid/Heartbeat\";\nimport { MoneyBillAlt } from \"@styled-icons/fa-solid/MoneyBillAlt\";\nimport { Leaf } from \"@styled-icons/fa-solid/Leaf\";\nimport { Route } from \"@styled-icons/fa-solid/Route\";\nimport { flatten } from \"flat\";\nimport * as S from \"./styled\";\nimport TripDetail from \"./trip-detail\";\nimport FareLegTable from \"./fare-table\";\nimport { boldText, renderFare } from \"./utils\";\n\nimport { TimeActiveDetailsProps, TripDetailsProps } from \"./types\";\n\n// Load the default messages.\nimport defaultEnglishMessages from \"../i18n/en-US.yml\";\n\n// HACK: We should flatten the messages loaded above because\n// the YAML loaders behave differently between webpack and our version of jest:\n// - the yaml loader for webpack returns a nested object,\n// - the yaml loader for jest returns messages with flattened ids.\nconst defaultMessages: Record<string, string> = flatten(defaultEnglishMessages);\n\nfunction CO2DescriptionLink(contents: ReactElement): ReactElement {\n  return (\n    <a\n      href=\"https://www.itf-oecd.org/sites/default/files/life-cycle-assessment-calculations-2020.xlsx\"\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n    >\n      {contents}\n    </a>\n  );\n}\n/**\n * Default rendering if no component is provided for the TimeActiveDetails\n * slot in the TripDetails component.\n */\nfunction DefaultTimeActiveDetails({\n  bikeMinutes,\n  walkMinutes\n}: TimeActiveDetailsProps): ReactElement {\n  return (\n    <FormattedMessage\n      defaultMessage={\n        defaultMessages[\"otpUi.TripDetails.timeActiveDescription\"]\n      }\n      description=\"Text describing the walking and biking durations of a trip.\"\n      id=\"otpUi.TripDetails.timeActiveDescription\"\n      values={{\n        bikeMinutes,\n        strong: boldText,\n        walkMinutes\n      }}\n    />\n  );\n}\n\n/**\n * Renders trip details such as departure instructions, fare amount, and minutes active.\n */\nexport function TripDetails({\n  className = \"\",\n  co2Config,\n  defaultFareType,\n  DepartureDetails = null,\n  displayTimeActive = true,\n  FareDetails = null,\n  fareDetailsLayout,\n  fareKeyNameMap = {},\n  itinerary,\n  TimeActiveDetails = DefaultTimeActiveDetails\n}: TripDetailsProps): ReactElement {\n  // process the transit fare\n  const fareResult = coreUtils.itinerary.calculateTncFares(itinerary);\n  const { currencyCode, maxTNCFare, minTNCFare } = fareResult;\n\n  const { companies, fareTypes } = itinerary.legs.reduce<{\n    companies: string;\n    fareTypes: FareProductSelector[];\n  }>(\n    (prev, leg) => {\n      if (leg.rideHailingEstimate) {\n        prev.companies = leg.rideHailingEstimate.provider.id;\n      }\n\n      if (leg.fareProducts) {\n        leg.fareProducts.forEach(fp => {\n          const mediumId = fp.product.medium?.id;\n          const riderCategoryId = fp.product.riderCategory?.id;\n          if (\n            !prev.fareTypes.find(\n              ft =>\n                ft.mediumId === mediumId &&\n                ft.riderCategoryId === riderCategoryId\n            )\n          ) {\n            prev.fareTypes.push({ mediumId, riderCategoryId });\n          }\n        });\n      }\n      return prev;\n    },\n    { companies: \"\", fareTypes: [] }\n  );\n\n  let fare;\n  if (fareTypes.length > 0 && defaultFareType) {\n    const defaultFareTotal = coreUtils.itinerary.getItineraryCost(\n      itinerary.legs,\n      defaultFareType.mediumId,\n      defaultFareType.riderCategoryId\n    );\n    // Depending on if there are additional fares to display either render a <span> or a <details>\n    const TransitFareWrapper =\n      fareTypes.length > 1 ? S.TransitFare : S.TransitFareSingle;\n\n    const fareNameFallback = (\n      <FormattedMessage\n        defaultMessage={defaultMessages[\"otpUi.TripDetails.transitFare\"]}\n        description=\"Text showing the price of tickets on public transportation.\"\n        id=\"otpUi.TripDetails.transitFare\"\n      />\n    );\n\n    fare = defaultFareTotal !== undefined && (\n      <S.Fare>\n        <TransitFareWrapper>\n          <summary style={{ display: fareTypes.length > 1 ? \"list-item\" : \"\" }}>\n            <FormattedMessage\n              defaultMessage={\n                defaultMessages[\"otpUi.TripDetails.transitFareEntry\"]\n              }\n              description=\"Text showing the price of tickets on public transportation.\"\n              id=\"otpUi.TripDetails.transitFareEntry\"\n              values={{\n                name:\n                  fareKeyNameMap[defaultFareType.headerKey] || fareNameFallback,\n                strong: boldText,\n                value: renderFare(\n                  defaultFareTotal.currency?.code || \"USD\",\n                  defaultFareTotal?.amount\n                )\n              }}\n            />\n          </summary>\n          {fareDetailsLayout ? (\n            // Show full ƒare details by leg\n            <FareLegTable layout={fareDetailsLayout} legs={itinerary.legs} />\n          ) : (\n            // Just show the fares for each payment type\n            fareTypes.map(fareType => {\n              // Don't show the default fare twice!\n              if (fareType) {\n                return null;\n              }\n              return (\n                <FormattedMessage\n                  defaultMessage={\n                    defaultMessages[\"otpUi.TripDetails.transitFareEntry\"]\n                  }\n                  description=\"Text showing the price of tickets on public transportation.\"\n                  id=\"otpUi.TripDetails.transitFareEntry\"\n                  key={Object.values(fareType).join(\"-\")}\n                  values={{\n                    name:\n                      fareKeyNameMap[defaultFareType.headerKey] ||\n                      fareNameFallback,\n                    strong: boldText,\n                    value: renderFare(\n                      defaultFareTotal.currency?.code || \"USD\",\n                      defaultFareTotal?.amount /\n                        defaultFareTotal?.currency?.digits\n                    )\n                  }}\n                />\n              );\n            })\n          )}\n        </TransitFareWrapper>\n      </S.Fare>\n    );\n  }\n  const tncFare = minTNCFare !== 0 && (\n    <S.Fare>\n      <S.TNCFare>\n        <FormattedMessage\n          defaultMessage={defaultMessages[\"otpUi.TripDetails.tncFare\"]}\n          description=\"Text showing the price paid to transportation network companies.\"\n          id=\"otpUi.TripDetails.tncFare\"\n          values={{\n            companies: (\n              // S.TNCFareCompanies capitalizes the TNC company ID (e.g. \"COMPANY\")\n              // after it is converted to lowercase, so it renders as \"Company\".\n              <S.TNCFareCompanies>{companies.toLowerCase()}</S.TNCFareCompanies>\n            ),\n            maxTNCFare: renderFare(currencyCode, maxTNCFare),\n            minTNCFare: renderFare(currencyCode, minTNCFare),\n            strong: boldText\n          }}\n        />\n      </S.TNCFare>\n    </S.Fare>\n  );\n\n  const departureDate = new Date(itinerary.startTime);\n\n  // Compute total time spent active.\n\n  // TODO: separate into two reducers\n  let walkDurationSeconds = 0;\n  let bikeDurationSeconds = 0;\n  itinerary.legs.forEach(leg => {\n    if (leg.mode.startsWith(\"WALK\")) walkDurationSeconds += leg.duration;\n    if (leg.mode.startsWith(\"BICYCLE\")) bikeDurationSeconds += leg.duration;\n  });\n  const bikeMinutes = Math.round(bikeDurationSeconds / 60);\n  const walkMinutes = Math.round(walkDurationSeconds / 60);\n  const minutesActive = bikeMinutes + walkMinutes;\n\n  // Calculate CO₂ if it's not provided by the itinerary\n  const co2 =\n    itinerary.co2 ||\n    (co2Config?.enabled &&\n      coreUtils.itinerary.calculateEmissions(\n        itinerary,\n        co2Config?.carbonIntensity,\n        co2Config?.units\n      ));\n\n  // Parse flex info and generate appropriate strings\n  const containsFlex = itinerary.legs.some(coreUtils.itinerary.isFlex);\n  const pickupBookingInfo = itinerary.legs\n    .map(leg => leg.pickupBookingInfo)\n    .filter(info => !!info);\n  const dropOffBookingInfo = itinerary.legs\n    .map(leg => leg.dropOffBookingInfo)\n    .filter(info => !!info);\n  const totalDistance = itinerary.legs.reduce(\n    (total, leg) => total + leg.distance,\n    0\n  );\n\n  return (\n    <S.TripDetails className={className}>\n      {/* this can be presentation as S.TripDetails is already labeled by this */}\n      <S.TripDetailsHeader id=\"trip-details-header\">\n        <FormattedMessage\n          defaultMessage={defaultMessages[\"otpUi.TripDetails.title\"]}\n          description=\"Title (heading) text of the component.\"\n          id=\"otpUi.TripDetails.title\"\n        />\n      </S.TripDetailsHeader>\n      <S.TripDetailsBody>\n        <TripDetail\n          // Any custom description for the Departure message needs to be handled by the slot.\n          description={\n            DepartureDetails && (\n              <DepartureDetails departureDate={departureDate} />\n            )\n          }\n          icon={<CalendarAlt size={17} />}\n          summary={\n            <S.Timing>\n              <FormattedMessage\n                defaultMessage={defaultMessages[\"otpUi.TripDetails.departure\"]}\n                description=\"Text showing the departure date/time for a trip.\"\n                id=\"otpUi.TripDetails.departure\"\n                values={{\n                  departureDate,\n                  strong: boldText\n                }}\n              />\n            </S.Timing>\n          }\n        />\n        {!!fare && (\n          <TripDetail\n            // Any custom description for the transit fare needs to be handled by the slot.\n            description={\n              FareDetails && (\n                <FareDetails\n                  legs={itinerary.legs}\n                  maxTNCFare={maxTNCFare}\n                  minTNCFare={minTNCFare}\n                />\n              )\n            }\n            icon={<MoneyBillAlt size={17} />}\n            summary={fare}\n          />\n        )}\n        {tncFare && (\n          <TripDetail\n            // Any custom description for the transit fare needs to be handled by the slot.\n            description={\n              FareDetails && (\n                <FareDetails\n                  legs={itinerary.legs}\n                  maxTNCFare={maxTNCFare}\n                  minTNCFare={minTNCFare}\n                />\n              )\n            }\n            icon={<MoneyBillAlt size={17} />}\n            summary={tncFare}\n          />\n        )}\n        {displayTimeActive && minutesActive > 0 && (\n          <TripDetail\n            icon={<Heartbeat size={17} />}\n            summary={\n              <FormattedMessage\n                defaultMessage={\n                  defaultMessages[\"otpUi.TripDetails.minutesActive\"]\n                }\n                description=\"Text showing the number of minutes spent walking or biking throughout trip.\"\n                id=\"otpUi.TripDetails.minutesActive\"\n                values={{\n                  minutes: minutesActive,\n                  strong: boldText\n                }}\n              />\n            }\n            description={\n              TimeActiveDetails && (\n                <TimeActiveDetails\n                  bikeMinutes={bikeMinutes}\n                  walkMinutes={walkMinutes}\n                />\n              )\n            }\n          />\n        )}\n        {co2 > 0 && co2Config?.enabled && (\n          <TripDetail\n            icon={<Leaf size={17} />}\n            summary={\n              <S.CO2Summary>\n                <FormattedMessage\n                  defaultMessage={defaultMessages[\"otpUi.TripDetails.co2\"]}\n                  description=\"Text showing the quantity of CO₂ emitted by this trip.\"\n                  id=\"otpUi.TripDetails.co2\"\n                  values={{\n                    co2: (\n                      <FormattedNumber\n                        value={Math.round(co2)}\n                        // eslint-disable-next-line react/style-prop-object\n                        style=\"unit\"\n                        unit={co2Config?.units || \"gram\"}\n                        unitDisplay=\"narrow\"\n                      />\n                    ),\n                    strong: boldText\n                  }}\n                />\n              </S.CO2Summary>\n            }\n            description={\n              <FormattedMessage\n                defaultMessage={\n                  defaultMessages[\"otpUi.TripDetails.co2description\"]\n                }\n                description=\"Text explaining how the CO₂ emissions are calculated.\"\n                id=\"otpUi.TripDetails.co2description\"\n                values={{\n                  link: CO2DescriptionLink,\n                  totalDistance\n                }}\n              />\n            }\n          />\n        )}\n        {containsFlex && (\n          <TripDetail\n            summary={\n              <S.FlexSummary>\n                <FormattedMessage\n                  defaultMessage={\n                    defaultMessages[\"otpUi.TripDetails.tripIncludesFlex\"]\n                  }\n                  description=\"Text stating that portions of the trip include a flex (on-demand) transit service.\"\n                  id=\"otpUi.TripDetails.tripIncludesFlex\"\n                  values={{\n                    extraMessage: [\n                      ...new Set([\n                        ...pickupBookingInfo.map(info => info.message),\n                        ...dropOffBookingInfo.map(info => info.message)\n                      ])\n                    ].join(\" \")\n                  }}\n                />\n              </S.FlexSummary>\n            }\n            icon={<Route size={17} />}\n          />\n        )}\n      </S.TripDetailsBody>\n    </S.TripDetails>\n  );\n}\n\nexport default TripDetails;\n\n// Rename styled components for export.\nexport { S as Styled, FareLegTable };\n"],"file":"index.js"}