{"version":3,"sources":["../src/index.tsx"],"names":["defaultMessages","defaultEnglishMessages","CO2DescriptionLink","contents","DefaultTimeActiveDetails","bikeMinutes","walkMinutes","strong","boldText","TripDetails","className","co2Config","defaultFareType","DepartureDetails","displayTimeActive","FareDetails","fareDetailsLayout","fareKeyNameMap","itinerary","TimeActiveDetails","fareResult","coreUtils","calculateTncFares","currencyCode","maxTNCFare","minTNCFare","companies","fareTypes","legs","reduce","prev","leg","rideHailingEstimate","provider","id","fareProducts","forEach","fp","mediumId","product","medium","riderCategoryId","riderCategory","find","ft","push","fare","length","defaultFareTotal","getItineraryCost","TransitFareWrapper","S","TransitFare","TransitFareSingle","fareNameFallback","undefined","display","name","headerKey","value","currency","code","amount","map","fareType","Object","values","join","digits","tncFare","toLowerCase","departureDate","Date","startTime","walkDurationSeconds","bikeDurationSeconds","mode","startsWith","duration","Math","round","minutesActive","co2","enabled","calculateEmissions","carbonIntensity","units","containsFlex","some","isFlex","pickupBookingInfo","filter","info","dropOffBookingInfo","totalDistance","total","distance","minutes","link","extraMessage","Set","message"],"mappings":"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","sourcesContent":["import coreUtils from \"@opentripplanner/core-utils\";\nimport { FareProductSelector } from \"@opentripplanner/types\";\nimport React, { ReactElement } from \"react\";\nimport { FormattedMessage, FormattedNumber } from \"react-intl\";\nimport { CalendarAlt } from \"@styled-icons/fa-solid/CalendarAlt\";\nimport { Heartbeat } from \"@styled-icons/fa-solid/Heartbeat\";\nimport { MoneyBillAlt } from \"@styled-icons/fa-solid/MoneyBillAlt\";\nimport { Leaf } from \"@styled-icons/fa-solid/Leaf\";\nimport { Route } from \"@styled-icons/fa-solid/Route\";\nimport { flatten } from \"flat\";\nimport * as S from \"./styled\";\nimport TripDetail from \"./trip-detail\";\nimport FareLegTable from \"./fare-table\";\nimport { boldText, renderFare } from \"./utils\";\n\nimport { TimeActiveDetailsProps, TripDetailsProps } from \"./types\";\n\n// Load the default messages.\nimport defaultEnglishMessages from \"../i18n/en-US.yml\";\n\n// HACK: We should flatten the messages loaded above because\n// the YAML loaders behave differently between webpack and our version of jest:\n// - the yaml loader for webpack returns a nested object,\n// - the yaml loader for jest returns messages with flattened ids.\nconst defaultMessages: Record<string, string> = flatten(defaultEnglishMessages);\n\nfunction CO2DescriptionLink(contents: ReactElement): ReactElement {\n  return (\n    <a\n      href=\"https://www.itf-oecd.org/sites/default/files/life-cycle-assessment-calculations-2020.xlsx\"\n      rel=\"noopener noreferrer\"\n      target=\"_blank\"\n    >\n      {contents}\n    </a>\n  );\n}\n/**\n * Default rendering if no component is provided for the TimeActiveDetails\n * slot in the TripDetails component.\n */\nfunction DefaultTimeActiveDetails({\n  bikeMinutes,\n  walkMinutes\n}: TimeActiveDetailsProps): ReactElement {\n  return (\n    <FormattedMessage\n      defaultMessage={\n        defaultMessages[\"otpUi.TripDetails.timeActiveDescription\"]\n      }\n      description=\"Text describing the walking and biking durations of a trip.\"\n      id=\"otpUi.TripDetails.timeActiveDescription\"\n      values={{\n        bikeMinutes,\n        strong: boldText,\n        walkMinutes\n      }}\n    />\n  );\n}\n\n/**\n * Renders trip details such as departure instructions, fare amount, and minutes active.\n */\nexport function TripDetails({\n  className = \"\",\n  co2Config,\n  defaultFareType,\n  DepartureDetails = null,\n  displayTimeActive = true,\n  FareDetails = null,\n  fareDetailsLayout,\n  fareKeyNameMap = {},\n  itinerary,\n  TimeActiveDetails = DefaultTimeActiveDetails\n}: TripDetailsProps): ReactElement {\n  // process the transit fare\n  const fareResult = coreUtils.itinerary.calculateTncFares(itinerary);\n  const { currencyCode, maxTNCFare, minTNCFare } = fareResult;\n\n  const { companies, fareTypes } = itinerary.legs.reduce<{\n    companies: string;\n    fareTypes: FareProductSelector[];\n  }>(\n    (prev, leg) => {\n      if (leg.rideHailingEstimate) {\n        prev.companies = leg.rideHailingEstimate.provider.id;\n      }\n\n      if (leg.fareProducts) {\n        leg.fareProducts.forEach(fp => {\n          const mediumId = fp.product.medium?.id;\n          const riderCategoryId = fp.product.riderCategory?.id;\n          if (\n            !prev.fareTypes.find(\n              ft =>\n                ft.mediumId === mediumId &&\n                ft.riderCategoryId === riderCategoryId\n            )\n          ) {\n            prev.fareTypes.push({ mediumId, riderCategoryId });\n          }\n        });\n      }\n      return prev;\n    },\n    { companies: \"\", fareTypes: [] }\n  );\n\n  let fare;\n  if (fareTypes.length > 0 && defaultFareType) {\n    const defaultFareTotal = coreUtils.itinerary.getItineraryCost(\n      itinerary.legs,\n      defaultFareType.mediumId,\n      defaultFareType.riderCategoryId\n    );\n    // Depending on if there are additional fares to display either render a <span> or a <details>\n    const TransitFareWrapper =\n      fareTypes.length > 1 ? S.TransitFare : S.TransitFareSingle;\n\n    const fareNameFallback = (\n      <FormattedMessage\n        defaultMessage={defaultMessages[\"otpUi.TripDetails.transitFare\"]}\n        description=\"Text showing the price of tickets on public transportation.\"\n        id=\"otpUi.TripDetails.transitFare\"\n      />\n    );\n\n    fare = defaultFareTotal !== undefined && (\n      <S.Fare>\n        <TransitFareWrapper>\n          <summary style={{ display: fareTypes.length > 1 ? \"list-item\" : \"\" }}>\n            <FormattedMessage\n              defaultMessage={\n                defaultMessages[\"otpUi.TripDetails.transitFareEntry\"]\n              }\n              description=\"Text showing the price of tickets on public transportation.\"\n              id=\"otpUi.TripDetails.transitFareEntry\"\n              values={{\n                name:\n                  fareKeyNameMap[defaultFareType.headerKey] || fareNameFallback,\n                strong: boldText,\n                value: renderFare(\n                  defaultFareTotal.currency?.code || \"USD\",\n                  defaultFareTotal?.amount\n                )\n              }}\n            />\n          </summary>\n          {fareDetailsLayout ? (\n            // Show full ƒare details by leg\n            <FareLegTable layout={fareDetailsLayout} legs={itinerary.legs} />\n          ) : (\n            // Just show the fares for each payment type\n            fareTypes.map(fareType => {\n              // Don't show the default fare twice!\n              if (fareType) {\n                return null;\n              }\n              return (\n                <FormattedMessage\n                  defaultMessage={\n                    defaultMessages[\"otpUi.TripDetails.transitFareEntry\"]\n                  }\n                  description=\"Text showing the price of tickets on public transportation.\"\n                  id=\"otpUi.TripDetails.transitFareEntry\"\n                  key={Object.values(fareType).join(\"-\")}\n                  values={{\n                    name:\n                      fareKeyNameMap[defaultFareType.headerKey] ||\n                      fareNameFallback,\n                    strong: boldText,\n                    value: renderFare(\n                      defaultFareTotal.currency?.code || \"USD\",\n                      defaultFareTotal?.amount /\n                        defaultFareTotal?.currency?.digits\n                    )\n                  }}\n                />\n              );\n            })\n          )}\n        </TransitFareWrapper>\n      </S.Fare>\n    );\n  }\n  const tncFare = minTNCFare !== 0 && (\n    <S.Fare>\n      <S.TNCFare>\n        <FormattedMessage\n          defaultMessage={defaultMessages[\"otpUi.TripDetails.tncFare\"]}\n          description=\"Text showing the price paid to transportation network companies.\"\n          id=\"otpUi.TripDetails.tncFare\"\n          values={{\n            companies: (\n              // S.TNCFareCompanies capitalizes the TNC company ID (e.g. \"COMPANY\")\n              // after it is converted to lowercase, so it renders as \"Company\".\n              <S.TNCFareCompanies>{companies.toLowerCase()}</S.TNCFareCompanies>\n            ),\n            maxTNCFare: renderFare(currencyCode, maxTNCFare),\n            minTNCFare: renderFare(currencyCode, minTNCFare),\n            strong: boldText\n          }}\n        />\n      </S.TNCFare>\n    </S.Fare>\n  );\n\n  const departureDate = new Date(itinerary.startTime);\n\n  // Compute total time spent active.\n\n  // TODO: separate into two reducers\n  let walkDurationSeconds = 0;\n  let bikeDurationSeconds = 0;\n  itinerary.legs.forEach(leg => {\n    if (leg.mode.startsWith(\"WALK\")) walkDurationSeconds += leg.duration;\n    if (leg.mode.startsWith(\"BICYCLE\")) bikeDurationSeconds += leg.duration;\n  });\n  const bikeMinutes = Math.round(bikeDurationSeconds / 60);\n  const walkMinutes = Math.round(walkDurationSeconds / 60);\n  const minutesActive = bikeMinutes + walkMinutes;\n\n  // Calculate CO₂ if it's not provided by the itinerary\n  const co2 =\n    itinerary.co2 ||\n    (co2Config?.enabled &&\n      coreUtils.itinerary.calculateEmissions(\n        itinerary,\n        co2Config?.carbonIntensity,\n        co2Config?.units\n      ));\n\n  // Parse flex info and generate appropriate strings\n  const containsFlex = itinerary.legs.some(coreUtils.itinerary.isFlex);\n  const pickupBookingInfo = itinerary.legs\n    .map(leg => leg.pickupBookingInfo)\n    .filter(info => !!info);\n  const dropOffBookingInfo = itinerary.legs\n    .map(leg => leg.dropOffBookingInfo)\n    .filter(info => !!info);\n  const totalDistance = itinerary.legs.reduce(\n    (total, leg) => total + leg.distance,\n    0\n  );\n\n  return (\n    <S.TripDetails className={className}>\n      {/* this can be presentation as S.TripDetails is already labeled by this */}\n      <S.TripDetailsHeader id=\"trip-details-header\">\n        <FormattedMessage\n          defaultMessage={defaultMessages[\"otpUi.TripDetails.title\"]}\n          description=\"Title (heading) text of the component.\"\n          id=\"otpUi.TripDetails.title\"\n        />\n      </S.TripDetailsHeader>\n      <S.TripDetailsBody>\n        <TripDetail\n          // Any custom description for the Departure message needs to be handled by the slot.\n          description={\n            DepartureDetails && (\n              <DepartureDetails departureDate={departureDate} />\n            )\n          }\n          icon={<CalendarAlt size={17} />}\n          summary={\n            <S.Timing>\n              <FormattedMessage\n                defaultMessage={defaultMessages[\"otpUi.TripDetails.departure\"]}\n                description=\"Text showing the departure date/time for a trip.\"\n                id=\"otpUi.TripDetails.departure\"\n                values={{\n                  departureDate,\n                  strong: boldText\n                }}\n              />\n            </S.Timing>\n          }\n        />\n        {!!fare && (\n          <TripDetail\n            // Any custom description for the transit fare needs to be handled by the slot.\n            description={\n              FareDetails && (\n                <FareDetails\n                  legs={itinerary.legs}\n                  maxTNCFare={maxTNCFare}\n                  minTNCFare={minTNCFare}\n                />\n              )\n            }\n            icon={<MoneyBillAlt size={17} />}\n            summary={fare}\n          />\n        )}\n        {tncFare && (\n          <TripDetail\n            // Any custom description for the transit fare needs to be handled by the slot.\n            description={\n              FareDetails && (\n                <FareDetails\n                  legs={itinerary.legs}\n                  maxTNCFare={maxTNCFare}\n                  minTNCFare={minTNCFare}\n                />\n              )\n            }\n            icon={<MoneyBillAlt size={17} />}\n            summary={tncFare}\n          />\n        )}\n        {displayTimeActive && minutesActive > 0 && (\n          <TripDetail\n            icon={<Heartbeat size={17} />}\n            summary={\n              <FormattedMessage\n                defaultMessage={\n                  defaultMessages[\"otpUi.TripDetails.minutesActive\"]\n                }\n                description=\"Text showing the number of minutes spent walking or biking throughout trip.\"\n                id=\"otpUi.TripDetails.minutesActive\"\n                values={{\n                  minutes: minutesActive,\n                  strong: boldText\n                }}\n              />\n            }\n            description={\n              TimeActiveDetails && (\n                <TimeActiveDetails\n                  bikeMinutes={bikeMinutes}\n                  walkMinutes={walkMinutes}\n                />\n              )\n            }\n          />\n        )}\n        {co2 > 0 && co2Config?.enabled && (\n          <TripDetail\n            icon={<Leaf size={17} />}\n            summary={\n              <S.CO2Summary>\n                <FormattedMessage\n                  defaultMessage={defaultMessages[\"otpUi.TripDetails.co2\"]}\n                  description=\"Text showing the quantity of CO₂ emitted by this trip.\"\n                  id=\"otpUi.TripDetails.co2\"\n                  values={{\n                    co2: (\n                      <FormattedNumber\n                        value={Math.round(co2)}\n                        // eslint-disable-next-line react/style-prop-object\n                        style=\"unit\"\n                        unit={co2Config?.units || \"gram\"}\n                        unitDisplay=\"narrow\"\n                      />\n                    ),\n                    strong: boldText\n                  }}\n                />\n              </S.CO2Summary>\n            }\n            description={\n              <FormattedMessage\n                defaultMessage={\n                  defaultMessages[\"otpUi.TripDetails.co2description\"]\n                }\n                description=\"Text explaining how the CO₂ emissions are calculated.\"\n                id=\"otpUi.TripDetails.co2description\"\n                values={{\n                  link: CO2DescriptionLink,\n                  totalDistance\n                }}\n              />\n            }\n          />\n        )}\n        {containsFlex && (\n          <TripDetail\n            summary={\n              <S.FlexSummary>\n                <FormattedMessage\n                  defaultMessage={\n                    defaultMessages[\"otpUi.TripDetails.tripIncludesFlex\"]\n                  }\n                  description=\"Text stating that portions of the trip include a flex (on-demand) transit service.\"\n                  id=\"otpUi.TripDetails.tripIncludesFlex\"\n                  values={{\n                    extraMessage: [\n                      ...new Set([\n                        ...pickupBookingInfo.map(info => info.message),\n                        ...dropOffBookingInfo.map(info => info.message)\n                      ])\n                    ].join(\" \")\n                  }}\n                />\n              </S.FlexSummary>\n            }\n            icon={<Route size={17} />}\n          />\n        )}\n      </S.TripDetailsBody>\n    </S.TripDetails>\n  );\n}\n\nexport default TripDetails;\n\n// Rename styled components for export.\nexport { S as Styled, FareLegTable };\n"],"file":"index.js"}