{"version":3,"sources":["../src/index.tsx"],"names":["iconSize","defaultMessages","defaultEnglishMessages","FromToLocationPicker","label","location","onFromClick","onToClick","setLocation","showIcons","handleFromClick","locationType","reverseGeocode","handleToClick","labelIfAny"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;AAMA;;;;;;AADA;AAGA,MAAMA,QAAQ,GAAG,OAAjB,C,CAEA;AACA;AACA;AACA;;AACA,MAAMC,eAAuC,GAAG,mBAAQC,aAAR,CAAhD;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAC5BC,EAAAA,KAAK,GAAG,IADoB;AAE5BC,EAAAA,QAAQ,GAAG,IAFiB;AAG5BC,EAAAA,WAAW,GAAG,IAHc;AAI5BC,EAAAA,SAAS,GAAG,IAJgB;AAK5BC,EAAAA,WAAW,GAAG,IALc;AAM5BC,EAAAA,SAAS,GAAG;AANgB,CAAD,KAOU;AACrC,QAAMC,eAAe,GAAG,MAAM;AAC5B,QAAIJ,WAAJ,EAAiB;AACfA,MAAAA,WAAW;AACX;AACD;;AACDE,IAAAA,WAAW,CAAC;AACVH,MAAAA,QADU;AAEVM,MAAAA,YAAY,EAAE,MAFJ;AAGVC,MAAAA,cAAc,EAAE;AAHN,KAAD,CAAX;AAKD,GAVD;;AAYA,QAAMC,aAAa,GAAG,MAAM;AAC1B,QAAIN,SAAJ,EAAe;AACbA,MAAAA,SAAS;AACT;AACD;;AACDC,IAAAA,WAAW,CAAC;AACVH,MAAAA,QADU;AAEVM,MAAAA,YAAY,EAAE,IAFJ;AAGVC,MAAAA,cAAc,EAAE;AAHN,KAAD,CAAX;AAKD,GAVD;;AAYA,QAAME,UAAU,GAAGV,KAAK,KAAK,IAAV,gBAEjB,0DACE,6BAAC,2BAAD;AACE,IAAA,cAAc,EAAEH,eAAe,CAAC,sCAAD,CADjC;AAEE,IAAA,WAAW,EAAC,yCAFd;AAGE,IAAA,EAAE,EAAC;AAHL,IADF,CAFiB,GAUfG,KAVJ;AAYA,sBACE,4DACGU,UADH,eAEE,6BAAC,CAAD,CAAG,gBAAH,qBACE,6BAAC,CAAD,CAAG,kBAAH,QACGL,SAAS,iBAAI,6BAAC,qBAAD;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,IAAI,EAAET;AAAhC,IADhB,eAEE,6BAAC,CAAD,CAAG,MAAH;AAAU,IAAA,OAAO,EAAEU;AAAnB,kBACE,6BAAC,2BAAD;AACE,IAAA,cAAc,EAAET,eAAe,CAAC,iCAAD,CADjC;AAEE,IAAA,WAAW,EAAC,0CAFd;AAGE,IAAA,EAAE,EAAC;AAHL,IADF,CAFF,CADF,eAWE,6BAAC,CAAD,CAAG,kBAAH,QACGQ,SAAS,iBAAI,6BAAC,qBAAD;AAAc,IAAA,IAAI,EAAC,IAAnB;AAAwB,IAAA,IAAI,EAAET;AAA9B,IADhB,eAEE,6BAAC,CAAD,CAAG,MAAH;AAAU,IAAA,OAAO,EAAEa;AAAnB,kBACE,6BAAC,2BAAD;AACE,IAAA,cAAc,EAAEZ,eAAe,CAAC,+BAAD,CADjC;AAEE,IAAA,WAAW,EAAC,wCAFd;AAGE,IAAA,EAAE,EAAC;AAHL,IADF,CAFF,CAXF,CAFF,CADF;AA2BD,CAvED;;eAyEeE,oB,EAEf","sourcesContent":["import flatten from \"flat\";\nimport LocationIcon from \"@opentripplanner/location-icon\";\nimport { FormattedMessage } from \"react-intl\";\nimport React, { ReactElement } from \"react\";\n\nimport * as S from \"./styled\";\n\n// eslint-disable-next-line prettier/prettier\nimport type { FromToPickerProps } from \"./types\";\n\n// Load the default messages.\nimport defaultEnglishMessages from \"../i18n/en-US.yml\";\n\nconst iconSize = \"0.9em\";\n\n// HACK: We should flatten the messages loaded above because\n// the YAML loaders behave differently between webpack and our version of jest:\n// - the yaml loader for webpack returns a nested object,\n// - the yaml loader for jest returns messages with flattened ids.\nconst defaultMessages: Record<string, string> = flatten(defaultEnglishMessages);\n\nconst FromToLocationPicker = ({\n  label = null,\n  location = null,\n  onFromClick = null,\n  onToClick = null,\n  setLocation = null,\n  showIcons = true\n}: FromToPickerProps): ReactElement => {\n  const handleFromClick = () => {\n    if (onFromClick) {\n      onFromClick();\n      return;\n    }\n    setLocation({\n      location,\n      locationType: \"from\",\n      reverseGeocode: false\n    });\n  };\n\n  const handleToClick = () => {\n    if (onToClick) {\n      onToClick();\n      return;\n    }\n    setLocation({\n      location,\n      locationType: \"to\",\n      reverseGeocode: false\n    });\n  };\n\n  const labelIfAny = label === true\n    ? (\n    <strong>\n      <FormattedMessage\n        defaultMessage={defaultMessages[\"otpUi.FromToLocationPicker.planATrip\"]}\n        description=\"Label to prompt the user to plan a trip\"\n        id=\"otpUi.FromToLocationPicker.planATrip\"\n      />\n    </strong>\n    )\n    : label\n\n  return (\n    <>\n      {labelIfAny}\n      <S.FromToPickerSpan>\n        <S.LocationPickerSpan>\n          {showIcons && <LocationIcon type=\"from\" size={iconSize} />}\n          <S.Button onClick={handleFromClick}>\n            <FormattedMessage\n              defaultMessage={defaultMessages[\"otpUi.FromToLocationPicker.from\"]}\n              description=\"Text for the 'from' button of the picker\"\n              id=\"otpUi.FromToLocationPicker.from\"\n            />\n          </S.Button>\n        </S.LocationPickerSpan>\n        <S.LocationPickerSpan>\n          {showIcons && <LocationIcon type=\"to\" size={iconSize} />}\n          <S.Button onClick={handleToClick}>\n            <FormattedMessage\n              defaultMessage={defaultMessages[\"otpUi.FromToLocationPicker.to\"]}\n              description=\"Text for the 'to' button of the picker\"\n              id=\"otpUi.FromToLocationPicker.to\"\n            />\n          </S.Button>\n        </S.LocationPickerSpan>\n      </S.FromToPickerSpan>\n    </>\n  );\n};\n\nexport default FromToLocationPicker;\n\n// Rename styled components for export.\nexport { S as Styled };\n"],"file":"index.js"}