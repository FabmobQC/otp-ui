{"version":3,"sources":["../src/leg-icon.js"],"names":["coreUtils","PropTypes","React","Suspense","getCompanyIcon","defaultGetCompanyIcon","LegIcon","leg","ModeIcon","props","company","itinerary","getCompanyFromLeg","CompanyIcon","iconStr","mode","startsWith","propTypes","func","elementType","isRequired","defaultProps"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,cAAc,IAAIC,qBAA3B,QAAwD,aAAxD;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAiD;AAAA,MAA9CF,cAA8C,QAA9CA,cAA8C;AAAA,MAA9BG,GAA8B,QAA9BA,GAA8B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AAC/D,MAAMC,OAAO,GAAGV,SAAS,CAACW,SAAV,CAAoBC,iBAApB,CAAsCL,GAAtC,CAAhB,CAD+D,CAE/D;;AACA,MAAIG,OAAO,IAAI,OAAON,cAAP,KAA0B,UAAzC,EAAqD;AACnD,QAAMS,WAAW,GAAGT,cAAc,CAACM,OAAD,CAAlC;AACA,QAAIG,WAAJ,EACE,oBACE,oBAAC,QAAD;AAAU,MAAA,QAAQ,eAAE,kCAAOH,OAAP;AAApB,oBACE,oBAAC,WAAD,EAAiBD,KAAjB,CADF,CADF;AAKH;;AACD,MAAIK,OAAO,GAAGP,GAAG,CAACQ,IAAlB,CAZ+D,CAa/D;;AACA,MAAID,OAAO,IAAIA,OAAO,CAACE,UAAR,CAAmB,KAAnB,CAAf,EAA0CF,OAAO,GAAG,KAAV;AAE1C,sBAAO,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA;AAAhB,KAA6BL,KAA7B,EAAP;AACD,CAjBD;;AAmBAH,OAAO,CAACW,SAAR,GAAoB;AAClB;AACAb,EAAAA,cAAc,EAAEH,SAAS,CAACiB,IAFR;AAGlB;AACA;AACAV,EAAAA,QAAQ,EAAEP,SAAS,CAACkB,WAAV,CAAsBC;AALd,CAApB;AAQAd,OAAO,CAACe,YAAR,GAAuB;AACrBjB,EAAAA,cAAc,EAAEC;AADK,CAAvB;AAIA,eAAeC,OAAf","sourcesContent":["import coreUtils from \"@opentripplanner/core-utils\";\nimport PropTypes from \"prop-types\";\nimport React, { Suspense } from \"react\";\n\nimport { getCompanyIcon as defaultGetCompanyIcon } from \"./companies\";\n\nconst LegIcon = ({ getCompanyIcon, leg, ModeIcon, ...props }) => {\n  const company = coreUtils.itinerary.getCompanyFromLeg(leg);\n  // Check if the iconStr has a matching company icon. If so, return that.\n  if (company && typeof getCompanyIcon === \"function\") {\n    const CompanyIcon = getCompanyIcon(company);\n    if (CompanyIcon)\n      return (\n        <Suspense fallback={<span>{company}</span>}>\n          <CompanyIcon {...props} />\n        </Suspense>\n      );\n  }\n  let iconStr = leg.mode;\n  // Do this for P&R, K&R and TNC trips without company icon\n  if (iconStr && iconStr.startsWith(\"CAR\")) iconStr = \"CAR\";\n\n  return <ModeIcon mode={iconStr} {...props} />;\n};\n\nLegIcon.propTypes = {\n  // Optional override function for deriving the company icon for a given leg.\n  getCompanyIcon: PropTypes.func,\n  // TYPESCRIPT TODO: restore\n  // leg: coreUtils.types.legType.isRequired,\n  ModeIcon: PropTypes.elementType.isRequired\n};\n\nLegIcon.defaultProps = {\n  getCompanyIcon: defaultGetCompanyIcon\n};\n\nexport default LegIcon;\n"],"file":"leg-icon.js"}