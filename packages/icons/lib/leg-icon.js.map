{"version":3,"sources":["../src/leg-icon.js"],"names":["LegIcon","getCompanyIcon","leg","ModeIcon","props","company","coreUtils","itinerary","getCompanyFromLeg","CompanyIcon","iconStr","mode","startsWith","propTypes","PropTypes","func","elementType","isRequired","defaultProps","defaultGetCompanyIcon"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;;;;;AAEA,MAAMA,OAAO,GAAG,CAAC;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA,GAAlB;AAAuBC,EAAAA,QAAvB;AAAiC,KAAGC;AAApC,CAAD,KAAiD;AAC/D,QAAMC,OAAO,GAAGC,mBAAUC,SAAV,CAAoBC,iBAApB,CAAsCN,GAAtC,CAAhB,CAD+D,CAE/D;;;AACA,MAAIG,OAAO,IAAI,OAAOJ,cAAP,KAA0B,UAAzC,EAAqD;AACnD,UAAMQ,WAAW,GAAGR,cAAc,CAACI,OAAD,CAAlC;AACA,QAAII,WAAJ,EACE,oBACE,6BAAC,eAAD;AAAU,MAAA,QAAQ,eAAE,2CAAOJ,OAAP;AAApB,oBACE,6BAAC,WAAD,EAAiBD,KAAjB,CADF,CADF;AAKH;;AACD,MAAIM,OAAO,GAAGR,GAAG,CAACS,IAAlB,CAZ+D,CAa/D;;AACA,MAAID,OAAO,IAAIA,OAAO,CAACE,UAAR,CAAmB,KAAnB,CAAf,EAA0CF,OAAO,GAAG,KAAV;AAE1C,sBAAO,6BAAC,QAAD;AAAU,IAAA,IAAI,EAAEA;AAAhB,KAA6BN,KAA7B,EAAP;AACD,CAjBD;;AAmBAJ,OAAO,CAACa,SAAR,GAAoB;AAClB;AACAZ,EAAAA,cAAc,EAAEa,mBAAUC,IAFR;AAGlB;AACA;AACAZ,EAAAA,QAAQ,EAAEW,mBAAUE,WAAV,CAAsBC;AALd,CAApB;AAQAjB,OAAO,CAACkB,YAAR,GAAuB;AACrBjB,EAAAA,cAAc,EAAEkB;AADK,CAAvB;eAIenB,O","sourcesContent":["import coreUtils from \"@opentripplanner/core-utils\";\nimport PropTypes from \"prop-types\";\nimport React, { Suspense } from \"react\";\n\nimport { getCompanyIcon as defaultGetCompanyIcon } from \"./companies\";\n\nconst LegIcon = ({ getCompanyIcon, leg, ModeIcon, ...props }) => {\n  const company = coreUtils.itinerary.getCompanyFromLeg(leg);\n  // Check if the iconStr has a matching company icon. If so, return that.\n  if (company && typeof getCompanyIcon === \"function\") {\n    const CompanyIcon = getCompanyIcon(company);\n    if (CompanyIcon)\n      return (\n        <Suspense fallback={<span>{company}</span>}>\n          <CompanyIcon {...props} />\n        </Suspense>\n      );\n  }\n  let iconStr = leg.mode;\n  // Do this for P&R, K&R and TNC trips without company icon\n  if (iconStr && iconStr.startsWith(\"CAR\")) iconStr = \"CAR\";\n\n  return <ModeIcon mode={iconStr} {...props} />;\n};\n\nLegIcon.propTypes = {\n  // Optional override function for deriving the company icon for a given leg.\n  getCompanyIcon: PropTypes.func,\n  // TYPESCRIPT TODO: restore\n  // leg: coreUtils.types.legType.isRequired,\n  ModeIcon: PropTypes.elementType.isRequired\n};\n\nLegIcon.defaultProps = {\n  getCompanyIcon: defaultGetCompanyIcon\n};\n\nexport default LegIcon;\n"],"file":"leg-icon.js"}