{"version":3,"sources":["../../src/TransitLegBody/index.tsx"],"names":["coreUtils","React","Component","AnimateHeight","FormattedMessage","FormattedNumber","injectIntl","Duration","S","defaultMessages","AlertsBody","IntermediateStops","ViewTripButton","maximumAlertCountToShowUncollapsed","getFlexMessageValues","info","hasPhone","contactInfo","phoneNumber","leadDays","latestBookingTime","daysPrior","action","advanceNotice","TransitLegBody","props","onToggleStopsClick","stopsExpanded","state","setState","onToggleAlertsClick","alertsExpanded","onSummaryClick","leg","legIndex","setActiveLeg","AlertBodyIcon","AlertToggleIcon","DefaultAlertToggleIcon","alwaysCollapseAlerts","defaultFareSelector","intl","legDestination","LegIcon","RouteDescription","RouteDescriptionFooter","setViewedTrip","showAgencyInfo","showViewTripButton","timeZone","TransitLegSubheader","TransitLegSummary","transitOperator","agencyBrandingUrl","agencyName","agencyUrl","alerts","isReservationRequired","itinerary","transitOperatorName","name","logoUrl","logo","shouldCollapseDueToAlertCount","length","shouldOnlyShowAlertsExpanded","expandAlerts","legCost","getLegCost","mediumId","riderCategoryId","formatMessage","defaultMessage","description","id","agencyLink","pickupBookingInfo","alertCount","intermediateStops","from","stopIndex","stopId","to","tripId","price","fare","currency","code","amount","averageWait","waitTime"],"mappings":";;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,6BAAtB;AAQA,OAAOC,KAAP,IAAgBC,SAAhB,QAAkE,OAAlE;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,SACEC,gBADF,EAEEC,eAFF,EAGEC,UAHF,QAKO,YALP;AAOA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAO,KAAKC,CAAZ,MAAmB,WAAnB;AASA,SAASC,eAAT,QAAgC,SAAhC;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AA6BA,IAAMC,kCAAkC,GAAG,CAA3C;AAEA;AACA;AACA;;AACA,SAASC,oBAAT,CAA8BC,IAA9B,EAAqD;AAAA;;AACnD;AACA;AACA;AACA,MAAMC,QAAQ,GAAG,CAAC,EAACD,IAAD,aAACA,IAAD,oCAACA,IAAI,CAAEE,WAAP,8CAAC,kBAAmBC,WAApB,CAAlB;AACA,MAAMC,QAAQ,GAAGJ,IAAH,aAAGA,IAAH,gDAAGA,IAAI,CAAEK,iBAAT,0DAAG,sBAAyBC,SAA1C;AACA,MAAMH,WAAW,GAAGH,IAAH,aAAGA,IAAH,6CAAGA,IAAI,CAAEE,WAAT,uDAAG,mBAAmBC,WAAvC;AACA,SAAO;AACLI,IAAAA,MAAM,EAAEN,QAAQ,gBACd,oBAAC,gBAAD;AACE,MAAA,cAAc,EAAEP,eAAe,CAAC,oCAAD,CADjC;AAEE,MAAA,WAAW,EAAC,6BAFd;AAGE,MAAA,EAAE,EAAC,oCAHL;AAIE,MAAA,MAAM,EAAE;AAAES,QAAAA,WAAW,EAAXA;AAAF;AAJV,MADc,gBAQd,oBAAC,gBAAD;AACE,MAAA,cAAc,EAAET,eAAe,CAAC,mCAAD,CADjC;AAEE,MAAA,WAAW,EAAC,oBAFd;AAGE,MAAA,EAAE,EAAC;AAHL,MATG;AAeLc,IAAAA,aAAa,EACXJ,QAAQ,GAAG,CAAX,gBACE,oBAAC,gBAAD;AACE,MAAA,cAAc,EACZV,eAAe,CAAC,uCAAD,CAFnB;AAIE,MAAA,WAAW,EAAC,kCAJd;AAKE,MAAA,EAAE,EAAC,uCALL;AAME,MAAA,MAAM,EAAE;AAAEU,QAAAA,QAAQ,EAARA;AAAF;AANV,MADF,GAUE;AA1BC,GAAP;AA6BD;;IAEKK,c;;;;;AACJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAQnBC,kBARmB,GAQE,YAAM;AACzB,UAAQC,aAAR,GAA0B,MAAKC,KAA/B,CAAQD,aAAR;;AACA,YAAKE,QAAL,CAAc;AAAEF,QAAAA,aAAa,EAAE,CAACA;AAAlB,OAAd;AACD,KAXkB;;AAAA,UAanBG,mBAbmB,GAaG,YAAM;AAC1B,UAAQC,cAAR,GAA2B,MAAKH,KAAhC,CAAQG,cAAR;;AACA,YAAKF,QAAL,CAAc;AAAEE,QAAAA,cAAc,EAAE,CAACA;AAAnB,OAAd;AACD,KAhBkB;;AAAA,UAkBnBC,cAlBmB,GAkBF,YAAM;AACrB,wBAAwC,MAAKP,KAA7C;AAAA,UAAQQ,GAAR,eAAQA,GAAR;AAAA,UAAaC,QAAb,eAAaA,QAAb;AAAA,UAAuBC,YAAvB,eAAuBA,YAAvB;AACAA,MAAAA,YAAY,CAACD,QAAD,EAAWD,GAAX,CAAZ;AACD,KArBkB;;AAEjB,UAAKL,KAAL,GAAa;AACXG,MAAAA,cAAc,EAAE,KADL;AAEXJ,MAAAA,aAAa,EAAE;AAFJ,KAAb;AAFiB;AAMlB;;;;WAiBD,kBAAuB;AAAA;;AACrB,yBAkBI,KAAKF,KAlBT;AAAA,UACEW,aADF,gBACEA,aADF;AAAA,+CAEEC,eAFF;AAAA,UAEEA,eAFF,sCAEoB7B,CAAC,CAAC8B,sBAFtB;AAAA,UAGEC,oBAHF,gBAGEA,oBAHF;AAAA,UAIEC,mBAJF,gBAIEA,mBAJF;AAAA,UAKEC,IALF,gBAKEA,IALF;AAAA,UAMER,GANF,gBAMEA,GANF;AAAA,UAOES,cAPF,gBAOEA,cAPF;AAAA,UAQEC,OARF,gBAQEA,OARF;AAAA,UASEC,gBATF,gBASEA,gBATF;AAAA,UAUEC,sBAVF,gBAUEA,sBAVF;AAAA,UAWEC,aAXF,gBAWEA,aAXF;AAAA,UAYEC,cAZF,gBAYEA,cAZF;AAAA,UAaEC,kBAbF,gBAaEA,kBAbF;AAAA,UAcEC,QAdF,gBAcEA,QAdF;AAAA,UAeEC,mBAfF,gBAeEA,mBAfF;AAAA,UAgBEC,iBAhBF,gBAgBEA,iBAhBF;AAAA,UAiBEC,eAjBF,gBAiBEA,eAjBF;AAmBA,UAAQC,iBAAR,GAA6DpB,GAA7D,CAAQoB,iBAAR;AAAA,UAA2BC,UAA3B,GAA6DrB,GAA7D,CAA2BqB,UAA3B;AAAA,UAAuCC,SAAvC,GAA6DtB,GAA7D,CAAuCsB,SAAvC;AAAA,UAAkDC,MAAlD,GAA6DvB,GAA7D,CAAkDuB,MAAlD;AACA,wBAA0C,KAAK5B,KAA/C;AAAA,UAAQG,cAAR,eAAQA,cAAR;AAAA,UAAwBJ,aAAxB,eAAwBA,aAAxB;AAEA,UAAM8B,qBAAqB,GAAGzD,SAAS,CAAC0D,SAAV,CAAoBD,qBAApB,CAC5BxB,GAD4B,CAA9B,CAvBqB,CA2BrB;AACA;;AACA,UAAM0B,mBAAmB,GAAG,CAAAP,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEQ,IAAjB,KAAyBN,UAArD,CA7BqB,CA+BrB;AACA;;AACA,UAAMO,OAAO,GACXT,eAAe,IAAIA,eAAe,CAACU,IAAnC,GACIV,eAAe,CAACU,IADpB,GAEIT,iBAHN;AAKA,UAAMU,6BAA6B,GACjC,gBAAA9B,GAAG,CAACuB,MAAJ,4DAAYQ,MAAZ,IAAqBnD,kCADvB,CAtCqB,CAwCrB;AACA;;AACA,UAAMoD,4BAA4B,GAChC,EAAEF,6BAA6B,IAAIxB,oBAAnC,KAA4D,CAACN,GAAG,CAACuB,MADnE;AAEA,UAAMU,YAAY,GAAGnC,cAAc,IAAIkC,4BAAvC;AAEA,UAAME,OAAO,GACX3B,mBAAmB,IACnBxC,SAAS,CAAC0D,SAAV,CAAoBU,UAApB,CACEnC,GADF,EAEEO,mBAAmB,CAAC6B,QAFtB,EAGE7B,mBAAmB,CAAC8B,eAHtB,CAFF;AAQA,0BACE,0CACGpB,mBAAmB,iBAAI,oBAAC,mBAAD;AAAqB,QAAA,GAAG,EAAEjB;AAA1B,QAD1B,eAEE,oBAAC,CAAD,CAAG,OAAH,qBAEE,oBAAC,CAAD,CAAG,YAAH,qBACE,oBAAC,CAAD,CAAG,cAAH,qBACE,+CACE,oBAAC,CAAD,CAAG,0BAAH,QACG,KADH,eAEE,oBAAC,gBAAD;AACE,QAAA,cAAc,EACZxB,eAAe,CAAC,2BAAD,CAFnB;AAIE,QAAA,WAAW,EAAC,mCAJd;AAKE,QAAA,EAAE,EAAC;AALL,QAFF,CADF,eAWE,oBAAC,gBAAD;AACE,QAAA,GAAG,EAAEwB,GADP;AAEE,QAAA,OAAO,EAAEU,OAFX;AAGE,QAAA,eAAe,EAAES;AAHnB,QAXF,eAgBE,oBAAC,CAAD,CAAG,0BAAH,QACG,KADH,eAEE,oBAAC,gBAAD,CACE;AADF;AAEE,QAAA,cAAc,EACZ3C,eAAe,CAAC,kCAAD,CAHnB;AAKE,QAAA,WAAW,EAAC,mCALd;AAME,QAAA,EAAE,EAAC,kCANL;AAOE,QAAA,MAAM,EAAE;AACNiC,UAAAA,cAAc,EAAdA;AADM;AAPV,QAFF,CAhBF,CADF,eAgCE,oBAAC,CAAD,CAAG,kBAAH;AAAsB,QAAA,OAAO,EAAE,KAAKV;AAApC,sBACE,oBAAC,CAAD,CAAG,0BAAH,qBACE,oBAAC,gBAAD;AACE,QAAA,cAAc,EACZvB,eAAe,CAAC,gCAAD,CAFnB;AAIE,QAAA,WAAW,EAAC,+BAJd;AAKE,QAAA,EAAE,EAAC;AALL,QADF,CADF,CAhCF,CADF,CAFF,EAgDGoC,sBAAsB,iBAAI,oBAAC,sBAAD;AAAwB,QAAA,GAAG,EAAEZ;AAA7B,QAhD7B,eAiDE;AACE;AACA,sBAAYQ,IAAI,CAAC8B,aAAL,CAAmB;AAC7BC,UAAAA,cAAc,EACZ/D,eAAe,CAAC,iCAAD,CAFY;AAG7BgE,UAAAA,WAAW,EAAE,6CAHgB;AAI7BC,UAAAA,EAAE,EAAE;AAJyB,SAAnB,CAFd;AAQE,QAAA,IAAI,EAAC;AARP,SAWG3B,cAAc,iBACb,oBAAC,CAAD,CAAG,UAAH,qBACE,oBAAC,gBAAD;AACE,QAAA,cAAc,EACZtC,eAAe,CAAC,iCAAD,CAFnB;AAIE,QAAA,WAAW,EAAC,yCAJd;AAKE,QAAA,EAAE,EAAC,iCALL;AAME,QAAA,MAAM,EAAE;AACNkE,UAAAA,UAAU,eACR;AACE,0BAAYlC,IAAI,CAAC8B,aAAL,CACV;AACEG,cAAAA,EAAE,EAAE;AADN,aADU,EAIV;AACEpB,cAAAA,UAAU,EAAVA;AADF,aAJU,CADd;AASE,YAAA,IAAI,EAAEC,SAAS,IAAI,GATrB;AAUE,YAAA,GAAG,EAAC,qBAVN;AAWE,YAAA,MAAM,EAAC;AAXT,aAaGI,mBAbH,EAcGE,OAAO,iBAAI;AAAK,YAAA,GAAG,EAAC,EAAT;AAAY,YAAA,GAAG,EAAEA,OAAjB;AAA0B,YAAA,MAAM,EAAE;AAAlC,YAdd;AAFI;AANV,QADF,CAZJ,EA0CGJ,qBAAqB,IAAIxB,GAAG,CAAC2C,iBAA7B,iBACC,oBAAC,CAAD,CAAG,gBAAH,qBACE,oBAAC,gBAAD;AACE,QAAA,cAAc,EACZnE,eAAe,CAAC,uCAAD,CAFnB;AAIE,QAAA,WAAW,EAAC,6EAJd;AAKE,QAAA,EAAE,EAAC,uCALL;AAME,QAAA,MAAM,EAAEK,oBAAoB,CAACmB,GAAG,CAAC2C,iBAAL;AAN9B,QADF,CA3CJ,EAuDG,CAAApB,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEQ,MAAR,IAAiB,CAAjB,iBACC,oBAAC,CAAD,CAAG,kBAAH;AAAsB,QAAA,OAAO,EAAE,KAAKlC;AAApC,sBACE,oBAAC,eAAD,OADF,EACsB,GADtB,eAEE,oBAAC,gBAAD;AACE,QAAA,cAAc,EACZrB,eAAe,CAAC,mCAAD,CAFnB;AAIE,QAAA,WAAW,EAAC,yBAJd;AAKE,QAAA,EAAE,EAAC,mCALL;AAME,QAAA,MAAM,EAAE;AACNoE,UAAAA,UAAU,EAAErB,MAAM,CAACQ;AADb;AANV,QAFF,EAYG,CAACC,4BAAD,iBACC,oBAAC,CAAD,CAAG,WAAH;AAAe,QAAA,QAAQ,EAAElC;AAAzB,QAbJ,CAxDJ,eA2EE,oBAAC,aAAD;AAAe,QAAA,QAAQ,EAAE,GAAzB;AAA8B,QAAA,MAAM,EAAEmC,YAAY,GAAG,MAAH,GAAY;AAA9D,sBACE,oBAAC,UAAD;AACE,QAAA,MAAM,EAAEjC,GAAG,CAACuB,MADd;AAEE,QAAA,SAAS,EAAEpB,aAFb;AAGE,QAAA,QAAQ,EAAEa;AAHZ,QADF,CA3EF,EAmFGhB,GAAG,CAAC6C,iBAAJ,IAAyB7C,GAAG,CAAC6C,iBAAJ,CAAsBd,MAAtB,GAA+B,CAAxD,iBACC,oBAAC,CAAD,CAAG,iBAAH,qBAEE,oBAAC,CAAD,CAAG,uBAAH,qBACE,oBAAC,iBAAD;AACE,QAAA,GAAG,EAAE/B,GADP;AAEE,QAAA,OAAO,EAAE,KAAKP,kBAFhB;AAGE,QAAA,aAAa,EAAEC;AAHjB,QADF,EAOGqB,kBAAkB,iBACjB,oBAAC,cAAD;AACE,QAAA,SAAS,eAAEf,GAAG,CAAC8C,IAAN,8CAAE,UAAUC,SADvB;AAEE,QAAA,UAAU,EAAE/C,GAAF,aAAEA,GAAF,qCAAEA,GAAG,CAAE8C,IAAP,+CAAE,WAAWE,MAFzB;AAGE,QAAA,aAAa,EAAEnC,aAHjB;AAIE,QAAA,OAAO,aAAEb,GAAG,CAACiD,EAAN,4CAAE,QAAQF,SAJnB;AAKE,QAAA,QAAQ,EAAE/C,GAAF,aAAEA,GAAF,mCAAEA,GAAG,CAAEiD,EAAP,6CAAE,SAASD,MALrB;AAME,QAAA,MAAM,EAAEhD,GAAG,CAACkD;AANd,QARJ,CAFF,eAqBE,oBAAC,aAAD;AACE,QAAA,QAAQ,EAAE,GADZ;AAEE,QAAA,MAAM,EAAExD,aAAa,GAAG,MAAH,GAAY;AAFnC,sBAIE,oBAAC,CAAD,CAAG,sBAAH,qBACE,oBAAC,iBAAD;AAAmB,QAAA,KAAK,EAAEM,GAAG,CAAC6C;AAA9B,QADF,EAEG,CAAAX,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEiB,KAAT,kBACC,oBAAC,CAAD,CAAG,cAAH,qBACE,oBAAC,gBAAD;AACE,QAAA,cAAc,EACZ3E,eAAe,CAAC,2BAAD,CAFnB;AAIE,QAAA,WAAW,EAAC,8BAJd;AAKE,QAAA,EAAE,EAAC,2BALL;AAME,QAAA,MAAM,EAAE;AACN4E,UAAAA,IAAI,eACF,oBAAC,eAAD;AACE,YAAA,QAAQ,EAAElB,OAAO,CAACiB,KAAR,CAAcE,QAAd,CAAuBC,IADnC;AAEE,YAAA,eAAe,EAAC,cAFlB,CAGE;AACA;AAJF;AAKE,YAAA,KAAK,EAAC,UALR;AAME,YAAA,KAAK,EAAEpB,OAAO,CAACiB,KAAR,CAAcI;AANvB;AAFI;AANV,QADF,CAHJ,CAJF,CArBF,EAqDGvD,GAAG,CAACwD,WAAJ,iBACC,+CACE,oBAAC,gBAAD;AACE,QAAA,cAAc,EACZhF,eAAe,CAAC,kCAAD,CAFnB;AAIE,QAAA,WAAW,EAAC,8CAJd;AAKE,QAAA,EAAE,EAAC,kCALL;AAME,QAAA,MAAM,EAAE;AACNiF,UAAAA,QAAQ,eAAE,oBAAC,QAAD;AAAU,YAAA,OAAO,EAAEzD,GAAG,CAACwD;AAAvB;AADJ;AANV,QADF,CAtDJ,CApFJ,CAjDF,CAFF,CADF;AAiND;;;;EA/R0BvF,S;;AAkS7B,eAAeI,UAAU,CAACkB,cAAD,CAAzB;AAEA,SAASd,UAAT,EAAqBC,iBAArB,EAAwCC,cAAxC","sourcesContent":["import coreUtils from \"@opentripplanner/core-utils\";\nimport {\n  FareProductSelector,\n  FlexBookingInfo,\n  Leg,\n  LegIconComponent,\n  TransitOperator\n} from \"@opentripplanner/types\";\nimport React, { Component, FunctionComponent, ReactElement } from \"react\";\nimport AnimateHeight from \"react-animate-height\";\nimport {\n  FormattedMessage,\n  FormattedNumber,\n  injectIntl,\n  IntlShape\n} from \"react-intl\";\n\nimport { Duration } from \"../defaults\";\n\nimport * as S from \"../styled\";\nimport {\n  RouteDescriptionProps,\n  RouteDescriptionFooterProps,\n  SetActiveLegFunction,\n  SetViewedTripFunction,\n  TransitLegSubheaderProps,\n  TransitLegSummaryProps\n} from \"../types\";\nimport { defaultMessages } from \"../util\";\n\nimport AlertsBody from \"./alerts-body\";\nimport IntermediateStops from \"./intermediate-stops\";\nimport ViewTripButton from \"./view-trip-button\";\n\ninterface Props {\n  AlertBodyIcon?: FunctionComponent;\n  AlertToggleIcon?: FunctionComponent;\n  alwaysCollapseAlerts: boolean;\n  defaultFareSelector?: FareProductSelector;\n  intl: IntlShape;\n  leg: Leg;\n  legDestination: string;\n  LegIcon: LegIconComponent;\n  legIndex: number;\n  RouteDescription: FunctionComponent<RouteDescriptionProps>;\n  RouteDescriptionFooter: FunctionComponent<RouteDescriptionFooterProps>;\n  setActiveLeg: SetActiveLegFunction;\n  setViewedTrip: SetViewedTripFunction;\n  showAgencyInfo: boolean;\n  showViewTripButton: boolean;\n  timeZone: string;\n  TransitLegSubheader?: FunctionComponent<TransitLegSubheaderProps>;\n  TransitLegSummary: FunctionComponent<TransitLegSummaryProps>;\n  transitOperator?: TransitOperator;\n}\n\ninterface State {\n  alertsExpanded: boolean;\n  stopsExpanded: boolean;\n}\n\nconst maximumAlertCountToShowUncollapsed = 2;\n\n/**\n * Helper function that assembles values for flex pickup/dropoff messages.\n */\nfunction getFlexMessageValues(info: FlexBookingInfo) {\n  // There used to be a variable `hasLeadTime` here. This should be brought back\n  // if the leadTime check is ever to be more than just checking the value of\n  // daysPrior (which can be done within react-intl)\n  const hasPhone = !!info?.contactInfo?.phoneNumber;\n  const leadDays = info?.latestBookingTime?.daysPrior;\n  const phoneNumber = info?.contactInfo?.phoneNumber;\n  return {\n    action: hasPhone ? (\n      <FormattedMessage\n        defaultMessage={defaultMessages[\"otpUi.ItineraryBody.flexCallNumber\"]}\n        description=\"For calling a phone number.\"\n        id=\"otpUi.ItineraryBody.flexCallNumber\"\n        values={{ phoneNumber }}\n      />\n    ) : (\n      <FormattedMessage\n        defaultMessage={defaultMessages[\"otpUi.ItineraryBody.flexCallAhead\"]}\n        description=\"For calling ahead.\"\n        id=\"otpUi.ItineraryBody.flexCallAhead\"\n      />\n    ),\n    advanceNotice:\n      leadDays > 0 ? (\n        <FormattedMessage\n          defaultMessage={\n            defaultMessages[\"otpUi.ItineraryBody.flexAdvanceNotice\"]\n          }\n          description=\"Advance notice for flex service.\"\n          id=\"otpUi.ItineraryBody.flexAdvanceNotice\"\n          values={{ leadDays }}\n        />\n      ) : (\n        \"\"\n      )\n  };\n}\n\nclass TransitLegBody extends Component<Props, State> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alertsExpanded: false,\n      stopsExpanded: false\n    };\n  }\n\n  onToggleStopsClick = () => {\n    const { stopsExpanded } = this.state;\n    this.setState({ stopsExpanded: !stopsExpanded });\n  };\n\n  onToggleAlertsClick = () => {\n    const { alertsExpanded } = this.state;\n    this.setState({ alertsExpanded: !alertsExpanded });\n  };\n\n  onSummaryClick = () => {\n    const { leg, legIndex, setActiveLeg } = this.props;\n    setActiveLeg(legIndex, leg);\n  };\n\n  render(): ReactElement {\n    const {\n      AlertBodyIcon,\n      AlertToggleIcon = S.DefaultAlertToggleIcon,\n      alwaysCollapseAlerts,\n      defaultFareSelector,\n      intl,\n      leg,\n      legDestination,\n      LegIcon,\n      RouteDescription,\n      RouteDescriptionFooter,\n      setViewedTrip,\n      showAgencyInfo,\n      showViewTripButton,\n      timeZone,\n      TransitLegSubheader,\n      TransitLegSummary,\n      transitOperator\n    } = this.props;\n    const { agencyBrandingUrl, agencyName, agencyUrl, alerts } = leg;\n    const { alertsExpanded, stopsExpanded } = this.state;\n\n    const isReservationRequired = coreUtils.itinerary.isReservationRequired(\n      leg\n    );\n\n    // If the config contains an operator name, prefer that one over the\n    // one provided by OTP\n    const transitOperatorName = transitOperator?.name || agencyName;\n\n    // If the config contains an operator with a logo URL, prefer that over the\n    // one provided by OTP (which is derived from agency.txt#agency_branding_url)\n    const logoUrl =\n      transitOperator && transitOperator.logo\n        ? transitOperator.logo\n        : agencyBrandingUrl;\n\n    const shouldCollapseDueToAlertCount =\n      leg.alerts?.length > maximumAlertCountToShowUncollapsed;\n    // The alerts expansion triangle is shown when `!shouldOnlyShowAlertsExpanded`.\n    // `!leg.alerts` is needed here so the triangle isn't shown when there are 0 alerts.\n    const shouldOnlyShowAlertsExpanded =\n      !(shouldCollapseDueToAlertCount || alwaysCollapseAlerts) || !leg.alerts;\n    const expandAlerts = alertsExpanded || shouldOnlyShowAlertsExpanded;\n\n    const legCost =\n      defaultFareSelector &&\n      coreUtils.itinerary.getLegCost(\n        leg,\n        defaultFareSelector.mediumId,\n        defaultFareSelector.riderCategoryId\n      );\n\n    return (\n      <>\n        {TransitLegSubheader && <TransitLegSubheader leg={leg} />}\n        <S.LegBody>\n          {/* The Route Icon/Name Bar */}\n          <S.LegClickable>\n            <S.LegDescription>\n              <span>\n                <S.InvisibleAdditionalDetails>\n                  {\" - \"}\n                  <FormattedMessage\n                    defaultMessage={\n                      defaultMessages[\"otpUi.TransitLegBody.ride\"]\n                    }\n                    description=\"Prompt to ride a transit vehicle.\"\n                    id=\"otpUi.TransitLegBody.ride\"\n                  />\n                </S.InvisibleAdditionalDetails>\n                <RouteDescription\n                  leg={leg}\n                  LegIcon={LegIcon}\n                  transitOperator={transitOperator}\n                />\n                <S.InvisibleAdditionalDetails>\n                  {\" - \"}\n                  <FormattedMessage\n                    // TODO: Accommodate interline itineraries with \"Stay on board\" instructions.\n                    defaultMessage={\n                      defaultMessages[\"otpUi.TransitLegBody.disembarkAt\"]\n                    }\n                    description=\"Prompt to exit a transit vehicle.\"\n                    id=\"otpUi.TransitLegBody.disembarkAt\"\n                    values={{\n                      legDestination\n                    }}\n                  />\n                </S.InvisibleAdditionalDetails>\n              </span>\n              <S.LegClickableButton onClick={this.onSummaryClick}>\n                <S.InvisibleAdditionalDetails>\n                  <FormattedMessage\n                    defaultMessage={\n                      defaultMessages[\"otpUi.TransitLegBody.zoomToLeg\"]\n                    }\n                    description=\"Identifies behavior of button\"\n                    id=\"otpUi.TransitLegBody.zoomToLeg\"\n                  />\n                </S.InvisibleAdditionalDetails>\n              </S.LegClickableButton>\n            </S.LegDescription>\n          </S.LegClickable>\n          {RouteDescriptionFooter && <RouteDescriptionFooter leg={leg} />}\n          <div\n            // Creates a group of leg details for screenreaders after the initial leg description.\n            aria-label={intl.formatMessage({\n              defaultMessage:\n                defaultMessages[\"otpUi.TransitLegBody.legDetails\"],\n              description: \"Identifies this section as trip leg details\",\n              id: \"otpUi.TransitLegBody.legDetails\"\n            })}\n            role=\"group\"\n          >\n            {/* Agency information */}\n            {showAgencyInfo && (\n              <S.AgencyInfo>\n                <FormattedMessage\n                  defaultMessage={\n                    defaultMessages[\"otpUi.TransitLegBody.operatedBy\"]\n                  }\n                  description=\"Tells which agency operates the service\"\n                  id=\"otpUi.TransitLegBody.operatedBy\"\n                  values={{\n                    agencyLink: (\n                      <a\n                        aria-label={intl.formatMessage(\n                          {\n                            id: \"otpUi.TransitLegBody.agencyExternalLink\"\n                          },\n                          {\n                            agencyName\n                          }\n                        )}\n                        href={agencyUrl || \"#\"}\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                      >\n                        {transitOperatorName}\n                        {logoUrl && <img alt=\"\" src={logoUrl} height={25} />}\n                      </a>\n                    )\n                  }}\n                />\n              </S.AgencyInfo>\n            )}\n            {isReservationRequired && leg.pickupBookingInfo && (\n              <S.CallAheadWarning>\n                <FormattedMessage\n                  defaultMessage={\n                    defaultMessages[\"otpUi.ItineraryBody.flexPickupMessage\"]\n                  }\n                  description=\"Instructions for booking and boarding the flex (on-demand) transit service.\"\n                  id=\"otpUi.ItineraryBody.flexPickupMessage\"\n                  values={getFlexMessageValues(leg.pickupBookingInfo)}\n                />\n              </S.CallAheadWarning>\n            )}\n            {/* Alerts toggle */}\n            {alerts?.length > 0 && (\n              <S.TransitAlertToggle onClick={this.onToggleAlertsClick}>\n                <AlertToggleIcon />{\" \"}\n                <FormattedMessage\n                  defaultMessage={\n                    defaultMessages[\"otpUi.TransitLegBody.alertsHeader\"]\n                  }\n                  description=\"Number of alerts header\"\n                  id=\"otpUi.TransitLegBody.alertsHeader\"\n                  values={{\n                    alertCount: alerts.length\n                  }}\n                />\n                {!shouldOnlyShowAlertsExpanded && (\n                  <S.CaretToggle expanded={alertsExpanded} />\n                )}\n              </S.TransitAlertToggle>\n            )}\n\n            {/* The Alerts body, if visible */}\n            <AnimateHeight duration={500} height={expandAlerts ? \"auto\" : 0}>\n              <AlertsBody\n                alerts={leg.alerts}\n                AlertIcon={AlertBodyIcon}\n                timeZone={timeZone}\n              />\n            </AnimateHeight>\n            {/* The \"Ride X Min / X Stops\" Row, including IntermediateStops body */}\n            {leg.intermediateStops && leg.intermediateStops.length > 0 && (\n              <S.TransitLegDetails>\n                {/* The header summary row, clickable to expand intermediate stops */}\n                <S.TransitLegDetailsHeader>\n                  <TransitLegSummary\n                    leg={leg}\n                    onClick={this.onToggleStopsClick}\n                    stopsExpanded={stopsExpanded}\n                  />\n\n                  {showViewTripButton && (\n                    <ViewTripButton\n                      fromIndex={leg.from?.stopIndex}\n                      fromStopId={leg?.from?.stopId}\n                      setViewedTrip={setViewedTrip}\n                      toIndex={leg.to?.stopIndex}\n                      toStopId={leg?.to?.stopId}\n                      tripId={leg.tripId}\n                    />\n                  )}\n                </S.TransitLegDetailsHeader>\n                {/* IntermediateStops expanded body */}\n                <AnimateHeight\n                  duration={500}\n                  height={stopsExpanded ? \"auto\" : 0}\n                >\n                  <S.TransitLegExpandedBody>\n                    <IntermediateStops stops={leg.intermediateStops} />\n                    {legCost?.price && (\n                      <S.TransitLegFare>\n                        <FormattedMessage\n                          defaultMessage={\n                            defaultMessages[\"otpUi.TransitLegBody.fare\"]\n                          }\n                          description=\"Describes the fare for a leg\"\n                          id=\"otpUi.TransitLegBody.fare\"\n                          values={{\n                            fare: (\n                              <FormattedNumber\n                                currency={legCost.price.currency.code}\n                                currencyDisplay=\"narrowSymbol\"\n                                // This isn't a \"real\" style prop\n                                // eslint-disable-next-line react/style-prop-object\n                                style=\"currency\"\n                                value={legCost.price.amount}\n                              />\n                            )\n                          }}\n                        />\n                      </S.TransitLegFare>\n                    )}\n                  </S.TransitLegExpandedBody>\n                </AnimateHeight>\n                {/* Average wait details, if present */}\n                {leg.averageWait && (\n                  <span>\n                    <FormattedMessage\n                      defaultMessage={\n                        defaultMessages[\"otpUi.TransitLegBody.typicalWait\"]\n                      }\n                      description=\"Describes the typical wait for a transit leg\"\n                      id=\"otpUi.TransitLegBody.typicalWait\"\n                      values={{\n                        waitTime: <Duration seconds={leg.averageWait} />\n                      }}\n                    />\n                  </span>\n                )}\n              </S.TransitLegDetails>\n            )}\n          </div>\n        </S.LegBody>\n      </>\n    );\n  }\n}\n\nexport default injectIntl(TransitLegBody);\n\nexport { AlertsBody, IntermediateStops, ViewTripButton };\n"],"file":"index.js"}