{"version":3,"sources":["../../src/defaults/access-leg-description.tsx"],"names":["humanizeDistanceString","React","FormattedMessage","useIntl","S","defaultMessages","getPlaceName","getSummaryMode","leg","intl","mode","formatMessage","defaultMessage","description","id","rideHailingEstimate","AccessLegDescription","className","config","style","toPlace","to","vertexType","modeContent","placeContent","companies","distance","place"],"mappings":"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","sourcesContent":["import { humanizeDistanceString } from \"@opentripplanner/humanize-distance\";\nimport { Config, Leg } from \"@opentripplanner/types\";\nimport React, { HTMLAttributes, ReactElement } from \"react\";\nimport { FormattedMessage, IntlShape, useIntl } from \"react-intl\";\nimport * as S from \"../styled\";\n\nimport { defaultMessages, getPlaceName } from \"../util\";\n\ninterface Props extends HTMLAttributes<HTMLSpanElement> {\n  config: Config;\n  leg: Leg;\n}\n\n/**\n * Gets the summary mode in the ambient language.\n */\nexport function getSummaryMode(leg: Leg, intl: IntlShape): string {\n  switch (leg.mode) {\n    case \"BICYCLE\":\n      return intl.formatMessage({\n        defaultMessage: defaultMessages[\"otpUi.AccessLegBody.summaryMode.bike\"],\n        description: \"Bike to somewhere\",\n        id: \"otpUi.AccessLegBody.summaryMode.bike\"\n      });\n    case \"BICYCLE_RENT\":\n      return intl.formatMessage({\n        defaultMessage:\n          defaultMessages[\"otpUi.AccessLegBody.summaryMode.bikeshare\"],\n        description: \"Bikeshare to somewhere\",\n        id: \"otpUi.AccessLegBody.summaryMode.bikeshare\"\n      });\n    case \"CAR\":\n      return leg.rideHailingEstimate\n        ? intl.formatMessage({\n            defaultMessage:\n              defaultMessages[\"otpUi.AccessLegBody.summaryMode.carHail\"],\n            description: \"Ride in a car/taxi to somewhere\",\n            id: \"otpUi.AccessLegBody.summaryMode.carHail\"\n          })\n        : intl.formatMessage({\n            defaultMessage:\n              defaultMessages[\"otpUi.AccessLegBody.summaryMode.carDrive\"],\n            description: \"Drive somewhere\",\n            id: \"otpUi.AccessLegBody.summaryMode.carDrive\"\n          });\n    case \"MICROMOBILITY\":\n    case \"MICROMOBILITY_RENT\":\n    case \"SCOOTER\":\n      return intl.formatMessage({\n        defaultMessage:\n          defaultMessages[\"otpUi.AccessLegBody.summaryMode.escooter\"],\n        description: \"Use an e-scooter\",\n        id: \"otpUi.AccessLegBody.summaryMode.escooter\"\n      });\n    case \"WALK\":\n      return intl.formatMessage({\n        defaultMessage: defaultMessages[\"otpUi.AccessLegBody.summaryMode.walk\"],\n        description: \"Walk to somewhere\",\n        id: \"otpUi.AccessLegBody.summaryMode.walk\"\n      });\n    default:\n      return leg.mode;\n  }\n}\n\n/**\n * Renders leg description text, e.g. \"Walk 0.5 mi to...\"\n * while letting others style the mode and place text.\n */\nexport default function AccessLegDescription({\n  className,\n  config,\n  leg,\n  style\n}: Props): ReactElement {\n  const intl = useIntl();\n  // Replace the Vertex Type for BIKESHARE with VEHICLE as we do not know that\n  // it is a bike yet because that information is in the next leg with OTP2.\n  const toPlace = {\n    ...leg.to,\n    vertexType:\n      leg.to.vertexType === \"BIKESHARE\" ? \"VEHICLE\" : leg.to.vertexType\n  };\n  const modeContent = getSummaryMode(leg, intl);\n  const placeContent = (\n    <S.LegDescriptionPlace>\n      {getPlaceName(toPlace, config.companies, intl)}\n    </S.LegDescriptionPlace>\n  );\n\n  return (\n    // Return an HTML element which is passed a className (and style props)\n    // for styled-components support.\n    <span className={className} style={style}>\n      {leg.distance > 0 ? (\n        <FormattedMessage\n          defaultMessage=\"{mode} {distance} to {place}\"\n          description=\"Summarizes an access leg, including distance\"\n          id=\"otpUi.AccessLegBody.summaryAndDistance\"\n          values={{\n            // TODO: Implement metric vs imperial (up until now it's just imperial).\n            distance: humanizeDistanceString(leg.distance, false, intl),\n            mode: modeContent,\n            place: placeContent\n          }}\n        />\n      ) : (\n        <FormattedMessage\n          defaultMessage=\"{mode} to {place}\"\n          description=\"Summarizes an access leg\"\n          id=\"otpUi.AccessLegBody.summary\"\n          values={{\n            mode: modeContent,\n            place: placeContent\n          }}\n        />\n      )}\n    </span>\n  );\n}\n"],"file":"access-leg-description.js"}