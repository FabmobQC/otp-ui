{"version":3,"sources":["../../src/defaults/route-description.tsx"],"names":["getLegRouteShortName","React","S","RouteLongName","RouteDescription","leg","routeShortName"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,2CAArC;AACA,OAAOC,KAAP,MAAoC,OAApC;AAEA,OAAO,KAAKC,CAAZ,MAAmB,WAAnB;AAGA,OAAOC,aAAP,MAA0B,mBAA1B;AAEA,eAAe,SAASC,gBAAT,OAEyB;AAAA,MADtCC,GACsC,QADtCA,GACsC;AACtC,MAAMC,cAAc,GAAGN,oBAAoB,CAACK,GAAD,CAA3C;AACA,sBACE,oBAAC,CAAD,CAAG,wBAAH,QACGC,cAAc,iBACb,8CACE,oBAAC,CAAD,CAAG,4BAAH,QACGA,cADH,CADF,CAFJ,eAQE,oBAAC,CAAD,CAAG,2BAAH,qBACE,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAED;AAApB,IADF,CARF,CADF;AAcD","sourcesContent":["import { getLegRouteShortName } from \"@opentripplanner/core-utils/lib/itinerary\";\nimport React, { ReactElement } from \"react\";\n\nimport * as S from \"../styled\";\nimport { RouteDescriptionProps } from \"../types\";\n\nimport RouteLongName from \"./route-long-name\";\n\nexport default function RouteDescription({\n  leg\n}: RouteDescriptionProps): ReactElement {\n  const routeShortName = getLegRouteShortName(leg);\n  return (\n    <S.LegDescriptionForTransit>\n      {routeShortName && (\n        <div>\n          <S.LegDescriptionRouteShortName>\n            {routeShortName}\n          </S.LegDescriptionRouteShortName>\n        </div>\n      )}\n      <S.LegDescriptionRouteLongName>\n        <RouteLongName leg={leg} />\n      </S.LegDescriptionRouteLongName>\n    </S.LegDescriptionForTransit>\n  );\n}\n"],"file":"route-description.js"}