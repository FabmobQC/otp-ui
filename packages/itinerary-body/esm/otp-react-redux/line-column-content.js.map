{"version":3,"sources":["../../src/otp-react-redux/line-column-content.tsx"],"names":["coreUtils","LocationIcon","React","styled","css","Circle","cssWalk","cssBicycle","cssCar","cssMicromobility","cssTransit","getLegCSS","mode","IconStacker","span","legLineBackgroundColor","leg","routeColor","transitLeg","itinerary","isTransit","undefined","barberPole","gap","LegLine","div","props","isFlex","StackedCircle","StackedCircleInner","StyledLocationIcon","LineColumnContent","interline","isDestination","lastLeg","legIndex","legBadge","from","bikeShareId","rentalVehicle","startsWith","vertexType"],"mappings":"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","sourcesContent":["import coreUtils from \"@opentripplanner/core-utils\";\nimport LocationIcon from \"@opentripplanner/location-icon\";\nimport { Leg } from \"@opentripplanner/types\";\nimport React, { ReactElement } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { Circle } from \"@styled-icons/fa-solid/Circle\";\n\nimport { LineColumnContentProps } from \"../types\";\n\ninterface LegLineProps {\n  leg: Leg;\n  routeColor: string;\n}\n\nconst cssWalk = css`\n  background: radial-gradient(ellipse at center, #87cefa 40%, transparent 10%);\n  background-position: center -5px;\n  background-repeat: repeat-y;\n  background-size: 12px 12px;\n  left: 6px;\n  right: 6px;\n`;\n\nconst cssBicycle = css`\n  background: repeating-linear-gradient(\n    0deg,\n    red,\n    red 8px,\n    white 8px,\n    white 12.5px\n  );\n  left: 7.5px;\n  right: 7.5px;\n`;\n\nconst cssCar = css`\n  background: repeating-linear-gradient(\n    0deg,\n    grey,\n    grey 8px,\n    white 8px,\n    white 12.5px\n  );\n  left: 7.5px;\n  right: 7.5px;\n`;\n\nconst cssMicromobility = css`\n  background: repeating-linear-gradient(\n    0deg,\n    #f5a729,\n    #f5a729 8px,\n    white 8px,\n    white 12.5px\n  );\n  left: 7.5px;\n  right: 7.5px;\n`;\n\nconst cssTransit = css`\n  background-color: gray;\n  left: 5px;\n  right: 5px;\n`;\n\nfunction getLegCSS(mode) {\n  switch (mode) {\n    case \"WALK\":\n      return cssWalk;\n    case \"BICYCLE\":\n    case \"BICYCLE_RENT\":\n      return cssBicycle;\n    case \"CAR\":\n      return cssCar;\n    case \"MICROMOBILITY\":\n    case \"MICROMOBILITY_RENT\":\n    case \"SCOOTER\":\n      return cssMicromobility;\n    default:\n      return cssTransit;\n  }\n}\n\nconst IconStacker = styled.span`\n  position: absolute;\n  width: 100%;\n  top: 3px;\n  z-index: 20;\n`;\n\nconst legLineBackgroundColor = ({ leg, routeColor }: LegLineProps): string => {\n  const { mode } = leg;\n  return leg.transitLeg || coreUtils.itinerary.isTransit(mode)\n    ? routeColor\n      ? `#${routeColor}`\n      : \"#000088\"\n    : undefined;\n};\n\n/**\n * Generates background-image CSS for \"barber pole\" effect\n * @param routeColor  the background color. Assumed to be hex.\n */\nexport const barberPole = (\n  routeColor: string,\n  gap = 5\n): string => `repeating-linear-gradient( \n  -45deg, \n  ${routeColor}30, \n  ${routeColor}30 ${gap}px, \n  ${routeColor} ${gap}px, \n  ${routeColor} ${gap * 2}px\n  );`;\n\nconst LegLine = styled.div<LegLineProps>`\n  ${props => getLegCSS(props.leg.mode)}\n\n  /* Disabling CSS order rules is the only way to ensure styles override each other properly */\n  /* stylelint-disable declaration-block-no-shorthand-property-overrides */ \n  background-color: ${props => legLineBackgroundColor(props)};\n  background: ${props =>\n    coreUtils.itinerary.isFlex(props.leg)\n      ? barberPole(legLineBackgroundColor(props))\n      : undefined};\n  bottom: -11px;\n  position: absolute;\n  top: 11px;\n  z-index: 10;\n`;\n\nconst StackedCircle = styled(Circle)`\n  left: 0;\n  line-height: inherit;\n  position: absolute;\n  text-align: center;\n  width: 100%;\n`;\n\nconst StackedCircleInner = styled(StackedCircle)`\n  top: 3px;\n`;\n\nconst StyledLocationIcon = styled(LocationIcon)`\n  left: 0;\n  position: absolute;\n  text-align: center;\n  width: 100%;\n`;\n\nexport default function LineColumnContent({\n  interline,\n  isDestination,\n  lastLeg,\n  leg,\n  legIndex\n}: LineColumnContentProps): ReactElement {\n  let legBadge;\n  if (interline) {\n    // Interlined. Don't create a leg badge as a stop marker should be inserted\n    // from the place name\n  } else if (isDestination) {\n    // Destination\n    legBadge = (\n      <>\n        <StackedCircleInner size={14} color=\"white\" />\n        <StyledLocationIcon size={20} type=\"to\" />\n      </>\n    );\n  } else if (legIndex === 0) {\n    // Origin\n    legBadge = (\n      <>\n        <StackedCircleInner size={14} color=\"white\" />\n        <StyledLocationIcon size={20} type=\"from\" />\n      </>\n    );\n  } else if (\n    ((leg.from.bikeShareId || leg.from.rentalVehicle) &&\n      leg.mode.startsWith(\"BICYCLE\")) ||\n    (lastLeg.from.bikeShareId && leg.mode === \"WALK\")\n  ) {\n    // start or end of a bike rental leg (not including origin or\n    // destination)\n    legBadge = <StackedCircle size={17} color=\"red\" />;\n  } else if (\n    leg.from.vertexType === \"VEHICLERENTAL\" ||\n    leg.from.vertexType === \"BIKESHARE\" ||\n    (lastLeg.from.vertexType === \"VEHICLERENTAL\" && leg.mode === \"WALK\") ||\n    (lastLeg.from.vertexType === \"BIKESHARE\" && leg.mode === \"WALK\")\n  ) {\n    // start or end of a vehicle rental leg (not including origin or\n    // destination)\n    legBadge = <StackedCircle size={17} color=\"#f5a729\" />;\n  } else if (\n    (leg.mode === \"CAR\" && lastLeg.mode === \"WALK\") ||\n    (lastLeg.mode === \"CAR\" && leg.mode === \"WALK\")\n  ) {\n    // start or end of a car rental/TNC/P&R leg (not including origin or\n    // destination)\n    legBadge = <StackedCircle size={17} color=\"#888\" />;\n  } else {\n    legBadge = (\n      <>\n        <StackedCircle size={20} color=\"black\" />\n        <StackedCircleInner size={14} color=\"white\" />\n      </>\n    );\n  }\n\n  return (\n    <>\n      {!isDestination && <LegLine leg={leg} routeColor={leg.routeColor} />}\n      <IconStacker>{legBadge}</IconStacker>\n    </>\n  );\n}\n"],"file":"line-column-content.js"}