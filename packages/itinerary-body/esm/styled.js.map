{"version":3,"sources":["../src/styled.tsx"],"names":["Map","React","styled","css","CaretDown","CaretUp","ExclamationTriangle","toModeBorder","toModeColor","toSafeRouteColor","LightBorderDiv","div","props","hideBorder","theme","borderColor","TransparentButton","button","AnchorButton","a","LinkButton","ViewerButton","AccessBadge","mode","routeColor","ArrivalTimeContainer","CallAheadWarning","BookLaterContainer","BookLaterInnerContainer","BookLaterPointer","BookLaterText","BookTNCRideButton","BookTNCRideButtonContainer","TNCTravelTime","TNCCost","CaretToggleBase","className","expanded","CaretToggle","Destination","InnerLine","InterlineDot","InterlineName","IntermediateStops","ol","ItineraryBody","LegBody","LegClickable","LegClickableButton","LegDescription","span","InvisibleAdditionalDetails","LegDescriptionHeadsignPrefix","LegDescriptionMode","LegDescriptionPlace","LegDescriptionRouteLongName","LegDescriptionRouteShortName","LegDescriptionForTransit","LegIconContainer","LegIconAndRouteShortName","LegLine","LineBadgeContainer","LineColumn","LegDetails","PlaceRowWrapper","li","PreviewContainer","active","TimeColumn","MapButton","MapButtonColumn","MapIcon","attrs","fill","secondaryColor","width","height","role","PlaceDetails","PlaceHeader","PlaceName","PlaceSubheader","PreviewDiagram","PreviewDiagramElevationChange","PreviewDiagramElevationGain","PreviewDiagramElevationLoss","PreviewDiagramTitle","RouteBadge","mainColor","badgeBorderColor","SROnly","SRHidden","Steps","StepDescriptionContainer","StepsHeaderAndMapLink","stepsHeaderStyling","StepsHeaderButton","StepsHeaderSpan","StepIconContainer","StepRow","StepStreetName","StepLength","StopIdSpan","StopMarker","StopName","StopRow","TransitAlert","TransitAlertBody","TransitAlertEffectiveDate","TransitAlertHeader","TransitAlertIconContainer","TransitAlerts","TransitAlertToggle","TransitLegDetails","TransitLegDetailsHeader","TransitLegExpandedBody","TransitLegFare","TransitLegSummary","DefaultAlertToggleIcon","size","DefaultAlertBodyIcon","AgencyInfo"],"mappings":"AAAA;AACA;AACA,SAASA,GAAT,QAAoB,wBAApB;AACA,OAAOC,KAAP,MAAoC,OAApC;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,SAASC,SAAT,QAA0B,kCAA1B;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,mBAAT,QAAoC,4CAApC;AAEA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,gBAApC,QAA4D,QAA5D;;AASA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,cAAc,GAAGR,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,gIAEL,UAAAC,KAAK;AAAA,SAAKA,KAAK,CAACC,UAAN,KAAqB,MAArB,GAA8B,GAA9B,GAAoC,KAAzC;AAAA,CAFA,EAGL,UAAAD,KAAK;AAAA,SAAIA,KAAK,CAACE,KAAN,CAAYC,WAAhB;AAAA,CAHA,EAIV,UAAAH,KAAK;AAAA,SAAKA,KAAK,CAACC,UAAN,KAAqB,MAArB,GAA8B,GAA9B,GAAoC,MAAzC;AAAA,CAJK,EAKP,UAAAD,KAAK;AAAA,SAAKA,KAAK,CAACC,UAAN,KAAqB,MAArB,GAA8B,MAA9B,GAAuC,GAA5C;AAAA,CALE,EAMZ,UAAAD,KAAK;AAAA,SAChBA,KAAK,CAACC,UAAN,KAAqB,MAArB,GAA8B,EAA9B,GAAmC,mBADnB;AAAA,CANO,CAApB;AAUP,OAAO,IAAMG,iBAAiB,GAAGd,MAAM,CAACe,MAAV;AAAA;AAAA;AAAA,4GAAvB;AASP,OAAO,IAAMC,YAAY,GAAGhB,MAAM,CAACiB,CAAV;AAAA;AAAA;AAAA,4nBAAlB;AA6CP,OAAO,IAAMC,UAAU,GAAGlB,MAAM,CAACiB,CAAV;AAAA;AAAA;AAAA,qFAAhB;AAUP,OAAO,IAAME,YAAY,GAAGnB,MAAM,CAACkB,UAAD,CAAT;AAAA;AAAA;AAAA,8EAAlB,C,CAUP;AACA;AACA;;AAOA;AACA,OAAO,IAAME,WAAW,GAAGpB,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,oNAEF,UAAAC,KAAK;AAAA,SAAIJ,WAAW,CAACI,KAAK,CAACW,IAAP,EAAaX,KAAK,CAACY,UAAnB,CAAf;AAAA,CAFH,CAAjB;AAgBP,OAAO,IAAMC,oBAAoB,GAAGvB,MAAM,CAACe,MAAV;AAAA;AAAA;AAAA,0MAA1B;AAgBP,OAAO,IAAMS,gBAAgB,GAAGxB,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,qCAAtB;AAKP,OAAO,IAAMgB,kBAAkB,GAAGzB,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,4DAAxB;AAQP,OAAO,IAAMiB,uBAAuB,GAAG1B,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,sEAA7B;AAOP,OAAO,IAAMkB,gBAAgB,GAAG3B,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,kKAAtB;AAWP,OAAO,IAAMmB,aAAa,GAAG5B,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,+GAAnB;AASP,OAAO,IAAMoB,iBAAiB,GAAG7B,MAAM,CAACgB,YAAD,CAAT;AAAA;AAAA;AAAA,QAAvB;AAEP,OAAO,IAAMc,0BAA0B,GAAG9B,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,yEAAhC;AAOP,OAAO,IAAMsB,aAAa,GAAG/B,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,QAAnB;AAIP,OAAO,IAAMuB,OAAO,GAAGhC,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,QAAb;AASP,OAAO,IAAMwB,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAC7BC,SAD6B,QAC7BA,SAD6B;AAAA,MAE7BC,QAF6B,QAE7BA,QAF6B;AAAA,sBAI7B;AAAM,IAAA,SAAS,EAAED;AAAjB,KACGC,QAAQ,gBAAG,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAE;AAAf,IAAH,gBAA2B,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE;AAAjB,IADtC,CAJ6B;AAAA,CAAxB;AASP,OAAO,IAAMC,WAAW,GAAGpC,MAAM,CAACiC,eAAD,CAAT;AAAA;AAAA;AAAA,iDAAjB;AAOP,OAAO,IAAMI,WAAW,GAAGrC,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,0BAAjB;AAIP,OAAO,IAAM6B,SAAS,GAAGtC,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,oGAEL,UAAAC,KAAK;AAAA,SAAIL,YAAY,CAACK,KAAK,CAACW,IAAP,EAAaX,KAAK,CAACY,UAAnB,CAAhB;AAAA,CAFA,CAAf;AAUP,OAAO,IAAMiB,YAAY,GAAGvC,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,kGAAlB;AASP,OAAO,IAAM+B,aAAa,GAAGxC,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,QAAnB;AAIP,OAAO,IAAMgC,iBAAiB,GAAGzC,MAAM,CAAC0C,EAAV;AAAA;AAAA;AAAA,+DAAvB;AAOP,OAAO,IAAMC,aAAa,GAAG3C,MAAM,CAAC0C,EAAV;AAAA;AAAA;AAAA,kCAAnB;AAKP,OAAO,IAAME,OAAO,GAAG5C,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,yDAAb;AAMP,OAAO,IAAMoC,YAAY,GAAG7C,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,QAAlB;AAEP;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMqC,kBAAkB,GAAG9C,MAAM,CAACc,iBAAD,CAAT;AAAA;AAAA;AAAA,4FAAxB,C,CAcP;;AACA,OAAO,IAAMiC,cAAc,GAAG/C,MAAM,CAACgD,IAAV;AAAA;AAAA;AAAA,kGAApB,C,CAQP;;AACA,OAAO,IAAMC,0BAA0B,GAAGjD,MAAM,CAACgD,IAAV;AAAA;AAAA;AAAA,mGAAhC;AASP,OAAO,IAAME,4BAA4B,GAAGlD,MAAM,CAACgD,IAAV;AAAA;AAAA;AAAA,wBAAlC;AAIP;AACA;AACA;AACA;;AACA,OAAO,IAAMG,kBAAkB,GAAGnD,MAAM,CAACgD,IAAV;AAAA;AAAA;AAAA,4BAAxB;AAIP;AACA;AACA;AACA;;AACA,OAAO,IAAMI,mBAAmB,GAAGpD,MAAM,CAACgD,IAAV;AAAA;AAAA;AAAA,4BAAzB;AAIP,OAAO,IAAMK,2BAA2B,GAAGrD,MAAM,CAACgD,IAAV;AAAA;AAAA;AAAA,uCAAjC;AAKP,OAAO,IAAMM,4BAA4B,GAAGtD,MAAM,CAACgD,IAAV;AAAA;AAAA;AAAA,yCAAlC;AAKP,OAAO,IAAMO,wBAAwB,GAAGvD,MAAM,CAAC+C,cAAD,CAAT;AAAA;AAAA;AAAA,qCAA9B;AAKP,OAAO,IAAMS,gBAAgB,GAAGxD,MAAM,CAACgD,IAAV;AAAA;AAAA;AAAA,+EAAtB;AAUP,OAAO,IAAMS,wBAAwB,GAAGzD,MAAM,CAACgD,IAAV;AAAA;AAAA;AAAA,sBAA9B;AAIP,OAAO,IAAMU,OAAO,GAAG1D,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,0EAAb;AAOP,OAAO,IAAMkD,kBAAkB,GAAG3D,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,iHAAxB;AAUP,OAAO,IAAMmD,UAAU,GAAG5D,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,8DAAhB;AAOP,OAAO,IAAMoD,UAAU,GAAG7D,MAAM,CAACgD,IAAV;AAAA;AAAA;AAAA,sDAAhB;AAKP,OAAO,IAAMc,eAAe,GAAG9D,MAAM,CAAC+D,EAAV;AAAA;AAAA;AAAA,0EAArB;AAWP,OAAO,IAAMC,gBAAgB,GAAGhE,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,oUACP,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACuD,MAAN,IAAgB,MAApB;AAAA,CADE,EAEX,UAAAvD,KAAK;AAAA,SAAKA,KAAK,CAACuD,MAAN,GAAe,SAAf,GAA2B,MAAhC;AAAA,CAFM,CAAtB;AAuBP,OAAO,IAAMC,UAAU,GAAGlE,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,kFAAhB;AAOP,OAAO,IAAM0D,SAAS,GAAGnE,MAAM,CAACkB,UAAD,CAAT;AAAA;AAAA;AAAA,2GAAf;AAWP,OAAO,IAAMkD,eAAe,GAAGpE,MAAM,CAACQ,cAAD,CAAT;AAAA;AAAA;AAAA,qCAArB;AAKP,OAAO,IAAM6D,OAAO,GAAGrE,MAAM,CAACF,GAAD,CAAN,CAAYwE,KAAZ,CAAkB,UAAA5D,KAAK;AAAA,SAAK;AACjD6D,IAAAA,IAAI,EAAE7D,KAAK,CAACE,KAAN,CAAY4D,cAD+B;AAEjDC,IAAAA,KAAK,EAAE,EAF0C;AAGjDC,IAAAA,MAAM,EAAE,EAHyC;AAIjDC,IAAAA,IAAI,EAAE;AAJ2C,GAAL;AAAA,CAAvB,CAAH;AAAA;AAAA;AAAA,QAAb;AAOP,OAAO,IAAMC,YAAY,GAAG5E,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,6CAAlB;AAKP,OAAO,IAAMoE,WAAW,GAAG7E,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,0EAAjB;AAOP,OAAO,IAAMqE,SAAS,GAAG9E,MAAM,CAACgD,IAAV;AAAA;AAAA;AAAA,8JAAf;AAaP,OAAO,IAAM+B,cAAc,GAAG/E,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,yGAApB;AAaP,OAAO,IAAMuE,cAAc,GAAGhF,MAAM,CAACc,iBAAD,CAAT;AAAA;AAAA;AAAA,+BAApB;AAKP,OAAO,IAAMmE,6BAA6B,GAAGjF,MAAM,CAACgD,IAAV;AAAA;AAAA;AAAA,oEAAnC;AAQP,OAAO,IAAMkC,2BAA2B,GAAGlF,MAAM,CAC/CiF,6BAD+C,CAAT;AAAA;AAAA;AAAA,sBAAjC;AAMP,OAAO,IAAME,2BAA2B,GAAGnF,MAAM,CAC/CiF,6BAD+C,CAAT;AAAA;AAAA;AAAA,oBAAjC;AAMP,OAAO,IAAMG,mBAAmB,GAAGpF,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,wBAAzB;AAYP,OAAO,IAAM4E,UAAU,GAAGrF,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,4PAKD,UAAAC,KAAK;AAAA,SACvBH,gBAAgB,CAACG,KAAK,CAACY,UAAP,CAAhB,IAAsCZ,KAAK,CAACE,KAAN,CAAY0E,SAD3B;AAAA,CALJ,EAcD,UAAA5E,KAAK;AAAA,SAAIA,KAAK,CAACE,KAAN,CAAY2E,gBAAhB;AAAA,CAdJ,CAAhB;AAmBP,OAAO,IAAMC,MAAM,GAAGxF,MAAM,CAACgD,IAAV;AAAA;AAAA;AAAA,iHAAZ;AAWP,OAAO,IAAMyC,QAAQ,GAAGzF,MAAM,CAACgD,IAAP,CAAYsB,KAAZ,CAAkB;AAAE,iBAAe;AAAjB,CAAlB,CAAH;AAAA;AAAA;AAAA,QAAd;AAEP,OAAO,IAAMoB,KAAK,GAAG1F,MAAM,CAAC0C,EAAV;AAAA;AAAA;AAAA,gDAAX;AAMP,OAAO,IAAMiD,wBAAwB,GAAG3F,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,uFAA9B;AAUP,OAAO,IAAMmF,qBAAqB,GAAG5F,MAAM,CAACgD,IAAV;AAAA;AAAA;AAAA,wHAA3B;AAaP,IAAM6C,kBAAkB,GAAG5F,GAAH,+DAAxB;AAOA,OAAO,IAAM6F,iBAAiB,GAAG9F,MAAM,CAACc,iBAAD,CAAT;AAAA;AAAA;AAAA,aAC1B+E,kBAD0B,CAAvB;AAIP,OAAO,IAAME,eAAe,GAAG/F,MAAM,CAACgD,IAAV;AAAA;AAAA;AAAA,iCACxB6C,kBADwB,CAArB;AAKP,OAAO,IAAMG,iBAAiB,GAAGhG,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,uDAAvB;AAOP,OAAO,IAAMwF,OAAO,GAAGjG,MAAM,CAAC+D,EAAV;AAAA;AAAA;AAAA,sEAAb;AAOP,OAAO,IAAMmC,cAAc,GAAGlG,MAAM,CAACgD,IAAV;AAAA;AAAA;AAAA,wBAApB;AAIP,OAAO,IAAMmD,UAAU,GAAGnG,MAAM,CAACgD,IAAV;AAAA;AAAA;AAAA,wDAAhB;AAOP,OAAO,IAAMoD,UAAU,GAAGpG,MAAM,CAACgD,IAAV;AAAA;AAAA;AAAA,yDAAhB;AAMP,OAAO,IAAMqD,UAAU,GAAGrG,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,gDAAhB;AAMP,OAAO,IAAM6F,QAAQ,GAAGtG,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,qCAAd;AAKP,OAAO,IAAM8F,OAAO,GAAGvG,MAAM,CAAC+D,EAAV;AAAA;AAAA;AAAA,qCAAb;AAKP,OAAO,IAAMyC,YAAY,GAAGxG,MAAM,CAACiB,CAAV;AAAA;AAAA;AAAA,yHAAlB;AAUP,OAAO,IAAMwF,gBAAgB,GAAGzG,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,6DAAtB;AAMP,OAAO,IAAMiG,yBAAyB,GAAG1G,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,yEAA/B;AAOP,OAAO,IAAMkG,kBAAkB,GAAG3G,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,wDAAxB;AAMP,OAAO,IAAMmG,yBAAyB,GAAG5G,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,kCAA/B;AAKP,OAAO,IAAMoG,aAAa,GAAG7G,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,qCAAnB;AAKP,OAAO,IAAMqG,kBAAkB,GAAG9G,MAAM,CAACc,iBAAD,CAAT;AAAA;AAAA;AAAA,mGAAxB;AASP,OAAO,IAAMiG,iBAAiB,GAAG/G,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,uBAAvB;AAIP,OAAO,IAAMuG,uBAAuB,GAAGhH,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,mCAA7B;AAKP,OAAO,IAAMwG,sBAAsB,GAAGjH,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,uBAA5B;AAIP,OAAO,IAAMyG,cAAc,GAAGlH,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,QAApB;AAIP,OAAO,IAAM0G,iBAAiB,GAAGnH,MAAM,CAACc,iBAAD,CAAT;AAAA;AAAA;AAAA,kBAAvB;AAIP,OAAO,IAAMsG,sBAAsB,GAAGpH,MAAM,CAACI,mBAAD,CAAN,CAA4BkE,KAA5B,CAAkC;AACtE+C,EAAAA,IAAI,EAAE;AADgE,CAAlC,CAAH;AAAA;AAAA;AAAA,QAA5B;AAIP,OAAO,IAAMC,oBAAoB,GAAGtH,MAAM,CAACI,mBAAD,CAAN,CAA4BkE,KAA5B,CAAkC;AACpE+C,EAAAA,IAAI,EAAE;AAD8D,CAAlC,CAAH;AAAA;AAAA;AAAA,QAA1B;AAIP,OAAO,IAAME,UAAU,GAAGvH,MAAM,CAACS,GAAV;AAAA;AAAA;AAAA,2IAAhB","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore FIXME: Create TypeScript types for the icons package.\nimport { Map } from \"@opentripplanner/icons\";\nimport React, { ReactElement } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { CaretDown } from \"@styled-icons/fa-solid/CaretDown\";\nimport { CaretUp } from \"@styled-icons/fa-solid/CaretUp\";\nimport { ExclamationTriangle } from \"@styled-icons/fa-solid/ExclamationTriangle\";\n\nimport { toModeBorder, toModeColor, toSafeRouteColor } from \"./util\";\n\ninterface LightBorderDivProps {\n  hideBorder: string;\n  theme?: {\n    borderColor?: string;\n  };\n}\n\n/**\n * This component is needed to give the offset border look to stacked place rows\n * Since the value we have access to is \"interlineWithPreviousLeg\" then we\n * have to show/hide the top border of the div and apply a small offset\n */\nexport const LightBorderDiv = styled.div<LightBorderDivProps>`\n  border-top-style: solid;\n  border-top-width: ${props => (props.hideBorder === \"true\" ? \"0\" : \"2px\")};\n  border-top-color: ${props => props.theme.borderColor};\n  padding-top: ${props => (props.hideBorder === \"true\" ? \"0\" : \"10px\")};\n  padding-bottom: ${props => (props.hideBorder === \"true\" ? \"10px\" : \"0\")};\n  transform: ${props =>\n    props.hideBorder === \"true\" ? \"\" : \"translateY(-12px)\"};\n`;\n\nexport const TransparentButton = styled.button`\n  background: transparent;\n  border: 0;\n  color: inherit;\n  cursor: pointer;\n  font-size: inherit;\n  text-decoration: none;\n`;\n\nexport const AnchorButton = styled.a`\n  background-color: #fff;\n  background-image: none;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n  color: #333;\n  cursor: pointer;\n  display: inline-block;\n  font-size: 14px;\n  font-weight: 400;\n  padding: 4px 6px;\n  text-align: center;\n  text-decoration: none;\n  touch-action: manipulation;\n  user-select: none;\n  white-space: nowrap;\n\n  &:hover {\n    color: #333;\n    background-color: #e6e6e6;\n    border-color: #adadad;\n  }\n\n  &:active {\n    color: #333;\n    background-color: #e6e6e6;\n    background-image: none;\n    border-color: #adadad;\n    outline: 0;\n    box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\n  }\n\n  &:focus {\n    color: #333;\n    background-color: #e6e6e6;\n    border-color: #8c8c8c;\n  }\n\n  &:active:hover {\n    color: #333;\n    background-color: #d4d4d4;\n    border-color: #8c8c8c;\n  }\n`;\n\nexport const LinkButton = styled.a`\n  color: #008;\n  cursor: pointer;\n  margin-left: 5px;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const ViewerButton = styled(LinkButton)`\n  padding-left: 0px;\n\n  &:before {\n    content: \"|\";\n    color: black;\n    margin-right: 5px;\n  }\n`;\n\n// ////////////////////////////////////////////////\n// /////////////// App components /////////////////\n// ////////////////////////////////////////////////\n\ninterface ModeRouteProps {\n  mode: string;\n  routeColor: string;\n}\n\n// TODO: Can we turn this into a more abstract element to inherit from for other badges?\nexport const AccessBadge = styled.div<ModeRouteProps>`\n  color: black;\n  background-color: ${props => toModeColor(props.mode, props.routeColor)};\n  border: 2px solid #bbb;\n  text-align: center;\n  width: 25px;\n  height: 25px;\n  font-size: 1.2em;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-left: 1px;\n  /* Add in border for dark mode */\n`;\n\nexport const ArrivalTimeContainer = styled.button`\n  align-items: center;\n  background: none;\n  border: none;\n  color: #007899;\n  cursor: pointer;\n  display: flex;\n  font-size: 0.9em;\n  font-family: inherit;\n  margin: 0;\n  margin-top: 5px;\n  outline: inherit;\n  padding: 0;\n  text-align: inherit;\n`;\n\nexport const CallAheadWarning = styled.div`\n  color: #b22727;\n  margin-top: 5px;\n`;\n\nexport const BookLaterContainer = styled.div`\n  bottom: 0;\n  left: 110px;\n  position: absolute;\n  right: 0;\n  top: 0;\n`;\n\nexport const BookLaterInnerContainer = styled.div`\n  background-color: #fcf9d3;\n  display: table;\n  height: 100%;\n  width: 100%;\n`;\n\nexport const BookLaterPointer = styled.div`\n  border-bottom: 16px solid transparent;\n  border-right: 16px solid #fcf9d3;\n  border-top: 16px solid transparent;\n  height: 0;\n  left: 94px;\n  position: absolute;\n  top: 0;\n  width: 0;\n`;\n\nexport const BookLaterText = styled.div`\n  color: #444;\n  display: table-cell;\n  font-style: italic;\n  line-height: 0.95;\n  padding: 0px 2px;\n  vertical-align: middle;\n`;\n\nexport const BookTNCRideButton = styled(AnchorButton)``;\n\nexport const BookTNCRideButtonContainer = styled.div`\n  height: 32px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n  position: relative;\n`;\n\nexport const TNCTravelTime = styled.div`\n  /* no styling */\n`;\n\nexport const TNCCost = styled.div`\n  /* no styling */\n`;\n\ninterface CaretToggleProps {\n  className?: string;\n  expanded: boolean;\n}\n\nexport const CaretToggleBase = ({\n  className,\n  expanded\n}: CaretToggleProps): ReactElement => (\n  <span className={className}>\n    {expanded ? <CaretUp size={15} /> : <CaretDown size={15} />}\n  </span>\n);\n\nexport const CaretToggle = styled(CaretToggleBase)`\n  &::before {\n    content: \"\";\n    margin: 0 0.125em;\n  }\n`;\n\nexport const Destination = styled.div`\n  text-align: center;\n`;\n\nexport const InnerLine = styled.div<ModeRouteProps>`\n  /* the actual line element */\n  border-left: ${props => toModeBorder(props.mode, props.routeColor)};\n  height: 100%;\n  width: 0;\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n`;\n\nexport const InterlineDot = styled.div`\n  color: #fff;\n  flex: 0 0 15px;\n  margin-left: -33px;\n  margin-right: 18px;\n  position: relative;\n  z-index: 30;\n`;\n\nexport const InterlineName = styled.div`\n  /* special messaging, not sure yet */\n`;\n\nexport const IntermediateStops = styled.ol`\n  display: block;\n  font-size: 13px;\n  list-style: none;\n  padding: 0;\n`;\n\nexport const ItineraryBody = styled.ol`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const LegBody = styled.div`\n  color: #676767;\n  font-size: 13px;\n  padding-bottom: 12px;\n`;\n\nexport const LegClickable = styled.div``;\n\n/**\n * Transparent button, clickable by all, with an invisible text about zooming to a leg on the map.\n * The button sits on top of LegDescription, so that the button's text visually appears to be\n * that of LegDescription.\n */\nexport const LegClickableButton = styled(TransparentButton)`\n  bottom: 0;\n  cursor: pointer;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n  /* This is required for the entire leg to be clickable in Firefox. */\n  width: 100%;\n  /* Place the button just above the elevation chart, \n     so that its outline doesn't appear clipped in Chromium. */\n  z-index: 1;\n`;\n\n// Use <span> for correct semantics as it is the contents of a button or a link.\nexport const LegDescription = styled.span`\n  align-items: center;\n  display: inline-flex;\n  line-height: 16px;\n  min-height: 31px;\n  position: relative;\n`;\n\n// additional description added to ClickableLeg for screenreaders\nexport const InvisibleAdditionalDetails = styled.span`\n  display: inline-block;\n  grid-row-start: 2;\n  grid-column-start: 1;\n  height: 0;\n  overflow: hidden;\n  width: 0;\n`;\n\nexport const LegDescriptionHeadsignPrefix = styled.span`\n  font-weight: 200;\n`;\n\n/**\n * Lets others apply styles to the mode text in\n * \"Bicycle 0.5 miles to City Hall\"\n */\nexport const LegDescriptionMode = styled.span`\n  font-weight: inherit;\n`;\n\n/**\n * Lets others apply styles to the place text in\n * \"Bicycle 0.5 miles to City Hall\"\n */\nexport const LegDescriptionPlace = styled.span`\n  font-weight: inherit;\n`;\n\nexport const LegDescriptionRouteLongName = styled.span`\n  font-size: 13px;\n  font-weight: 500;\n`;\n\nexport const LegDescriptionRouteShortName = styled.span`\n  font-weight: 800;\n  margin-right: 6px;\n`;\n\nexport const LegDescriptionForTransit = styled(LegDescription)`\n  color: #807373;\n  margin-top: 5px;\n`;\n\nexport const LegIconContainer = styled.span`\n  img,\n  svg {\n    margin-right: 6px;\n    height: 24px;\n    width: 24px;\n    vertical-align: bottom;\n  }\n`;\n\nexport const LegIconAndRouteShortName = styled.span`\n  flex-shrink: 0;\n`;\n\nexport const LegLine = styled.div`\n  position: relative;\n  left: 50%;\n  transform: translateX(-50%);\n  height: 100%;\n`;\n\nexport const LineBadgeContainer = styled.div`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  position: absolute;\n  left: 50%;\n  top: 0;\n  transform: translate(-51%, -10%);\n`;\n\nexport const LineColumn = styled.div`\n  /* flexbox column */\n  grid-column-start: 2;\n  grid-row: span 2;\n  padding-right: 5px;\n`;\n\nexport const LegDetails = styled.span`\n  display: grid;\n  grid-template-columns: 100px auto;\n`;\n\nexport const PlaceRowWrapper = styled.li`\n  /* needs to be a flexbox row */\n  max-width: 500px;\n  display: grid;\n  grid-template-columns: 65px 30px auto;\n`;\n\ninterface PreviewContainerProps {\n  active: boolean;\n}\n\nexport const PreviewContainer = styled.div<PreviewContainerProps>`\n  background-color: ${props => props.active && \"#eee\"};\n  border-color: ${props => (props.active ? \"#d1d5da\" : \"#fff\")};\n  border-radius: 5px;\n  border-style: solid;\n  border-width: 1px;\n  display: inline-block;\n  font-style: normal;\n  grid-column: 2;\n  grid-row: 1;\n  margin: 0 4px;\n  position: relative;\n  text-align: center;\n  text-decoration: none;\n  vertical-align: middle;\n  width: 75%;\n\n  &:hover {\n    border-color: #d1d5da;\n    background-color: #f6f8fa;\n  }\n`;\n\nexport const TimeColumn = styled.div`\n  grid-column-start: 1;\n  grid-row: 1 / span 2;\n  padding-right: 5px;\n  font-size: 0.9em;\n`;\n\nexport const MapButton = styled(LinkButton)`\n  padding: 3px 10px 3px 10px;\n  border: 0;\n  margin-top: -15px;\n  width: 35px;\n  height: 35px;\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const MapButtonColumn = styled(LightBorderDiv)`\n  flex: 0 0 25px;\n  grid-column: -1;\n`;\n\nexport const MapIcon = styled(Map).attrs(props => ({\n  fill: props.theme.secondaryColor,\n  width: 15,\n  height: 15,\n  role: \"img\"\n}))``;\n\nexport const PlaceDetails = styled.div`\n  grid-row-start: 2;\n  grid-column-start: 3;\n`;\n\nexport const PlaceHeader = styled.div`\n  display: flex;\n  font-size: 1.2em;\n  grid-row-start: 1;\n  grid-column-start: 3;\n`;\n\nexport const PlaceName = styled.span`\n  /* text styling */\n  font-size: inherit;\n  font-weight: bold;\n  height: 1.2em;\n  margin: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  flex: 1 1 auto;\n  padding: 3px 0 10px 0;\n`;\n\nexport const PlaceSubheader = styled.div`\n  color: #807373;\n  font-size: 13px;\n  font-weight: 300;\n  padding-top: 1px;\n\n  /* Reduce vertical space and fix horizontal alignment of stop id and stop viewer link for transit stops. */\n  /* Also, increase vertical space after so that transit/access instructions\n     aren't too squeezed with the stop id and Stop Viewer link. */\n  margin-bottom: 10px;\n  margin-top: -14px;\n`;\n\nexport const PreviewDiagram = styled(TransparentButton)`\n  padding: 2px;\n  width: 100%;\n`;\n\nexport const PreviewDiagramElevationChange = styled.span`\n  font-size: xx-small;\n  &::before {\n    content: \"\";\n    margin: 0 0.125em;\n  }\n`;\n\nexport const PreviewDiagramElevationGain = styled(\n  PreviewDiagramElevationChange\n)`\n  color: #e60000;\n`;\n\nexport const PreviewDiagramElevationLoss = styled(\n  PreviewDiagramElevationChange\n)`\n  color: green;\n`;\n\nexport const PreviewDiagramTitle = styled.div`\n  font-size: small;\n`;\n\ninterface RouteBadgeProps {\n  routeColor: string;\n  theme?: {\n    badgeBorderColor?: string;\n    mainColor?: string;\n  };\n}\n\nexport const RouteBadge = styled.div<RouteBadgeProps>`\n  text-align: center;\n  min-width: 30px;\n  min-height: 30px;\n  font-size: 1.2em;\n  background-color: ${props =>\n    toSafeRouteColor(props.routeColor) || props.theme.mainColor};\n  color: white;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-left: 1px;\n  /* Add in border for dark mode */\n  border: 1px solid ${props => props.theme.badgeBorderColor};\n  user-select: none;\n  cursor: default;\n`;\n\nexport const SROnly = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n`;\n\nexport const SRHidden = styled.span.attrs({ \"aria-hidden\": true })``;\n\nexport const Steps = styled.ol`\n  display: block;\n  list-style: none;\n  padding: 0;\n`;\n\nexport const StepDescriptionContainer = styled.div`\n  margin-left: 24px;\n  line-height: 1.25em;\n  padding-top: 1px;\n\n  & > span {\n    margin-right: 1ch;\n  }\n`;\n\nexport const StepsHeaderAndMapLink = styled.span`\n  display: inline-flex;\n  align-self: center;\n  margin-top: 10px;\n\n  /* This is needed to avoid vertical jumps on Safari and Firefox */\n  a {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nconst stepsHeaderStyling = css`\n  color: #676767;\n  font-size: 13px;\n  font-style: normal;\n  padding: 0;\n`;\n\nexport const StepsHeaderButton = styled(TransparentButton)`\n  ${stepsHeaderStyling}\n`;\n\nexport const StepsHeaderSpan = styled.span`\n  ${stepsHeaderStyling}\n  margin-right: 0.4em;\n`;\n\nexport const StepIconContainer = styled.div`\n  fill: #676767;\n  float: left;\n  height: 16px;\n  width: 16px;\n`;\n\nexport const StepRow = styled.li`\n  font-size: 13px;\n  margin-top: 8px;\n  color: #676767;\n  font-style: normal;\n`;\n\nexport const StepStreetName = styled.span`\n  font-weight: 500;\n`;\n\nexport const StepLength = styled.span`\n  font-weight: 200;\n  /* This is the lowest opacity which still meets AA text color contrast standards */\n  opacity: 0.8975;\n  padding-left: 1ch;\n`;\n\nexport const StopIdSpan = styled.span`\n  font-weight: 200;\n  font-size: 0.9em;\n  margin-left: 10px;\n`;\n\nexport const StopMarker = styled.div`\n  float: left;\n  margin-left: -36px;\n  color: #fff;\n`;\n\nexport const StopName = styled.div`\n  color: #676767;\n  margin-top: 3px;\n`;\n\nexport const StopRow = styled.li`\n  z-index: 30;\n  position: relative;\n`;\n\nexport const TransitAlert = styled.a`\n  background-color: #eee;\n  border-radius: 4px;\n  color: #000;\n  display: block;\n  margin-top: 5px;\n  padding: 8px;\n  text-decoration: none;\n`;\n\nexport const TransitAlertBody = styled.div`\n  font-size: 12px;\n  margin-left: 30px;\n  white-space: pre-wrap;\n`;\n\nexport const TransitAlertEffectiveDate = styled.div`\n  margin-top: 5px;\n  margin-left: 30px;\n  font-size: 12px;\n  font-style: italic;\n`;\n\nexport const TransitAlertHeader = styled.div`\n  font-size: 14px;\n  margin-left: 30px;\n  font-weight: 600;\n`;\n\nexport const TransitAlertIconContainer = styled.div`\n  float: left;\n  font-size: 18px;\n`;\n\nexport const TransitAlerts = styled.div`\n  display: block;\n  margin-top: 3px;\n`;\n\nexport const TransitAlertToggle = styled(TransparentButton)`\n  color: #d14727;\n  cursor: pointer;\n  display: inline-block;\n  font-weight: 400;\n  margin-top: 8px;\n  padding: 0;\n`;\n\nexport const TransitLegDetails = styled.div`\n  margin-top: 5px;\n`;\n\nexport const TransitLegDetailsHeader = styled.div`\n  color: #676767;\n  display: flex;\n`;\n\nexport const TransitLegExpandedBody = styled.div`\n  font-size: 14px;\n`;\n\nexport const TransitLegFare = styled.div`\n  /* no styling */\n`;\n\nexport const TransitLegSummary = styled(TransparentButton)`\n  padding: 0;\n`;\n\nexport const DefaultAlertToggleIcon = styled(ExclamationTriangle).attrs({\n  size: 15\n})``;\n\nexport const DefaultAlertBodyIcon = styled(ExclamationTriangle).attrs({\n  size: 18\n})``;\n\nexport const AgencyInfo = styled.div`\n  margin-top: 5px;\n\n  a {\n    color: #337ab7;\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n\n  img {\n    margin-left: 5px;\n    vertical-align: middle;\n  }\n`;\n"],"file":"styled.js"}