{"version":3,"sources":["../../src/defaults/route-description.tsx"],"names":["RouteDescription","leg","routeShortName"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AAGA;;;;;;AAEe,SAASA,gBAAT,CAA0B;AACvCC,EAAAA;AADuC,CAA1B,EAEyB;AACtC,QAAMC,cAAc,GAAG,qCAAqBD,GAArB,CAAvB;AACA,sBACE,6BAAC,CAAD,CAAG,wBAAH,QACGC,cAAc,iBACb,uDACE,6BAAC,CAAD,CAAG,4BAAH,QACGA,cADH,CADF,CAFJ,eAQE,6BAAC,CAAD,CAAG,2BAAH,qBACE,6BAAC,sBAAD;AAAe,IAAA,GAAG,EAAED;AAApB,IADF,CARF,CADF;AAcD","sourcesContent":["import { getLegRouteShortName } from \"@opentripplanner/core-utils/lib/itinerary\";\nimport React, { ReactElement } from \"react\";\n\nimport * as S from \"../styled\";\nimport { RouteDescriptionProps } from \"../types\";\n\nimport RouteLongName from \"./route-long-name\";\n\nexport default function RouteDescription({\n  leg\n}: RouteDescriptionProps): ReactElement {\n  const routeShortName = getLegRouteShortName(leg);\n  return (\n    <S.LegDescriptionForTransit>\n      {routeShortName && (\n        <div>\n          <S.LegDescriptionRouteShortName>\n            {routeShortName}\n          </S.LegDescriptionRouteShortName>\n        </div>\n      )}\n      <S.LegDescriptionRouteLongName>\n        <RouteLongName leg={leg} />\n      </S.LegDescriptionRouteLongName>\n    </S.LegDescriptionForTransit>\n  );\n}\n"],"file":"route-description.js"}