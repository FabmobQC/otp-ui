{"version":3,"sources":["../../src/AccessLegBody/index.tsx"],"names":["AccessLegBody","Component","constructor","props","onStepsHeaderClick","expanded","state","setState","onSummaryClick","leg","legIndex","setActiveLeg","render","config","diagramVisible","followsTransit","LegIcon","mapillaryCallback","mapillaryKey","setLegDiagram","showElevationProfile","showLegIcon","TransitLegSubheader","hideDrivingDirections","itinerary","mode","rideHailingEstimate","mapillary","from","rentedVehicle","rentedBike","rentedCar","stopId","duration","steps","length","defaultMessages","gridColumn"],"mappings":"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","sourcesContent":["import { Config, Leg, LegIconComponent } from \"@opentripplanner/types\";\nimport React, { Component, FunctionComponent, ReactElement } from \"react\";\nimport AnimateHeight from \"react-animate-height\";\nimport { FormattedMessage } from \"react-intl\";\nimport { Duration } from \"../defaults\";\n\nimport * as S from \"../styled\";\nimport { SetActiveLegFunction, TransitLegSubheaderProps } from \"../types\";\n\nimport AccessLegSteps from \"./access-leg-steps\";\nimport AccessLegSummary from \"./access-leg-summary\";\nimport LegDiagramPreview from \"./leg-diagram-preview\";\nimport MapillaryButton from \"./mapillary-button\";\nimport RentedVehicleSubheader from \"./rented-vehicle-subheader\";\nimport TNCLeg from \"./tnc-leg\";\n\nimport { defaultMessages } from \"../util\";\n\ninterface Props {\n  config: Config & {\n    itinerary?: {\n      hideDrivingDirections?: boolean;\n    };\n  };\n  /**\n   * Should be either null or a legType. Indicates that a particular leg diagram\n   * has been selected and is active.\n   */\n  diagramVisible?: Leg;\n  followsTransit?: boolean;\n  leg: Leg;\n  LegIcon: LegIconComponent;\n  legIndex: number;\n  mapillaryCallback?: (id: string) => void;\n  mapillaryKey?: string;\n  setActiveLeg: SetActiveLegFunction;\n  setLegDiagram: (leg: Leg) => void;\n  showElevationProfile: boolean;\n  showLegIcon: boolean;\n  TransitLegSubheader?: FunctionComponent<TransitLegSubheaderProps>;\n}\n\ninterface State {\n  expanded: boolean;\n}\n\n/**\n * Component for access (e.g. walk/bike/etc.) leg in narrative itinerary. This\n * particular component is used in the line-itin (i.e., trimet-mod-otp) version\n * of the narrative itinerary.\n */\nclass AccessLegBody extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { expanded: false };\n  }\n\n  onStepsHeaderClick = (): void => {\n    const { expanded } = this.state;\n    this.setState({ expanded: !expanded });\n  };\n\n  onSummaryClick = (): void => {\n    const { leg, legIndex, setActiveLeg } = this.props;\n    setActiveLeg(legIndex, leg);\n  };\n\n  render(): ReactElement {\n    const {\n      config,\n      diagramVisible,\n      followsTransit,\n      leg,\n      LegIcon,\n      mapillaryCallback,\n      mapillaryKey,\n      setLegDiagram,\n      showElevationProfile,\n      showLegIcon,\n      TransitLegSubheader\n    } = this.props;\n    const { expanded } = this.state;\n\n    const hideDrivingDirections =\n      config?.itinerary?.hideDrivingDirections && leg.mode === \"CAR\";\n\n    if (leg.mode === \"CAR\" && leg.rideHailingEstimate) {\n      return (\n        <TNCLeg\n          config={config}\n          followsTransit={followsTransit}\n          leg={leg}\n          LegIcon={LegIcon}\n          onSummaryClick={this.onSummaryClick}\n          showLegIcon={showLegIcon}\n        />\n      );\n    }\n\n    const mapillary = (\n      <MapillaryButton\n        clickCallback={mapillaryCallback}\n        coords={leg.from}\n        mapillaryKey={mapillaryKey}\n      />\n    );\n    return (\n      <>\n        {/* Place subheading: rented vehicle (e.g., scooter, bike, car)\n pickup */}\n        {leg && (leg.rentedVehicle || leg.rentedBike || leg.rentedCar) && (\n          <RentedVehicleSubheader config={config} leg={leg} />\n        )}\n        {leg.from.stopId && TransitLegSubheader && (\n          <TransitLegSubheader leg={leg} />\n        )}\n        <S.LegBody>\n          <AccessLegSummary\n            config={config}\n            leg={leg}\n            LegIcon={LegIcon}\n            onSummaryClick={this.onSummaryClick}\n            showLegIcon={showLegIcon}\n          />\n          <S.LegDetails>\n            {hideDrivingDirections ? (\n              <S.StepsHeaderAndMapLink>\n                <S.StepsHeaderSpan>\n                  <Duration seconds={leg.duration} />\n                </S.StepsHeaderSpan>\n                {mapillary}\n              </S.StepsHeaderAndMapLink>\n            ) : (\n              <>\n                <S.StepsHeaderAndMapLink>\n                  <S.StepsHeaderButton\n                    aria-expanded={expanded}\n                    onClick={this.onStepsHeaderClick}\n                  >\n                    <Duration seconds={leg.duration} />\n                    {leg.steps && leg.steps.length > 0 && (\n                      <S.CaretToggle expanded={expanded} />\n                    )}\n\n                    <S.InvisibleAdditionalDetails>\n                      <FormattedMessage\n                        defaultMessage={\n                          defaultMessages[\"otpUi.TransitLegBody.expandDetails\"]\n                        }\n                        description=\"Screen reader text added to expand steps\"\n                        id=\"otpUi.TransitLegBody.expandDetails\"\n                      />\n                    </S.InvisibleAdditionalDetails>\n                  </S.StepsHeaderButton>\n                  {mapillary}\n                </S.StepsHeaderAndMapLink>\n                <AnimateHeight\n                  duration={500}\n                  height={expanded ? \"auto\" : 0}\n                  style={{ gridColumn: \"1 / span 2\" }}\n                >\n                  <AccessLegSteps\n                    mapillaryCallback={mapillaryCallback}\n                    mapillaryKey={mapillaryKey}\n                    steps={leg.steps}\n                  />\n                </AnimateHeight>\n              </>\n            )}\n            <LegDiagramPreview\n              diagramVisible={diagramVisible}\n              leg={leg}\n              setLegDiagram={setLegDiagram}\n              showElevationProfile={showElevationProfile}\n            />\n          </S.LegDetails>\n        </S.LegBody>\n      </>\n    );\n  }\n}\n\nexport default AccessLegBody;\n\nexport {\n  AccessLegSteps,\n  AccessLegSummary,\n  LegDiagramPreview,\n  RentedVehicleSubheader,\n  S as Styled,\n  TNCLeg\n};\n"],"file":"index.js"}