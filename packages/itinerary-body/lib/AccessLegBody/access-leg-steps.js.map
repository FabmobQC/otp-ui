{"version":3,"sources":["../../src/AccessLegBody/access-leg-steps.tsx"],"names":["AccessLegSteps","steps","mapillaryCallback","mapillaryKey","map","step","k","lat","lon","relativeDirection"],"mappings":";;;;;;;;;AAEA;;AACA;;AAGA;;AACA;;AACA;;;;;;AARA;AACA;;AAeA;AACA;AACA;AACe,SAASA,cAAT,CAAwB;AACrCC,EAAAA,KADqC;AAErCC,EAAAA,iBAFqC;AAGrCC,EAAAA;AAHqC,CAAxB,EAIS;AACtB,sBACE,6BAAC,CAAD,CAAG,KAAH,QACGF,KAAK,CAACG,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;AACtB,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA,GAAP;AAAYC,MAAAA;AAAZ,QAAkCJ,IAAxC;AACA,wBACE,6BAAC,CAAD,CAAG,OAAH;AAAW,MAAA,GAAG,EAAEC;AAAhB,oBACE,6BAAC,CAAD,CAAG,iBAAH,qBACE,6BAAC,oBAAD;AAAe,MAAA,iBAAiB,EAAEG;AAAlC,MADF,CADF,eAKE,6BAAC,CAAD,CAAG,wBAAH,qBACE,6BAAC,sBAAD;AAAe,MAAA,IAAI,EAAEJ;AAArB,MADF,eAEE,6BAAC,wBAAD;AACE,MAAA,aAAa,EAAEH,iBADjB;AAEE,MAAA,MAAM,EAAE;AAAEK,QAAAA,GAAF;AAAOC,QAAAA;AAAP,OAFV;AAGE,MAAA,YAAY,EAAEL;AAHhB,MAFF,CALF,CADF;AAgBD,GAlBA,CADH,CADF;AAuBD","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore FIXME: Create TypeScript types for the icons package.\nimport { DirectionIcon } from \"@opentripplanner/icons\";\nimport React, { ReactElement } from \"react\";\nimport { Step } from \"@opentripplanner/types\";\n\nimport * as S from \"../styled\";\nimport MapillaryButton from \"./mapillary-button\";\nimport AccessLegStep from \"../defaults/access-leg-step\";\n\ninterface Props {\n  mapillaryCallback?: (id: string) => void;\n  mapillaryKey?: string;\n  steps: Step[];\n}\n\n/**\n * Renders a turn-by-turn step of an access leg.\n */\nexport default function AccessLegSteps({\n  steps,\n  mapillaryCallback,\n  mapillaryKey\n}: Props): ReactElement {\n  return (\n    <S.Steps>\n      {steps.map((step, k) => {\n        const { lat, lon, relativeDirection } = step;\n        return (\n          <S.StepRow key={k}>\n            <S.StepIconContainer>\n              <DirectionIcon relativeDirection={relativeDirection} />\n            </S.StepIconContainer>\n\n            <S.StepDescriptionContainer>\n              <AccessLegStep step={step} />\n              <MapillaryButton\n                clickCallback={mapillaryCallback}\n                coords={{ lat, lon }}\n                mapillaryKey={mapillaryKey}\n              />\n            </S.StepDescriptionContainer>\n          </S.StepRow>\n        );\n      })}\n    </S.Steps>\n  );\n}\n"],"file":"access-leg-steps.js"}