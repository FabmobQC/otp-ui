{"version":3,"sources":["../../src/otp-react-redux/route-description.tsx"],"names":["RouteDescription","leg","LegIcon","routeShortName"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;AAGe,SAASA,gBAAT,CAA0B;AACvCC,EAAAA,GADuC;AAEvCC,EAAAA;AAFuC,CAA1B,EAGyB;AACtC,QAAMC,cAAc,GAAG,qCAAqBF,GAArB,CAAvB;AACA,sBACE,6BAAC,CAAD,CAAG,wBAAH,qBACE,6BAAC,CAAD,CAAG,wBAAH,qBACE,6BAAC,CAAD,CAAG,gBAAH,qBACE,6BAAC,OAAD;AAAS,IAAA,GAAG,EAAEA;AAAd,IADF,CADF,EAIGE,cAAc,iBACb,6BAAC,CAAD,CAAG,4BAAH,QACGA,cADH,CALJ,CADF,eAWE,6BAAC,CAAD,CAAG,2BAAH,qBACE,6BAAC,sBAAD;AAAe,IAAA,GAAG,EAAEF;AAApB,IADF,CAXF,CADF;AAiBD","sourcesContent":["import { getLegRouteShortName } from \"@opentripplanner/core-utils/lib/itinerary\";\nimport React, { ReactElement } from \"react\";\n\nimport RouteLongName from \"../defaults/route-long-name\";\nimport * as S from \"../styled\";\nimport { RouteDescriptionProps } from \"../types\";\n\nexport default function RouteDescription({\n  leg,\n  LegIcon\n}: RouteDescriptionProps): ReactElement {\n  const routeShortName = getLegRouteShortName(leg);\n  return (\n    <S.LegDescriptionForTransit>\n      <S.LegIconAndRouteShortName>\n        <S.LegIconContainer>\n          <LegIcon leg={leg} />\n        </S.LegIconContainer>\n        {routeShortName && (\n          <S.LegDescriptionRouteShortName>\n            {routeShortName}\n          </S.LegDescriptionRouteShortName>\n        )}\n      </S.LegIconAndRouteShortName>\n      <S.LegDescriptionRouteLongName>\n        <RouteLongName leg={leg} />\n      </S.LegDescriptionRouteLongName>\n    </S.LegDescriptionForTransit>\n  );\n}\n"],"file":"route-description.js"}