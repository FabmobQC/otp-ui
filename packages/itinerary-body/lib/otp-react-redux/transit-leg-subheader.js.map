{"version":3,"sources":["../../src/otp-react-redux/transit-leg-subheader.tsx"],"names":["getDisplayedStopId","isFlex","coreUtils","itinerary","TransitLegSubheader","leg","onStopClick","from","defaultMessages","stopId","stop"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAEA;;AAEA;;;;;;AAEA,MAAM;AAAEA,EAAAA,kBAAF;AAAsBC,EAAAA;AAAtB,IAAiCC,mBAAUC,SAAjD;;AAEe,SAASC,mBAAT,CAA6B;AAC1CC,EAAAA,GAD0C;AAE1CC,EAAAA;AAF0C,CAA7B,EAG4B;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAWF,GAAjB;AACA,sBACE,6BAAC,CAAD,CAAG,cAAH,qBACE,6BAAC,2BAAD;AACE,IAAA,cAAc,EAAEG,sBAAgB,6BAAhB,CADlB;AAEE,IAAA,WAAW,EAAC,sBAFd;AAGE,IAAA,EAAE,EAAC,6BAHL;AAIE,IAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAET,kBAAkB,CAACO,IAAD;AADpB;AAJV,IADF,EASG,CAACN,MAAM,CAACI,GAAD,CAAP,iBACC,6BAAC,uBAAD;AAAgB,IAAA,WAAW,EAAEC,WAA7B;AAA0C,IAAA,IAAI,EAAEC,IAAI,CAACG;AAArD,IAVJ,CADF;AAeD","sourcesContent":["import coreUtils from \"@opentripplanner/core-utils\";\nimport React, { ReactElement } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n\nimport * as S from \"../styled\";\nimport { TransitLegSubheaderProps } from \"../types\";\nimport { defaultMessages } from \"../util\";\n\nimport ViewStopButton from \"./view-stop-button\";\n\nconst { getDisplayedStopId, isFlex } = coreUtils.itinerary;\n\nexport default function TransitLegSubheader({\n  leg,\n  onStopClick\n}: TransitLegSubheaderProps): ReactElement {\n  const { from } = leg;\n  return (\n    <S.PlaceSubheader>\n      <FormattedMessage\n        defaultMessage={defaultMessages[\"otpUi.TransitLegBody.stopId\"]}\n        description=\"Displays the stop ID\"\n        id=\"otpUi.TransitLegBody.stopId\"\n        values={{\n          stopId: getDisplayedStopId(from)\n        }}\n      />\n      {!isFlex(leg) && (\n        <ViewStopButton onStopClick={onStopClick} stop={from.stop} />\n      )}\n    </S.PlaceSubheader>\n  );\n}\n"],"file":"transit-leg-subheader.js"}