{"version":3,"sources":["../src/index.tsx"],"names":["defaultMessages","defaultEnglishMessages","generateLocation","entity","name","lon","entityLon","lat","entityLat","x","y","StationHubDetails","station","value","bikesAvailable","spacesAvailable","StopDetails","id","setViewedStop","stopId","entityIsStation","MapPopup","configCompanies","getEntityName","setLocation","intl","getNameFunc","bikesAvailablePresent","entityIsStationHub","undefined","isFloatingBike","code","split"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\n\nimport { Styled as BaseMapStyled } from \"@opentripplanner/base-map\";\nimport FromToLocationPicker from \"@opentripplanner/from-to-location-picker\";\n// eslint-disable-next-line prettier/prettier\nimport type { Company, ConfiguredCompany, Location, Station, Stop, StopEventHandler } from \"@opentripplanner/types\";\n\nimport { FormattedMessage, useIntl } from \"react-intl\";\nimport { flatten } from \"flat\";\nimport * as S from \"./styled\";\n\n// Load the default messages.\nimport defaultEnglishMessages from \"../i18n/en-US.yml\";\nimport { makeDefaultGetEntityName } from \"./util\";\n\n// HACK: We should flatten the messages loaded above because\n// the YAML loaders behave differently between webpack and our version of jest:\n// - the yaml loader for webpack returns a nested object,\n// - the yaml loader for jest returns messages with flattened ids.\nexport const defaultMessages: { [key: string]: string } = flatten(defaultEnglishMessages);\n\nconst generateLocation = (entity: Entity, name: string) => {\n  // @ts-expect-error some of these values may be null, but that's ok\n  const { lon: entityLon, lat: entityLat, x, y } = entity\n\n  const lat = entityLat || y\n  const lon = entityLon || x\n  if (!lat || !lon) return null\n\n  return { lat, lon, name };\n}\n\nconst StationHubDetails = ({ station }: { station: Station }) => {\n  return (\n    <BaseMapStyled.PopupRow>\n      <div>\n        <FormattedMessage\n          defaultMessage={\n            defaultMessages[\"otpUi.MapPopup.availableBikes\"]\n          }\n          description=\"Label text for the number of bikes available\"\n          id=\"otpUi.MapPopup.availableBikes\"\n          values={{ value: station.bikesAvailable }}\n        />\n      </div>\n      <div>\n        <FormattedMessage\n          defaultMessage={\n            defaultMessages[\"otpUi.MapPopup.availableDocks\"]\n          }\n          description=\"Label text for the number of docks available\"\n          id=\"otpUi.MapPopup.availableDocks\"\n          values={{ value: station.spacesAvailable }}\n        />\n      </div>\n    </BaseMapStyled.PopupRow>\n  )\n}\n\nconst StopDetails = ({ id, setViewedStop }: { id: string, setViewedStop: () => void; }) => {\n  return (\n    <BaseMapStyled.PopupRow>\n      <strong>\n        <FormattedMessage\n          defaultMessage={defaultMessages[\"otpUi.MapPopup.stopId\"]}\n          description=\"Displays the stop id\"\n          id=\"otpUi.MapPopup.stopId\"\n          values={{\n            stopId: id\n          }}\n        />\n      </strong>\n      <S.ViewStopButton onClick={setViewedStop}>\n        <FormattedMessage\n          defaultMessage={defaultMessages[\"otpUi.MapPopup.stopViewer\"]}\n          description=\"Text for link that opens the stop viewer\"\n          id=\"otpUi.MapPopup.stopViewer\"\n        />\n      </S.ViewStopButton>\n    </BaseMapStyled.PopupRow>\n  )\n}\n\ntype Entity = Stop | Station\ntype Props = {\n  configCompanies?: ConfiguredCompany[];\n  entity: Entity\n  getEntityName?: (entity: Entity, configCompanies: Company[],) => string;\n  setLocation?: ({ location, locationType }: { location: Location, locationType: string }) => void;\n  setViewedStop?: StopEventHandler;\n};\n\nfunction entityIsStation(entity: Entity): entity is Station {\n  return \"bikesAvailable\" in entity\n}\n\n/**\n * Renders a map popup for a stop, scooter, or shared bike\n */\nexport function MapPopup({ configCompanies, entity, getEntityName, setLocation, setViewedStop }: Props): JSX.Element {\n  const intl = useIntl()\n  if (!entity) return <></>\n\n  const getNameFunc = getEntityName || makeDefaultGetEntityName(intl, defaultMessages);\n  const name = getNameFunc(entity, configCompanies);\n\n\n  const bikesAvailablePresent = entityIsStation(entity)\n  const entityIsStationHub = bikesAvailablePresent && entity?.bikesAvailable !== undefined && !entity?.isFloatingBike;\n  const stopId = !bikesAvailablePresent && entity?.code || entity.id.split(\":\")[1] || entity.id\n\n  return (\n    <BaseMapStyled.MapOverlayPopup>\n      <BaseMapStyled.PopupTitle>{name}</BaseMapStyled.PopupTitle>\n      {/* render dock info if it is available */}\n      {entityIsStationHub && <StationHubDetails station={entity} />}\n\n      {/* render stop viewer link if available */}\n      {setViewedStop && !bikesAvailablePresent && (\n        <StopDetails\n          id={stopId}\n          setViewedStop={useCallback(() => setViewedStop(entity), [entity])}\n        />\n      )}\n\n      {/* The \"Set as [from/to]\" ButtonGroup */}\n      {setLocation && (\n        <BaseMapStyled.PopupRow>\n          <FromToLocationPicker\n            label\n            location={generateLocation(entity, name)}\n            setLocation={setLocation}\n          />\n        </BaseMapStyled.PopupRow>\n      )}\n    </BaseMapStyled.MapOverlayPopup>\n  );\n}\n\nexport default MapPopup;\n\n// Rename styled components for export.\nexport { S as Styled };\n"],"file":"index.js"}