{"version":3,"sources":["../src/util.ts"],"names":["coreUtils","makeDefaultGetEntityName","intl","defaultEnglishMessages","defaultGetEntityName","entity","configCompanies","stationNetworks","itinerary","getCompaniesLabelFromNetworks","networks","stationName","name","id","match","length","isFloatingBike","formatMessage","defaultMessage","description","isFloatingCar","company","isFloatingVehicle"],"mappings":"AAEA,OAAOA,SAAP,MAAsB,6BAAtB,C,CAEA;;AACA,OAAO,SAASC,wBAAT,CACLC,IADK,EAELC,sBAFK,EAGL;AACA,SAAO,SAASC,oBAAT,CACLC,MADK,EAELC,eAFK,EAGU;AAAA;;AACf,QAAMC,eAAe,GACnB,cAAcF,MAAd,KACCL,SAAS,CAACQ,SAAV,CAAoBC,6BAApB,CACC,CAAAJ,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEK,QAAR,KAAoB,EADrB,EAECJ,eAFD,MAICD,MAJD,aAICA,MAJD,2CAICA,MAAM,CAAEK,QAJT,qDAIC,iBAAmB,CAAnB,CAJD,CADD,CADF;AAOA,QAAIC,WAA0B,GAAGN,MAAM,CAACO,IAAP,IAAeP,MAAM,CAACQ,EAAvD,CARe,CASf;AACA;;AACA,QAAI,CAACF,WAAW,CAACG,KAAZ,CAAkB,IAAlB,KAA2B,EAA5B,EAAgCC,MAAhC,GAAyC,CAA7C,EAAgD;AAC9CJ,MAAAA,WAAW,GAAG,IAAd;AACD;;AAED,QAAI,oBAAoBN,MAApB,IAA8BA,MAAM,CAACW,cAAzC,EAAyD;AACvDL,MAAAA,WAAW,GAAGT,IAAI,CAACe,aAAL,CACZ;AACEC,QAAAA,cAAc,EAAEf,sBAAsB,CAAC,6BAAD,CADxC;AAEEgB,QAAAA,WAAW,EAAE,sCAFf;AAGEN,QAAAA,EAAE,EAAE;AAHN,OADY,EAMZ;AAAED,QAAAA,IAAI,EAAED,WAAW,IAAIJ;AAAvB,OANY,CAAd;AAQD,KATD,MASO,IAAI,mBAAmBF,MAAnB,IAA6BA,MAAM,CAACe,aAAxC,EAAuD;AAC5DT,MAAAA,WAAW,GAAGT,IAAI,CAACe,aAAL,CACZ;AACEC,QAAAA,cAAc,EAAEf,sBAAsB,CAAC,4BAAD,CADxC;AAEEgB,QAAAA,WAAW,EAAE,qCAFf;AAGEN,QAAAA,EAAE,EAAE;AAHN,OADY,EAMZ;AACEQ,QAAAA,OAAO,EAAEd,eADX;AAEEK,QAAAA,IAAI,EAAED;AAFR,OANY,CAAd;AAWD,KAZM,MAYA,IAAI,uBAAuBN,MAAvB,IAAiCA,MAAM,CAACiB,iBAA5C,EAA+D;AACpE;AACAX,MAAAA,WAAW,GAAGT,IAAI,CAACe,aAAL,CACZ;AACEC,QAAAA,cAAc,EACZf,sBAAsB,CAAC,iCAAD,CAF1B;AAGEgB,QAAAA,WAAW,EAAE,2CAHf;AAIEN,QAAAA,EAAE,EAAE;AAJN,OADY,EAOZ;AAAED,QAAAA,IAAI,EAAED,WAAW,IAAIJ;AAAvB,OAPY,CAAd;AASD;;AACD,WAAOI,WAAP;AACD,GApDD;AAqDD","sourcesContent":["import { Company, Station, Stop } from \"@opentripplanner/types\";\nimport { IntlShape } from \"react-intl\";\nimport coreUtils from \"@opentripplanner/core-utils\";\n\n// eslint-disable-next-line import/prefer-default-export\nexport function makeDefaultGetEntityName(\n  intl: IntlShape,\n  defaultEnglishMessages: { [key: string]: string }\n) {\n  return function defaultGetEntityName(\n    entity: Station | Stop,\n    configCompanies: Company[]\n  ): string | null {\n    const stationNetworks =\n      \"networks\" in entity &&\n      (coreUtils.itinerary.getCompaniesLabelFromNetworks(\n        entity?.networks || [],\n        configCompanies\n      ) ||\n        entity?.networks?.[0]);\n    let stationName: string | null = entity.name || entity.id;\n    // If the station name or id is a giant UUID (with more than 3 \"-\" characters)\n    // best not to show that at all. The company name will still be shown.\n    if ((stationName.match(/-/g) || []).length > 3) {\n      stationName = null;\n    }\n\n    if (\"isFloatingBike\" in entity && entity.isFloatingBike) {\n      stationName = intl.formatMessage(\n        {\n          defaultMessage: defaultEnglishMessages[\"otpUi.MapPopup.floatingBike\"],\n          description: \"Popup title for a free-floating bike\",\n          id: \"otpUi.MapPopup.floatingBike\"\n        },\n        { name: stationName || stationNetworks }\n      );\n    } else if (\"isFloatingCar\" in entity && entity.isFloatingCar) {\n      stationName = intl.formatMessage(\n        {\n          defaultMessage: defaultEnglishMessages[\"otpUi.MapPopup.floatingCar\"],\n          description: \"Popup title for a free-floating car\",\n          id: \"otpUi.MapPopup.floatingCar\"\n        },\n        {\n          company: stationNetworks,\n          name: stationName\n        }\n      );\n    } else if (\"isFloatingVehicle\" in entity && entity.isFloatingVehicle) {\n      // assumes that all floating vehicles are E-scooters\n      stationName = intl.formatMessage(\n        {\n          defaultMessage:\n            defaultEnglishMessages[\"otpUi.MapPopup.floatingEScooter\"],\n          description: \"Popup title for a free-floating e-scooter\",\n          id: \"otpUi.MapPopup.floatingEScooter\"\n        },\n        { name: stationName || stationNetworks }\n      );\n    }\n    return stationName;\n  };\n}\n"],"file":"util.js"}