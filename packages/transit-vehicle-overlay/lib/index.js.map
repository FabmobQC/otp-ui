{"version":3,"sources":["../src/index.tsx"],"names":["DefaultIconContainer","Circle","offset","TransitVehicleOverlay","defaultMode","IconContainer","iconPadding","iconPixels","ModeIcon","TooltipSlot","VehicleTooltip","VehicleIcon","DefaultVehicleIcon","vehicles","validVehicles","filter","vehicle","lat","lon","length","StyledContainer","map","vehicleId","routeShortName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AAOA;;AAKA;;;;;;AA6CA,MAAMA,oBAAoB,GAAG,wBAAUC,cAAV,EAAkB;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAlB,CAA7B;AAEA;AACA;AACA;;;;AACA,MAAMC,qBAAqB,GAAG,CAAC;AAC7BC,EAAAA,WAAW,GAAG,KADe;AAE7BC,EAAAA,aAAa,GAAGL,oBAFa;AAG7BM,EAAAA,WAAW,GAAG,CAHe;AAI7BC,EAAAA,UAAU,GAAG,EAJgB;AAK7BC,EAAAA,QAL6B;AAM7BC,EAAAA,WAAW,GAAGC,uBANe;AAO7BC,EAAAA,WAAW,GAAGC,oBAPe;AAQ7BC,EAAAA;AAR6B,CAAD,KASN;AACtB,QAAMC,aAAa,GAAGD,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEE,MAAV,CACpBC,OAAO,IAAI,CAAC,EAACA,OAAD,aAACA,OAAD,eAACA,OAAO,CAAEC,GAAV,CAAD,IAAkB,CAAC,EAACD,OAAD,aAACA,OAAD,eAACA,OAAO,CAAEE,GAAV,CADV,CAAtB,CADsB,CAItB;AACA;;AACA,MAAI,CAACJ,aAAD,IAAkBA,aAAa,CAACK,MAAd,KAAyB,CAA/C,EAAkD;AAChD,WAAO,IAAP;AACD;;AAED,QAAMC,eAAe,GAAG,gCACtBf,aADsB,EAEtBC,WAFsB,EAGtBC,UAHsB,CAAxB;AAMA,SAAOO,aAAP,aAAOA,aAAP,uBAAOA,aAAa,CAAEO,GAAf,CAAmBL,OAAO,iBAC/B,6BAAC,wBAAD;AACE,IAAA,GAAG,EAAEA,OAAO,CAACM,SADf,CAEE;AAFF;AAGE,IAAA,UAAU,EAAE;AAAEpB,MAAAA,MAAM,EAAE,CAAC,CAACK,UAAD,GAAc,CAAd,GAAkBD,WAAnB,EAAgC,CAAhC;AAAV,KAHd;AAIE,IAAA,QAAQ,EAAE,CAACU,OAAO,CAACC,GAAT,EAAcD,OAAO,CAACE,GAAtB,CAJZ;AAKE,IAAA,eAAe,EACbF,OAAO,CAACO,cAAR,iBAA0B,6BAAC,WAAD;AAAa,MAAA,OAAO,EAAEP;AAAtB;AAN9B,kBASE,6BAAC,eAAD;AAAiB,IAAA,OAAO,EAAEA;AAA1B,kBACE,6BAAC,WAAD;AACE,IAAA,WAAW,EAAEZ,WADf;AAEE,IAAA,QAAQ,EAAEI,QAFZ;AAGE,IAAA,OAAO,EAAEQ;AAHX,IADF,CATF,CADK,CAAP;AAmBD,CA5CD;;eA8Ceb,qB,EAEf","sourcesContent":["import { MarkerWithPopup } from \"@opentripplanner/base-map\";\nimport { TransitVehicle } from \"@opentripplanner/types\";\nimport React, { FC, ReactNode } from \"react\";\n\nimport withCaret from \"./WithCaret\";\nimport {\n  Circle,\n  getStyledContainer,\n  RotatingCircle,\n  withRouteColorBackground\n} from \"./styled\";\nimport { VehicleComponentProps } from \"./types\";\nimport DefaultVehicleIcon, {\n  ModeIconProps,\n  RouteNumberIcon,\n  VehicleIconProps\n} from \"./VehicleIcon\";\nimport VehicleTooltip from \"./VehicleTooltip\";\n\ntype Props = {\n  /**\n   * Default mode to assume if not provided in the vehicle data. Defaults to \"bus\".\n   */\n  defaultMode?: string;\n\n  /**\n   * Containing component in which route icons/numbers are rendered.\n   * Can optionally support a vehicle prop.\n   */\n  IconContainer?: FC;\n\n  /**\n   * Sets the padding between component and icon in IconContainer instances that support it.\n   */\n  iconPadding?: number;\n\n  /**\n   * Sets the size in pixels of the icon in IconContainer instances that support it.\n   */\n  iconPixels?: number;\n\n  /**\n   * Component that renders the icons given transit modes.\n   */\n  ModeIcon: FC<ModeIconProps>;\n\n  /**\n   * A tooltip JSX to render\n   */\n  TooltipSlot?: FC<VehicleComponentProps>;\n\n  /**\n   * Component that renders the icons or other content such as route number for each transit vehicle.\n   */\n  VehicleIcon?: FC<VehicleIconProps>;\n\n  /**\n   * The list of vehicles to create stop markers for.\n   */\n  vehicles?: TransitVehicle[];\n};\n\nconst DefaultIconContainer = withCaret(Circle, { offset: 3.75 });\n\n/**\n * An overlay to view a collection of transit vehicles.\n */\nconst TransitVehicleOverlay = ({\n  defaultMode = \"bus\",\n  IconContainer = DefaultIconContainer,\n  iconPadding = 2,\n  iconPixels = 20,\n  ModeIcon,\n  TooltipSlot = VehicleTooltip,\n  VehicleIcon = DefaultVehicleIcon,\n  vehicles\n}: Props): ReactNode => {\n  const validVehicles = vehicles?.filter(\n    vehicle => !!vehicle?.lat && !!vehicle?.lon\n  );\n  // Don't render if no map or no vehicles are defined.\n  // (ZoomBasedMarkers will also not render below the minimum zoom threshold defined in the symbols prop.)\n  if (!validVehicles || validVehicles.length === 0) {\n    return null;\n  }\n\n  const StyledContainer = getStyledContainer(\n    IconContainer,\n    iconPadding,\n    iconPixels\n  );\n\n  return validVehicles?.map(vehicle => (\n    <MarkerWithPopup\n      key={vehicle.vehicleId}\n      // @ts-expect-error the prop override doesn't require all props to be present\n      popupProps={{ offset: [-iconPixels / 2 - iconPadding, 0] }}\n      position={[vehicle.lat, vehicle.lon]}\n      tooltipContents={\n        vehicle.routeShortName && <TooltipSlot vehicle={vehicle} />\n      }\n    >\n      <StyledContainer vehicle={vehicle}>\n        <VehicleIcon\n          defaultMode={defaultMode}\n          ModeIcon={ModeIcon}\n          vehicle={vehicle}\n        />\n      </StyledContainer>\n    </MarkerWithPopup>\n  ));\n};\n\nexport default TransitVehicleOverlay;\n\n// Export the other subcomponents.\nexport {\n  Circle,\n  DefaultIconContainer,\n  DefaultVehicleIcon,\n  RotatingCircle,\n  RouteNumberIcon,\n  withCaret,\n  withRouteColorBackground\n};\n"],"file":"index.js"}