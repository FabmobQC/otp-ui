{"version":3,"sources":["../src/VehicleIcon.tsx"],"names":["React","RouteNumberIcon","vehicle","routeShortName","length","size","Math","max","VehicleIcon","defaultMode","ModeIcon","mode","routeType"],"mappings":"AAAA,OAAOA,KAAP,MAAwC,OAAxC;;AAgBA;AACA;AACA;AACA,OAAO,SAASC,eAAT,OAEiC;AAAA,MADtCC,OACsC,QADtCA,OACsC;AACtC,MAAQC,cAAR,GAA2BD,OAA3B,CAAQC,cAAR;AACA,MAAMC,MAAM,GAAG,CAAAD,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEC,MAAhB,KAA0B,CAAzC;AACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,GAAL,CAASH,MAAM,GAAG,CAAlB,EAAqB,EAArB,CAAb;AACA,SAAOD,cAAc;AAAA;AACnB;AACA;AACA;AACA;AAAK,IAAA,OAAO,gBAASE,IAAT,cAAiBA,IAAjB;AAAZ,kBACE;AAAM,IAAA,UAAU,EAAC,QAAjB;AAA0B,IAAA,CAAC,EAAC,KAA5B;AAAkC,IAAA,CAAC,EAAEA,IAAI,GAAG,CAAP,GAAW;AAAhD,KACGF,cADH,CADF,CAJmB;AAAA;AAUnB;AACA,2DAXF;AAaD;AAED;AACA;AACA;AACA;;AACA,eAAe,SAASK,WAAT,QAIoB;AAAA,MAHjCC,WAGiC,SAHjCA,WAGiC;AAAA,MAFjCC,QAEiC,SAFjCA,QAEiC;AAAA,MADjCR,OACiC,SADjCA,OACiC;AACjC;AACA;AACA,SACEQ,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAET,OAAO,CAACU,SAAR,IAAqBH;AAA7B,GAAD,CAAR,iBACE,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAEP;AAA1B,IAFJ;AAKD","sourcesContent":["import React, { FC, ReactElement } from \"react\";\n\nimport { VehicleComponentProps } from \"./types\";\n\n/**\n * Fill-in type for the icons package.\n */\nexport interface ModeIconProps {\n  mode?: string;\n}\n\nexport interface VehicleIconProps extends VehicleComponentProps {\n  defaultMode?: string;\n  ModeIcon: FC<ModeIconProps>;\n}\n\n/**\n * Renders the route number so it gets fitted into the icon shape.\n */\nexport function RouteNumberIcon({\n  vehicle\n}: VehicleComponentProps): ReactElement {\n  const { routeShortName } = vehicle;\n  const length = routeShortName?.length || 0;\n  const size = Math.max(length * 8, 20);\n  return routeShortName ? (\n    // Render as SVG to autofit the icon regardless of the ambient font size,\n    // while centering horizontally and vertically and reducing size for larger route short names\n    // (see for instance https://css-tricks.com/fitting-text-to-a-container/#aa-just-use-svg).\n    <svg viewBox={`0 0 ${size} ${size}`}>\n      <text textAnchor=\"middle\" x=\"50%\" y={size / 2 + 4.5}>\n        {routeShortName}\n      </text>\n    </svg>\n  ) : (\n    // Default content is an emoji, but emojis don't work in SVG mode.\n    <>ðŸšŒ</>\n  );\n}\n\n/**\n * Renders the associated mode icon for the given transit vehicle and ModeIcon component.\n * Falls back to the route short name if no icon is found for the desired mode.\n */\nexport default function VehicleIcon({\n  defaultMode,\n  ModeIcon,\n  vehicle\n}: VehicleIconProps): ReactElement {\n  // Try to see if content is returned by the ModeIcon function component,\n  // if null, fall back to route number.\n  return (\n    ModeIcon({ mode: vehicle.routeType || defaultMode }) || (\n      <RouteNumberIcon vehicle={vehicle} />\n    )\n  );\n}\n"],"file":"VehicleIcon.js"}