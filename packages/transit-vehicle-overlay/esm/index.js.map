{"version":3,"sources":["../src/index.tsx"],"names":["MarkerWithPopup","React","withCaret","Circle","getStyledContainer","RotatingCircle","withRouteColorBackground","DefaultVehicleIcon","RouteNumberIcon","VehicleTooltip","DefaultIconContainer","offset","TransitVehicleOverlay","defaultMode","IconContainer","iconPadding","iconPixels","ModeIcon","TooltipSlot","VehicleIcon","vehicles","validVehicles","filter","vehicle","lat","lon","length","StyledContainer","map","vehicleId","routeShortName"],"mappings":"AAAA,SAASA,eAAT,QAAgC,2BAAhC;AAEA,OAAOC,KAAP,MAAqC,OAArC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SACEC,MADF,EAEEC,kBAFF,EAGEC,cAHF,EAIEC,wBAJF,QAKO,UALP;AAOA,OAAOC,kBAAP,IAEEC,eAFF,QAIO,eAJP;AAKA,OAAOC,cAAP,MAA2B,kBAA3B;AA6CA,IAAMC,oBAAoB,GAAGR,SAAS,CAACC,MAAD,EAAS;AAAEQ,EAAAA,MAAM,EAAE;AAAV,CAAT,CAAtC;AAEA;AACA;AACA;;AACA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,OASN;AAAA,8BARtBC,WAQsB;AAAA,MARtBA,WAQsB,iCARR,KAQQ;AAAA,gCAPtBC,aAOsB;AAAA,MAPtBA,aAOsB,mCAPNJ,oBAOM;AAAA,8BANtBK,WAMsB;AAAA,MANtBA,WAMsB,iCANR,CAMQ;AAAA,6BALtBC,UAKsB;AAAA,MALtBA,UAKsB,gCALT,EAKS;AAAA,MAJtBC,QAIsB,QAJtBA,QAIsB;AAAA,8BAHtBC,WAGsB;AAAA,MAHtBA,WAGsB,iCAHRT,cAGQ;AAAA,8BAFtBU,WAEsB;AAAA,MAFtBA,WAEsB,iCAFRZ,kBAEQ;AAAA,MADtBa,QACsB,QADtBA,QACsB;AACtB,MAAMC,aAAa,GAAGD,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEE,MAAV,CACpB,UAAAC,OAAO;AAAA,WAAI,CAAC,EAACA,OAAD,aAACA,OAAD,eAACA,OAAO,CAAEC,GAAV,CAAD,IAAkB,CAAC,EAACD,OAAD,aAACA,OAAD,eAACA,OAAO,CAAEE,GAAV,CAAvB;AAAA,GADa,CAAtB,CADsB,CAItB;AACA;;AACA,MAAI,CAACJ,aAAD,IAAkBA,aAAa,CAACK,MAAd,KAAyB,CAA/C,EAAkD;AAChD,WAAO,IAAP;AACD;;AAED,MAAMC,eAAe,GAAGvB,kBAAkB,CACxCU,aADwC,EAExCC,WAFwC,EAGxCC,UAHwC,CAA1C;AAMA,SAAOK,aAAP,aAAOA,aAAP,uBAAOA,aAAa,CAAEO,GAAf,CAAmB,UAAAL,OAAO;AAAA,wBAC/B,oBAAC,eAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACM,SADf,CAEE;AAFF;AAGE,MAAA,UAAU,EAAE;AAAElB,QAAAA,MAAM,EAAE,CAAC,CAACK,UAAD,GAAc,CAAd,GAAkBD,WAAnB,EAAgC,CAAhC;AAAV,OAHd;AAIE,MAAA,QAAQ,EAAE,CAACQ,OAAO,CAACC,GAAT,EAAcD,OAAO,CAACE,GAAtB,CAJZ;AAKE,MAAA,eAAe,EACbF,OAAO,CAACO,cAAR,iBAA0B,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAEP;AAAtB;AAN9B,oBASE,oBAAC,eAAD;AAAiB,MAAA,OAAO,EAAEA;AAA1B,oBACE,oBAAC,WAAD;AACE,MAAA,WAAW,EAAEV,WADf;AAEE,MAAA,QAAQ,EAAEI,QAFZ;AAGE,MAAA,OAAO,EAAEM;AAHX,MADF,CATF,CAD+B;AAAA,GAA1B,CAAP;AAmBD,CA5CD;;AA8CA,eAAeX,qBAAf,C,CAEA;;AACA,SACET,MADF,EAEEO,oBAFF,EAGEH,kBAHF,EAIEF,cAJF,EAKEG,eALF,EAMEN,SANF,EAOEI,wBAPF","sourcesContent":["import { MarkerWithPopup } from \"@opentripplanner/base-map\";\nimport { TransitVehicle } from \"@opentripplanner/types\";\nimport React, { FC, ReactNode } from \"react\";\n\nimport withCaret from \"./WithCaret\";\nimport {\n  Circle,\n  getStyledContainer,\n  RotatingCircle,\n  withRouteColorBackground\n} from \"./styled\";\nimport { VehicleComponentProps } from \"./types\";\nimport DefaultVehicleIcon, {\n  ModeIconProps,\n  RouteNumberIcon,\n  VehicleIconProps\n} from \"./VehicleIcon\";\nimport VehicleTooltip from \"./VehicleTooltip\";\n\ntype Props = {\n  /**\n   * Default mode to assume if not provided in the vehicle data. Defaults to \"bus\".\n   */\n  defaultMode?: string;\n\n  /**\n   * Containing component in which route icons/numbers are rendered.\n   * Can optionally support a vehicle prop.\n   */\n  IconContainer?: FC;\n\n  /**\n   * Sets the padding between component and icon in IconContainer instances that support it.\n   */\n  iconPadding?: number;\n\n  /**\n   * Sets the size in pixels of the icon in IconContainer instances that support it.\n   */\n  iconPixels?: number;\n\n  /**\n   * Component that renders the icons given transit modes.\n   */\n  ModeIcon: FC<ModeIconProps>;\n\n  /**\n   * A tooltip JSX to render\n   */\n  TooltipSlot?: FC<VehicleComponentProps>;\n\n  /**\n   * Component that renders the icons or other content such as route number for each transit vehicle.\n   */\n  VehicleIcon?: FC<VehicleIconProps>;\n\n  /**\n   * The list of vehicles to create stop markers for.\n   */\n  vehicles?: TransitVehicle[];\n};\n\nconst DefaultIconContainer = withCaret(Circle, { offset: 3.75 });\n\n/**\n * An overlay to view a collection of transit vehicles.\n */\nconst TransitVehicleOverlay = ({\n  defaultMode = \"bus\",\n  IconContainer = DefaultIconContainer,\n  iconPadding = 2,\n  iconPixels = 20,\n  ModeIcon,\n  TooltipSlot = VehicleTooltip,\n  VehicleIcon = DefaultVehicleIcon,\n  vehicles\n}: Props): ReactNode => {\n  const validVehicles = vehicles?.filter(\n    vehicle => !!vehicle?.lat && !!vehicle?.lon\n  );\n  // Don't render if no map or no vehicles are defined.\n  // (ZoomBasedMarkers will also not render below the minimum zoom threshold defined in the symbols prop.)\n  if (!validVehicles || validVehicles.length === 0) {\n    return null;\n  }\n\n  const StyledContainer = getStyledContainer(\n    IconContainer,\n    iconPadding,\n    iconPixels\n  );\n\n  return validVehicles?.map(vehicle => (\n    <MarkerWithPopup\n      key={vehicle.vehicleId}\n      // @ts-expect-error the prop override doesn't require all props to be present\n      popupProps={{ offset: [-iconPixels / 2 - iconPadding, 0] }}\n      position={[vehicle.lat, vehicle.lon]}\n      tooltipContents={\n        vehicle.routeShortName && <TooltipSlot vehicle={vehicle} />\n      }\n    >\n      <StyledContainer vehicle={vehicle}>\n        <VehicleIcon\n          defaultMode={defaultMode}\n          ModeIcon={ModeIcon}\n          vehicle={vehicle}\n        />\n      </StyledContainer>\n    </MarkerWithPopup>\n  ));\n};\n\nexport default TransitVehicleOverlay;\n\n// Export the other subcomponents.\nexport {\n  Circle,\n  DefaultIconContainer,\n  DefaultVehicleIcon,\n  RotatingCircle,\n  RouteNumberIcon,\n  withCaret,\n  withRouteColorBackground\n};\n"],"file":"index.js"}